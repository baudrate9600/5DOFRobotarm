
RobotArm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800100  00001612  000016a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001612  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000011  00800118  00800118  000016be  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000016be  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000171c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  0000175c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000132a  00000000  00000000  0000186c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a8b  00000000  00000000  00002b96  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008fb  00000000  00000000  00003621  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002fc  00000000  00000000  00003f1c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008ca  00000000  00000000  00004218  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000986  00000000  00000000  00004ae2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  00005468  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 75 00 	jmp	0xea	; 0xea <__ctors_end>
       4:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
       8:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
       c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      10:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      14:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      18:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      1c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      20:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      24:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      28:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      2c:	0c 94 cd 03 	jmp	0x79a	; 0x79a <__vector_11>
      30:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      34:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      38:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      3c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      40:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      44:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      48:	0c 94 9e 00 	jmp	0x13c	; 0x13c <__vector_18>
      4c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      50:	0c 94 94 00 	jmp	0x128	; 0x128 <__vector_20>
      54:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      58:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      5c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      60:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      64:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      68:	07 63       	ori	r16, 0x37	; 55
      6a:	42 36       	cpi	r20, 0x62	; 98
      6c:	b7 9b       	sbis	0x16, 7	; 22
      6e:	d8 a7       	std	Y+40, r29	; 0x28
      70:	1a 39       	cpi	r17, 0x9A	; 154
      72:	68 56       	subi	r22, 0x68	; 104
      74:	18 ae       	std	Y+56, r1	; 0x38
      76:	ba ab       	std	Y+50, r27	; 0x32
      78:	55 8c       	ldd	r5, Z+29	; 0x1d
      7a:	1d 3c       	cpi	r17, 0xCD	; 205
      7c:	b7 cc       	rjmp	.-1682   	; 0xfffff9ec <__eeprom_end+0xff7ef9ec>
      7e:	57 63       	ori	r21, 0x37	; 55
      80:	bd 6d       	ori	r27, 0xDD	; 221
      82:	ed fd       	.word	0xfded	; ????
      84:	75 3e       	cpi	r23, 0xE5	; 229
      86:	f6 17       	cp	r31, r22
      88:	72 31       	cpi	r23, 0x12	; 18
      8a:	bf 00       	.word	0x00bf	; ????
      8c:	00 00       	nop
      8e:	80 3f       	cpi	r24, 0xF0	; 240
      90:	08 00       	.word	0x0008	; ????
      92:	00 00       	nop
      94:	be 92       	st	-X, r11
      96:	24 49       	sbci	r18, 0x94	; 148
      98:	12 3e       	cpi	r17, 0xE2	; 226
      9a:	ab aa       	std	Y+51, r10	; 0x33
      9c:	aa 2a       	or	r10, r26
      9e:	be cd       	rjmp	.-1156   	; 0xfffffc1c <__eeprom_end+0xff7efc1c>
      a0:	cc cc       	rjmp	.-1640   	; 0xfffffa3a <__eeprom_end+0xff7efa3a>
      a2:	4c 3e       	cpi	r20, 0xEC	; 236
      a4:	00 00       	nop
      a6:	00 80       	ld	r0, Z
      a8:	be ab       	std	Y+54, r27	; 0x36
      aa:	aa aa       	std	Y+50, r10	; 0x32
      ac:	aa 3e       	cpi	r26, 0xEA	; 234
      ae:	00 00       	nop
      b0:	00 00       	nop
      b2:	bf 00       	.word	0x00bf	; ????
      b4:	00 00       	nop
      b6:	80 3f       	cpi	r24, 0xF0	; 240
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	00 08       	sbc	r0, r0
      be:	41 78       	andi	r20, 0x81	; 129
      c0:	d3 bb       	out	0x13, r29	; 19
      c2:	43 87       	std	Z+11, r20	; 0x0b
      c4:	d1 13       	cpse	r29, r17
      c6:	3d 19       	sub	r19, r13
      c8:	0e 3c       	cpi	r16, 0xCE	; 206
      ca:	c3 bd       	out	0x23, r28	; 35
      cc:	42 82       	std	Z+2, r4	; 0x02
      ce:	ad 2b       	or	r26, r29
      d0:	3e 68       	ori	r19, 0x8E	; 142
      d2:	ec 82       	std	Y+4, r14	; 0x04
      d4:	76 be       	out	0x36, r7	; 54
      d6:	d9 8f       	std	Y+25, r29	; 0x19
      d8:	e1 a9       	ldd	r30, Z+49	; 0x31
      da:	3e 4c       	sbci	r19, 0xCE	; 206
      dc:	80 ef       	ldi	r24, 0xF0	; 240
      de:	ff be       	out	0x3f, r15	; 63
      e0:	01 c4       	rjmp	.+2050   	; 0x8e4 <__addsf3x+0xe>
      e2:	ff 7f       	andi	r31, 0xFF	; 255
      e4:	3f 00       	.word	0x003f	; ????
      e6:	00 00       	nop
	...

000000ea <__ctors_end>:
      ea:	11 24       	eor	r1, r1
      ec:	1f be       	out	0x3f, r1	; 63
      ee:	cf ef       	ldi	r28, 0xFF	; 255
      f0:	d8 e0       	ldi	r29, 0x08	; 8
      f2:	de bf       	out	0x3e, r29	; 62
      f4:	cd bf       	out	0x3d, r28	; 61

000000f6 <__do_copy_data>:
      f6:	11 e0       	ldi	r17, 0x01	; 1
      f8:	a0 e0       	ldi	r26, 0x00	; 0
      fa:	b1 e0       	ldi	r27, 0x01	; 1
      fc:	e2 e1       	ldi	r30, 0x12	; 18
      fe:	f6 e1       	ldi	r31, 0x16	; 22
     100:	02 c0       	rjmp	.+4      	; 0x106 <__do_copy_data+0x10>
     102:	05 90       	lpm	r0, Z+
     104:	0d 92       	st	X+, r0
     106:	a8 31       	cpi	r26, 0x18	; 24
     108:	b1 07       	cpc	r27, r17
     10a:	d9 f7       	brne	.-10     	; 0x102 <__do_copy_data+0xc>

0000010c <__do_clear_bss>:
     10c:	21 e0       	ldi	r18, 0x01	; 1
     10e:	a8 e1       	ldi	r26, 0x18	; 24
     110:	b1 e0       	ldi	r27, 0x01	; 1
     112:	01 c0       	rjmp	.+2      	; 0x116 <.do_clear_bss_start>

00000114 <.do_clear_bss_loop>:
     114:	1d 92       	st	X+, r1

00000116 <.do_clear_bss_start>:
     116:	a9 32       	cpi	r26, 0x29	; 41
     118:	b2 07       	cpc	r27, r18
     11a:	e1 f7       	brne	.-8      	; 0x114 <.do_clear_bss_loop>
     11c:	0e 94 7d 02 	call	0x4fa	; 0x4fa <main>
     120:	0c 94 07 0b 	jmp	0x160e	; 0x160e <_exit>

00000124 <__bad_interrupt>:
     124:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000128 <__vector_20>:
	return c;
}



ISR(USART_TX_vect){
     128:	1f 92       	push	r1
     12a:	0f 92       	push	r0
     12c:	0f b6       	in	r0, 0x3f	; 63
     12e:	0f 92       	push	r0
     130:	11 24       	eor	r1, r1
	//if(usart_fifo_counter > 0){
	//	UDR0 = usart_	
	//}	
}
     132:	0f 90       	pop	r0
     134:	0f be       	out	0x3f, r0	; 63
     136:	0f 90       	pop	r0
     138:	1f 90       	pop	r1
     13a:	18 95       	reti

0000013c <__vector_18>:
	uint8_t motor_select; 
	int angle;
	uint8_t done; 
	};
Motor_status motor_status; 
ISR(USART_RX_vect){
     13c:	1f 92       	push	r1
     13e:	0f 92       	push	r0
     140:	0f b6       	in	r0, 0x3f	; 63
     142:	0f 92       	push	r0
     144:	11 24       	eor	r1, r1
     146:	cf 92       	push	r12
     148:	df 92       	push	r13
     14a:	ef 92       	push	r14
     14c:	ff 92       	push	r15
     14e:	1f 93       	push	r17
     150:	2f 93       	push	r18
     152:	3f 93       	push	r19
     154:	4f 93       	push	r20
     156:	5f 93       	push	r21
     158:	6f 93       	push	r22
     15a:	7f 93       	push	r23
     15c:	8f 93       	push	r24
     15e:	9f 93       	push	r25
     160:	af 93       	push	r26
     162:	bf 93       	push	r27
     164:	cf 93       	push	r28
     166:	df 93       	push	r29
     168:	ef 93       	push	r30
     16a:	ff 93       	push	r31
	motor_status.done = 0; 
     16c:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <motor_status+0x3>
	char c = UDR0;
     170:	10 91 c6 00 	lds	r17, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	static int counter = 0; 
	static int sign;
	static float angle; 
	/*finit state machine for recieving data frame */
	switch(parse_state){
     174:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <parse_state>
     178:	81 30       	cpi	r24, 0x01	; 1
     17a:	a9 f0       	breq	.+42     	; 0x1a6 <__vector_18+0x6a>
     17c:	28 f0       	brcs	.+10     	; 0x188 <__vector_18+0x4c>
     17e:	82 30       	cpi	r24, 0x02	; 2
     180:	d1 f0       	breq	.+52     	; 0x1b6 <__vector_18+0x7a>
     182:	83 30       	cpi	r24, 0x03	; 3
     184:	b1 f1       	breq	.+108    	; 0x1f2 <__vector_18+0xb6>
     186:	8b c0       	rjmp	.+278    	; 0x29e <__vector_18+0x162>
				case WAIT: 
					if(c == 'M'){
     188:	1d 34       	cpi	r17, 0x4D	; 77
     18a:	09 f0       	breq	.+2      	; 0x18e <__vector_18+0x52>
     18c:	88 c0       	rjmp	.+272    	; 0x29e <__vector_18+0x162>
						parse_state =MOTOR;
     18e:	81 e0       	ldi	r24, 0x01	; 1
     190:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <parse_state>
						angle = 0; 
     194:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <_ZZ11__vector_18E5angle>
     198:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <_ZZ11__vector_18E5angle+0x1>
     19c:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <_ZZ11__vector_18E5angle+0x2>
     1a0:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <_ZZ11__vector_18E5angle+0x3>
     1a4:	7c c0       	rjmp	.+248    	; 0x29e <__vector_18+0x162>
					}
					break;
				case MOTOR: 
					motor_status.motor_select = c-48; 
     1a6:	60 ed       	ldi	r22, 0xD0	; 208
     1a8:	61 0f       	add	r22, r17
     1aa:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <motor_status>
					parse_state = SIGN;
     1ae:	82 e0       	ldi	r24, 0x02	; 2
     1b0:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <parse_state>
					break; 
     1b4:	74 c0       	rjmp	.+232    	; 0x29e <__vector_18+0x162>
				case SIGN:
					parse_state = ANGLE;
     1b6:	83 e0       	ldi	r24, 0x03	; 3
     1b8:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <parse_state>
					if(c == '-'){
     1bc:	1d 32       	cpi	r17, 0x2D	; 45
     1be:	39 f4       	brne	.+14     	; 0x1ce <__vector_18+0x92>
						sign = -1; 	
     1c0:	8f ef       	ldi	r24, 0xFF	; 255
     1c2:	9f ef       	ldi	r25, 0xFF	; 255
     1c4:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <_ZZ11__vector_18E4sign+0x1>
     1c8:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <_ZZ11__vector_18E4sign>
     1cc:	0b c0       	rjmp	.+22     	; 0x1e4 <__vector_18+0xa8>
					}else if(c == '+'){
     1ce:	1b 32       	cpi	r17, 0x2B	; 43
     1d0:	39 f4       	brne	.+14     	; 0x1e0 <__vector_18+0xa4>
						sign = 1; 		
     1d2:	81 e0       	ldi	r24, 0x01	; 1
     1d4:	90 e0       	ldi	r25, 0x00	; 0
     1d6:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <_ZZ11__vector_18E4sign+0x1>
     1da:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <_ZZ11__vector_18E4sign>
     1de:	02 c0       	rjmp	.+4      	; 0x1e4 <__vector_18+0xa8>
					}else{
						parse_state = WAIT;
     1e0:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <parse_state>
					}
					counter = 3;
     1e4:	83 e0       	ldi	r24, 0x03	; 3
     1e6:	90 e0       	ldi	r25, 0x00	; 0
     1e8:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <__data_end+0x1>
     1ec:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
					break; 
     1f0:	56 c0       	rjmp	.+172    	; 0x29e <__vector_18+0x162>
				case ANGLE: 
					/*5328 is the conversion from ascii to int: 48*100+48*10+48=5328*/
					/*Todo instead of sending the numbers in ascii send it in raw binary*/
					counter--;
     1f2:	c0 91 18 01 	lds	r28, 0x0118	; 0x800118 <__data_end>
     1f6:	d0 91 19 01 	lds	r29, 0x0119	; 0x800119 <__data_end+0x1>
     1fa:	21 97       	sbiw	r28, 0x01	; 1
     1fc:	d0 93 19 01 	sts	0x0119, r29	; 0x800119 <__data_end+0x1>
     200:	c0 93 18 01 	sts	0x0118, r28	; 0x800118 <__data_end>
					angle += (c-48)*pow(10,counter);  
     204:	be 01       	movw	r22, r28
     206:	0d 2e       	mov	r0, r29
     208:	00 0c       	add	r0, r0
     20a:	88 0b       	sbc	r24, r24
     20c:	99 0b       	sbc	r25, r25
     20e:	0e 94 6a 05 	call	0xad4	; 0xad4 <__floatsisf>
     212:	9b 01       	movw	r18, r22
     214:	ac 01       	movw	r20, r24
     216:	60 e0       	ldi	r22, 0x00	; 0
     218:	70 e0       	ldi	r23, 0x00	; 0
     21a:	80 e2       	ldi	r24, 0x20	; 32
     21c:	91 e4       	ldi	r25, 0x41	; 65
     21e:	0e 94 63 06 	call	0xcc6	; 0xcc6 <pow>
     222:	6b 01       	movw	r12, r22
     224:	7c 01       	movw	r14, r24
     226:	61 2f       	mov	r22, r17
     228:	70 e0       	ldi	r23, 0x00	; 0
     22a:	60 53       	subi	r22, 0x30	; 48
     22c:	71 09       	sbc	r23, r1
     22e:	07 2e       	mov	r0, r23
     230:	00 0c       	add	r0, r0
     232:	88 0b       	sbc	r24, r24
     234:	99 0b       	sbc	r25, r25
     236:	0e 94 6a 05 	call	0xad4	; 0xad4 <__floatsisf>
     23a:	a7 01       	movw	r20, r14
     23c:	96 01       	movw	r18, r12
     23e:	0e 94 f6 05 	call	0xbec	; 0xbec <__mulsf3>
     242:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <_ZZ11__vector_18E5angle>
     246:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <_ZZ11__vector_18E5angle+0x1>
     24a:	40 91 1e 01 	lds	r20, 0x011E	; 0x80011e <_ZZ11__vector_18E5angle+0x2>
     24e:	50 91 1f 01 	lds	r21, 0x011F	; 0x80011f <_ZZ11__vector_18E5angle+0x3>
     252:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__addsf3>
     256:	6b 01       	movw	r12, r22
     258:	7c 01       	movw	r14, r24
     25a:	60 93 1c 01 	sts	0x011C, r22	; 0x80011c <_ZZ11__vector_18E5angle>
     25e:	70 93 1d 01 	sts	0x011D, r23	; 0x80011d <_ZZ11__vector_18E5angle+0x1>
     262:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <_ZZ11__vector_18E5angle+0x2>
     266:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <_ZZ11__vector_18E5angle+0x3>
					if(counter == 0){
     26a:	cd 2b       	or	r28, r29
     26c:	c1 f4       	brne	.+48     	; 0x29e <__vector_18+0x162>
						motor_status.angle = angle * sign;
     26e:	c0 e2       	ldi	r28, 0x20	; 32
     270:	d1 e0       	ldi	r29, 0x01	; 1
     272:	60 91 1a 01 	lds	r22, 0x011A	; 0x80011a <_ZZ11__vector_18E4sign>
     276:	70 91 1b 01 	lds	r23, 0x011B	; 0x80011b <_ZZ11__vector_18E4sign+0x1>
     27a:	07 2e       	mov	r0, r23
     27c:	00 0c       	add	r0, r0
     27e:	88 0b       	sbc	r24, r24
     280:	99 0b       	sbc	r25, r25
     282:	0e 94 6a 05 	call	0xad4	; 0xad4 <__floatsisf>
     286:	a7 01       	movw	r20, r14
     288:	96 01       	movw	r18, r12
     28a:	0e 94 f6 05 	call	0xbec	; 0xbec <__mulsf3>
     28e:	0e 94 32 05 	call	0xa64	; 0xa64 <__fixsfsi>
     292:	7a 83       	std	Y+2, r23	; 0x02
     294:	69 83       	std	Y+1, r22	; 0x01
						parse_state = WAIT; 
     296:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <parse_state>
						motor_status.done = 1; 
     29a:	81 e0       	ldi	r24, 0x01	; 1
     29c:	8b 83       	std	Y+3, r24	; 0x03
					}
					break; 
		}	
		

}
     29e:	ff 91       	pop	r31
     2a0:	ef 91       	pop	r30
     2a2:	df 91       	pop	r29
     2a4:	cf 91       	pop	r28
     2a6:	bf 91       	pop	r27
     2a8:	af 91       	pop	r26
     2aa:	9f 91       	pop	r25
     2ac:	8f 91       	pop	r24
     2ae:	7f 91       	pop	r23
     2b0:	6f 91       	pop	r22
     2b2:	5f 91       	pop	r21
     2b4:	4f 91       	pop	r20
     2b6:	3f 91       	pop	r19
     2b8:	2f 91       	pop	r18
     2ba:	1f 91       	pop	r17
     2bc:	ff 90       	pop	r15
     2be:	ef 90       	pop	r14
     2c0:	df 90       	pop	r13
     2c2:	cf 90       	pop	r12
     2c4:	0f 90       	pop	r0
     2c6:	0f be       	out	0x3f, r0	; 63
     2c8:	0f 90       	pop	r0
     2ca:	1f 90       	pop	r1
     2cc:	18 95       	reti

000002ce <_Z9servo_pidP11Servo_motor>:
	uint8_t dir;
	float f_pos;
	int state; 
	float gear_train;
	};
float servo_pid(Servo_motor * motor){
     2ce:	cf 92       	push	r12
     2d0:	df 92       	push	r13
     2d2:	ef 92       	push	r14
     2d4:	ff 92       	push	r15
     2d6:	cf 93       	push	r28
     2d8:	df 93       	push	r29
     2da:	ec 01       	movw	r28, r24
		float error = (motor->target_pos- 0.2f*motor->current_pos);
     2dc:	6b 81       	ldd	r22, Y+3	; 0x03
     2de:	7c 81       	ldd	r23, Y+4	; 0x04
     2e0:	07 2e       	mov	r0, r23
     2e2:	00 0c       	add	r0, r0
     2e4:	88 0b       	sbc	r24, r24
     2e6:	99 0b       	sbc	r25, r25
     2e8:	0e 94 6a 05 	call	0xad4	; 0xad4 <__floatsisf>
     2ec:	6b 01       	movw	r12, r22
     2ee:	7c 01       	movw	r14, r24
     2f0:	69 81       	ldd	r22, Y+1	; 0x01
     2f2:	7a 81       	ldd	r23, Y+2	; 0x02
     2f4:	07 2e       	mov	r0, r23
     2f6:	00 0c       	add	r0, r0
     2f8:	88 0b       	sbc	r24, r24
     2fa:	99 0b       	sbc	r25, r25
     2fc:	0e 94 6a 05 	call	0xad4	; 0xad4 <__floatsisf>
     300:	2d ec       	ldi	r18, 0xCD	; 205
     302:	3c ec       	ldi	r19, 0xCC	; 204
     304:	4c e4       	ldi	r20, 0x4C	; 76
     306:	5e e3       	ldi	r21, 0x3E	; 62
     308:	0e 94 f6 05 	call	0xbec	; 0xbec <__mulsf3>
     30c:	9b 01       	movw	r18, r22
     30e:	ac 01       	movw	r20, r24
     310:	c7 01       	movw	r24, r14
     312:	b6 01       	movw	r22, r12
     314:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__subsf3>
     318:	6b 01       	movw	r12, r22
     31a:	7c 01       	movw	r14, r24


		int16_t derivative =  (int)(error - motor->derror);
		motor->derror = error;
     31c:	6b 87       	std	Y+11, r22	; 0x0b
     31e:	7c 87       	std	Y+12, r23	; 0x0c
     320:	8d 87       	std	Y+13, r24	; 0x0d
     322:	9e 87       	std	Y+14, r25	; 0x0e
		int32_t temp = motor->integral;
		temp+= error; 
     324:	6f 81       	ldd	r22, Y+7	; 0x07
     326:	78 85       	ldd	r23, Y+8	; 0x08
     328:	89 85       	ldd	r24, Y+9	; 0x09
     32a:	9a 85       	ldd	r25, Y+10	; 0x0a
     32c:	0e 94 6a 05 	call	0xad4	; 0xad4 <__floatsisf>
     330:	a7 01       	movw	r20, r14
     332:	96 01       	movw	r18, r12
     334:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__addsf3>
     338:	0e 94 32 05 	call	0xa64	; 0xa64 <__fixsfsi>
		if(abs(temp)<motor->max_integral){
     33c:	ab 01       	movw	r20, r22
     33e:	77 23       	and	r23, r23
     340:	24 f4       	brge	.+8      	; 0x34a <_Z9servo_pidP11Servo_motor+0x7c>
     342:	44 27       	eor	r20, r20
     344:	55 27       	eor	r21, r21
     346:	46 1b       	sub	r20, r22
     348:	57 0b       	sbc	r21, r23
     34a:	2d 81       	ldd	r18, Y+5	; 0x05
     34c:	3e 81       	ldd	r19, Y+6	; 0x06
     34e:	42 17       	cp	r20, r18
     350:	53 07       	cpc	r21, r19
     352:	24 f4       	brge	.+8      	; 0x35c <_Z9servo_pidP11Servo_motor+0x8e>
			motor->integral = temp; 
     354:	6f 83       	std	Y+7, r22	; 0x07
     356:	78 87       	std	Y+8, r23	; 0x08
     358:	89 87       	std	Y+9, r24	; 0x09
     35a:	9a 87       	std	Y+10, r25	; 0x0a
		}
		motor->proportional = motor->P*error;
     35c:	69 89       	ldd	r22, Y+17	; 0x11
     35e:	7a 89       	ldd	r23, Y+18	; 0x12
     360:	07 2e       	mov	r0, r23
     362:	00 0c       	add	r0, r0
     364:	88 0b       	sbc	r24, r24
     366:	99 0b       	sbc	r25, r25
     368:	0e 94 6a 05 	call	0xad4	; 0xad4 <__floatsisf>
     36c:	a7 01       	movw	r20, r14
     36e:	96 01       	movw	r18, r12
     370:	0e 94 f6 05 	call	0xbec	; 0xbec <__mulsf3>
     374:	6b 01       	movw	r12, r22
     376:	7c 01       	movw	r14, r24
     378:	0e 94 32 05 	call	0xa64	; 0xa64 <__fixsfsi>
     37c:	78 8b       	std	Y+16, r23	; 0x10
     37e:	6f 87       	std	Y+15, r22	; 0x0f
		
		return motor->P*error +motor->I*motor->integral;
     380:	6f 81       	ldd	r22, Y+7	; 0x07
     382:	78 85       	ldd	r23, Y+8	; 0x08
     384:	89 85       	ldd	r24, Y+9	; 0x09
     386:	9a 85       	ldd	r25, Y+10	; 0x0a
     388:	0e 94 6a 05 	call	0xad4	; 0xad4 <__floatsisf>
     38c:	2b 89       	ldd	r18, Y+19	; 0x13
     38e:	3c 89       	ldd	r19, Y+20	; 0x14
     390:	4d 89       	ldd	r20, Y+21	; 0x15
     392:	5e 89       	ldd	r21, Y+22	; 0x16
     394:	0e 94 f6 05 	call	0xbec	; 0xbec <__mulsf3>
     398:	a7 01       	movw	r20, r14
     39a:	96 01       	movw	r18, r12
     39c:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__addsf3>
}
     3a0:	df 91       	pop	r29
     3a2:	cf 91       	pop	r28
     3a4:	ff 90       	pop	r15
     3a6:	ef 90       	pop	r14
     3a8:	df 90       	pop	r13
     3aa:	cf 90       	pop	r12
     3ac:	08 95       	ret

000003ae <_Z12servo_rotatefPVhhh>:
/*Servo Control */
void servo_rotate(float val,volatile uint8_t * pwm, uint8_t dir_a,uint8_t dir_b){
     3ae:	ef 92       	push	r14
     3b0:	ff 92       	push	r15
     3b2:	0f 93       	push	r16
     3b4:	cf 93       	push	r28
     3b6:	7a 01       	movw	r14, r20
     3b8:	c2 2f       	mov	r28, r18
	int speed = (float)val;
     3ba:	0e 94 32 05 	call	0xa64	; 0xa64 <__fixsfsi>
     3be:	ab 01       	movw	r20, r22
	if (speed > 0){
     3c0:	16 16       	cp	r1, r22
     3c2:	17 06       	cpc	r1, r23
     3c4:	44 f4       	brge	.+16     	; 0x3d6 <_Z12servo_rotatefPVhhh+0x28>
		SERVO_REGISTER |= dir_a  ;
     3c6:	2b b1       	in	r18, 0x0b	; 11
     3c8:	c2 2b       	or	r28, r18
     3ca:	cb b9       	out	0x0b, r28	; 11
		SERVO_REGISTER &= ~dir_b;
     3cc:	2b b1       	in	r18, 0x0b	; 11
     3ce:	00 95       	com	r16
     3d0:	02 23       	and	r16, r18
     3d2:	0b b9       	out	0x0b, r16	; 11
     3d4:	0b c0       	rjmp	.+22     	; 0x3ec <_Z12servo_rotatefPVhhh+0x3e>
		}else{
		SERVO_REGISTER &= ~dir_a;
     3d6:	2b b1       	in	r18, 0x0b	; 11
     3d8:	c0 95       	com	r28
     3da:	c2 23       	and	r28, r18
     3dc:	cb b9       	out	0x0b, r28	; 11
		SERVO_REGISTER |= dir_b;
     3de:	2b b1       	in	r18, 0x0b	; 11
     3e0:	02 2b       	or	r16, r18
     3e2:	0b b9       	out	0x0b, r16	; 11
		speed *= -1;
     3e4:	44 27       	eor	r20, r20
     3e6:	55 27       	eor	r21, r21
     3e8:	46 1b       	sub	r20, r22
     3ea:	57 0b       	sbc	r21, r23
	}
	*pwm = speed;
     3ec:	f7 01       	movw	r30, r14
     3ee:	40 83       	st	Z, r20
}
     3f0:	cf 91       	pop	r28
     3f2:	0f 91       	pop	r16
     3f4:	ff 90       	pop	r15
     3f6:	ef 90       	pop	r14
     3f8:	08 95       	ret

000003fa <_Z14stepper_rotateP13Stepper_motorhh>:
void stepper_rotate(Stepper_motor *motor,uint8_t dir, uint8_t step){
     3fa:	0f 93       	push	r16
     3fc:	1f 93       	push	r17
     3fe:	cf 93       	push	r28
     400:	df 93       	push	r29
	switch (motor->state){
     402:	fc 01       	movw	r30, r24
     404:	24 85       	ldd	r18, Z+12	; 0x0c
     406:	35 85       	ldd	r19, Z+13	; 0x0d
     408:	21 30       	cpi	r18, 0x01	; 1
     40a:	31 05       	cpc	r19, r1
     40c:	81 f0       	breq	.+32     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     40e:	22 30       	cpi	r18, 0x02	; 2
     410:	31 05       	cpc	r19, r1
     412:	09 f4       	brne	.+2      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
     414:	57 c0       	rjmp	.+174    	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
     416:	23 2b       	or	r18, r19
     418:	09 f0       	breq	.+2      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
     41a:	6a c0       	rjmp	.+212    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
		case 0:
			if(motor->start == 1){
     41c:	20 81       	ld	r18, Z
     41e:	21 30       	cpi	r18, 0x01	; 1
     420:	09 f0       	breq	.+2      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
     422:	66 c0       	rjmp	.+204    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
				motor->state = 1; 
     424:	21 e0       	ldi	r18, 0x01	; 1
     426:	30 e0       	ldi	r19, 0x00	; 0
     428:	35 87       	std	Z+13, r19	; 0x0d
     42a:	24 87       	std	Z+12, r18	; 0x0c
     42c:	61 c0       	rjmp	.+194    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     42e:	14 2f       	mov	r17, r20
     430:	06 2f       	mov	r16, r22
     432:	ec 01       	movw	r28, r24
			}	
			break;
		case 1:
			motor->diff = (motor->target_pos - motor->pos)/motor->gear_train;
     434:	63 81       	ldd	r22, Z+3	; 0x03
     436:	74 81       	ldd	r23, Z+4	; 0x04
     438:	81 81       	ldd	r24, Z+1	; 0x01
     43a:	92 81       	ldd	r25, Z+2	; 0x02
     43c:	68 1b       	sub	r22, r24
     43e:	79 0b       	sbc	r23, r25
     440:	07 2e       	mov	r0, r23
     442:	00 0c       	add	r0, r0
     444:	88 0b       	sbc	r24, r24
     446:	99 0b       	sbc	r25, r25
     448:	0e 94 6a 05 	call	0xad4	; 0xad4 <__floatsisf>
     44c:	2e 85       	ldd	r18, Y+14	; 0x0e
     44e:	3f 85       	ldd	r19, Y+15	; 0x0f
     450:	48 89       	ldd	r20, Y+16	; 0x10
     452:	59 89       	ldd	r21, Y+17	; 0x11
     454:	0e 94 c0 04 	call	0x980	; 0x980 <__divsf3>
     458:	0e 94 32 05 	call	0xa64	; 0xa64 <__fixsfsi>
     45c:	9b 01       	movw	r18, r22
     45e:	7e 83       	std	Y+6, r23	; 0x06
     460:	6d 83       	std	Y+5, r22	; 0x05
			motor->state = 2; 
     462:	82 e0       	ldi	r24, 0x02	; 2
     464:	90 e0       	ldi	r25, 0x00	; 0
     466:	9d 87       	std	Y+13, r25	; 0x0d
     468:	8c 87       	std	Y+12, r24	; 0x0c
			if(motor->diff > 0){
     46a:	12 16       	cp	r1, r18
     46c:	13 06       	cpc	r1, r19
     46e:	34 f4       	brge	.+12     	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
				STEPPER_REGISTER |= dir;
     470:	65 b1       	in	r22, 0x05	; 5
     472:	60 2b       	or	r22, r16
     474:	65 b9       	out	0x05, r22	; 5
				motor->dir = 1;
     476:	81 e0       	ldi	r24, 0x01	; 1
     478:	8f 83       	std	Y+7, r24	; 0x07
     47a:	09 c0       	rjmp	.+18     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
			}else if(motor->diff < 0){
     47c:	33 23       	and	r19, r19
     47e:	3c f4       	brge	.+14     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
				STEPPER_REGISTER &= ~dir; 
     480:	85 b1       	in	r24, 0x05	; 5
     482:	60 2f       	mov	r22, r16
     484:	60 95       	com	r22
     486:	68 23       	and	r22, r24
     488:	65 b9       	out	0x05, r22	; 5
				motor->dir = -1; 
     48a:	8f ef       	ldi	r24, 0xFF	; 255
     48c:	8f 83       	std	Y+7, r24	; 0x07
			}
			STEPPER_REGISTER &= ~step; 
     48e:	85 b1       	in	r24, 0x05	; 5
     490:	41 2f       	mov	r20, r17
     492:	40 95       	com	r20
     494:	48 23       	and	r20, r24
     496:	45 b9       	out	0x05, r20	; 5
			motor->diff = abs(motor->diff); 
     498:	8d 81       	ldd	r24, Y+5	; 0x05
     49a:	9e 81       	ldd	r25, Y+6	; 0x06
     49c:	99 23       	and	r25, r25
     49e:	1c f4       	brge	.+6      	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
     4a0:	91 95       	neg	r25
     4a2:	81 95       	neg	r24
     4a4:	91 09       	sbc	r25, r1
     4a6:	9e 83       	std	Y+6, r25	; 0x06
     4a8:	8d 83       	std	Y+5, r24	; 0x05
			motor->f_pos = motor->pos;
     4aa:	69 81       	ldd	r22, Y+1	; 0x01
     4ac:	7a 81       	ldd	r23, Y+2	; 0x02
     4ae:	07 2e       	mov	r0, r23
     4b0:	00 0c       	add	r0, r0
     4b2:	88 0b       	sbc	r24, r24
     4b4:	99 0b       	sbc	r25, r25
     4b6:	0e 94 6a 05 	call	0xad4	; 0xad4 <__floatsisf>
     4ba:	68 87       	std	Y+8, r22	; 0x08
     4bc:	79 87       	std	Y+9, r23	; 0x09
     4be:	8a 87       	std	Y+10, r24	; 0x0a
     4c0:	9b 87       	std	Y+11, r25	; 0x0b
			break; 
     4c2:	16 c0       	rjmp	.+44     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
		case 2: 
			if(STEPPER_REGISTER & step){
     4c4:	25 b1       	in	r18, 0x05	; 5
     4c6:	24 23       	and	r18, r20
     4c8:	81 f0       	breq	.+32     	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
				motor->diff--;	
     4ca:	fc 01       	movw	r30, r24
     4cc:	25 81       	ldd	r18, Z+5	; 0x05
     4ce:	36 81       	ldd	r19, Z+6	; 0x06
     4d0:	21 50       	subi	r18, 0x01	; 1
     4d2:	31 09       	sbc	r19, r1
     4d4:	36 83       	std	Z+6, r19	; 0x06
     4d6:	25 83       	std	Z+5, r18	; 0x05
				if(motor->diff == 0){
     4d8:	23 2b       	or	r18, r19
     4da:	39 f4       	brne	.+14     	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
					motor->state = 0; 
     4dc:	15 86       	std	Z+13, r1	; 0x0d
     4de:	14 86       	std	Z+12, r1	; 0x0c
					motor->start = 0;
     4e0:	10 82       	st	Z, r1
					motor->pos=motor->target_pos;
     4e2:	23 81       	ldd	r18, Z+3	; 0x03
     4e4:	34 81       	ldd	r19, Z+4	; 0x04
     4e6:	32 83       	std	Z+2, r19	; 0x02
     4e8:	21 83       	std	Z+1, r18	; 0x01
				}
			}
			STEPPER_REGISTER ^= step;
     4ea:	85 b1       	in	r24, 0x05	; 5
     4ec:	48 27       	eor	r20, r24
     4ee:	45 b9       	out	0x05, r20	; 5
			break; 
	}
}
     4f0:	df 91       	pop	r29
     4f2:	cf 91       	pop	r28
     4f4:	1f 91       	pop	r17
     4f6:	0f 91       	pop	r16
     4f8:	08 95       	ret

000004fa <main>:

int main(void)
{
     4fa:	cf 93       	push	r28
     4fc:	df 93       	push	r29
     4fe:	cd b7       	in	r28, 0x3d	; 61
     500:	de b7       	in	r29, 0x3e	; 62
     502:	c1 57       	subi	r28, 0x71	; 113
     504:	d1 09       	sbc	r29, r1
     506:	0f b6       	in	r0, 0x3f	; 63
     508:	f8 94       	cli
     50a:	de bf       	out	0x3e, r29	; 62
     50c:	0f be       	out	0x3f, r0	; 63
     50e:	cd bf       	out	0x3d, r28	; 61

	
	/* initialize component */ 
	sei();
     510:	78 94       	sei
	timer_enable();	
     512:	0e 94 a1 03 	call	0x742	; 0x742 <_Z12timer_enablev>
	usart_enable(9600);
     516:	80 e8       	ldi	r24, 0x80	; 128
     518:	95 e2       	ldi	r25, 0x25	; 37
     51a:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <_Z12usart_enablej>
	
    /* Replace with your application code */
	uint8_t tacho_values;
	uint8_t tacho_state = 0;
	int16_t tacho = 0;
	DDRD &= ~TACHO_0_M;
     51e:	55 98       	cbi	0x0a, 5	; 10
	DDRD &= ~TACHO_0_P; 
     520:	52 98       	cbi	0x0a, 2	; 10

	/* Initialize servo motors */
	DDRD |= SERVO_0_EN | SERVO_0_DIR_A | SERVO_0_DIR_B;
     522:	8a b1       	in	r24, 0x0a	; 10
     524:	88 6c       	ori	r24, 0xC8	; 200
     526:	8a b9       	out	0x0a, r24	; 10
	TCCR2A |= (1 << COM2B1 ) | (1 << WGM21) | (1 << WGM20); /*Fast PWM */
     528:	e0 eb       	ldi	r30, 0xB0	; 176
     52a:	f0 e0       	ldi	r31, 0x00	; 0
     52c:	80 81       	ld	r24, Z
     52e:	83 62       	ori	r24, 0x23	; 35
     530:	80 83       	st	Z, r24
	TCCR2B |= (1 << CS20); /*No prescaling */
     532:	e1 eb       	ldi	r30, 0xB1	; 177
     534:	f0 e0       	ldi	r31, 0x00	; 0
     536:	80 81       	ld	r24, Z
     538:	81 60       	ori	r24, 0x01	; 1
     53a:	80 83       	st	Z, r24
	/* PID */
	int16_t error = 0;	
	
	Servo_motor servo0 ={0};
     53c:	fe 01       	movw	r30, r28
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	89 e1       	ldi	r24, 0x19	; 25
     542:	df 01       	movw	r26, r30
     544:	1d 92       	st	X+, r1
     546:	8a 95       	dec	r24
     548:	e9 f7       	brne	.-6      	; 0x544 <main+0x4a>
	servo0.P= 5; 		
     54a:	85 e0       	ldi	r24, 0x05	; 5
     54c:	90 e0       	ldi	r25, 0x00	; 0
     54e:	9b 8b       	std	Y+19, r25	; 0x13
     550:	8a 8b       	std	Y+18, r24	; 0x12
	servo0.I= 0.1; 
     552:	8d ec       	ldi	r24, 0xCD	; 205
     554:	9c ec       	ldi	r25, 0xCC	; 204
     556:	ac ec       	ldi	r26, 0xCC	; 204
     558:	bd e3       	ldi	r27, 0x3D	; 61
     55a:	8c 8b       	std	Y+20, r24	; 0x14
     55c:	9d 8b       	std	Y+21, r25	; 0x15
     55e:	ae 8b       	std	Y+22, r26	; 0x16
     560:	bf 8b       	std	Y+23, r27	; 0x17
	servo0.max_integral = 255; 
     562:	8f ef       	ldi	r24, 0xFF	; 255
     564:	90 e0       	ldi	r25, 0x00	; 0
     566:	9f 83       	std	Y+7, r25	; 0x07
     568:	8e 83       	std	Y+6, r24	; 0x06
	
	uint32_t curtime = 0; 	
	uint32_t pid_timer = 0; 
	uint32_t stepper_timer = 0;
	
	DDRB |= M0_DIR | M0_STEP | M1_STEP | M1_DIR;
     56a:	84 b1       	in	r24, 0x04	; 4
     56c:	8f 60       	ori	r24, 0x0F	; 15
     56e:	84 b9       	out	0x04, r24	; 4
	Stepper_motor stepper0 = {0};
     570:	82 e1       	ldi	r24, 0x12	; 18
     572:	79 96       	adiw	r30, 0x19	; 25
     574:	df 01       	movw	r26, r30
     576:	28 2f       	mov	r18, r24
     578:	1d 92       	st	X+, r1
     57a:	2a 95       	dec	r18
     57c:	e9 f7       	brne	.-6      	; 0x578 <main+0x7e>
	stepper0.gear_train = 0.04 ;
     57e:	4a e0       	ldi	r20, 0x0A	; 10
     580:	57 ed       	ldi	r21, 0xD7	; 215
     582:	63 e2       	ldi	r22, 0x23	; 35
     584:	7d e3       	ldi	r23, 0x3D	; 61
     586:	48 a7       	std	Y+40, r20	; 0x28
     588:	59 a7       	std	Y+41, r21	; 0x29
     58a:	6a a7       	std	Y+42, r22	; 0x2a
     58c:	7b a7       	std	Y+43, r23	; 0x2b
	stepper0.pos = 0; 

	Stepper_motor stepper1 ={0};
     58e:	72 96       	adiw	r30, 0x12	; 18
     590:	df 01       	movw	r26, r30
     592:	1d 92       	st	X+, r1
     594:	8a 95       	dec	r24
     596:	e9 f7       	brne	.-6      	; 0x592 <main+0x98>
	stepper1.gear_train = 0.14;
     598:	89 e2       	ldi	r24, 0x29	; 41
     59a:	9c e5       	ldi	r25, 0x5C	; 92
     59c:	af e0       	ldi	r26, 0x0F	; 15
     59e:	be e3       	ldi	r27, 0x3E	; 62
     5a0:	8a af       	std	Y+58, r24	; 0x3a
     5a2:	9b af       	std	Y+59, r25	; 0x3b
     5a4:	ac af       	std	Y+60, r26	; 0x3c
     5a6:	bd af       	std	Y+61, r27	; 0x3d
	servo0.I= 0.1; 
	servo0.max_integral = 255; 
	int output = 0; 	
	
	uint32_t curtime = 0; 	
	uint32_t pid_timer = 0; 
     5a8:	81 2c       	mov	r8, r1
     5aa:	91 2c       	mov	r9, r1
     5ac:	54 01       	movw	r10, r8
	servo0.P= 5; 		
	servo0.I= 0.1; 
	servo0.max_integral = 255; 
	int output = 0; 	
	
	uint32_t curtime = 0; 	
     5ae:	41 2c       	mov	r4, r1
     5b0:	51 2c       	mov	r5, r1
     5b2:	32 01       	movw	r6, r4
	
	Servo_motor servo0 ={0};
	servo0.P= 5; 		
	servo0.I= 0.1; 
	servo0.max_integral = 255; 
	int output = 0; 	
     5b4:	e1 2c       	mov	r14, r1
     5b6:	f1 2c       	mov	r15, r1
	/* Initialize motors */ 
//	Stepper_motor motor0(M0_STEP,M0_DIR,0.23,&DDRD);
	
    /* Replace with your application code */
	uint8_t tacho_values;
	uint8_t tacho_state = 0;
     5b8:	10 e0       	ldi	r17, 0x00	; 0
	stepper1.pos = 0;
    while (1) 
    {
		/*character FSM */ 
		char buff[50]; 
		if(motor_status.done == 1){
     5ba:	0f 2e       	mov	r0, r31
     5bc:	f0 e2       	ldi	r31, 0x20	; 32
     5be:	cf 2e       	mov	r12, r31
     5c0:	f1 e0       	ldi	r31, 0x01	; 1
     5c2:	df 2e       	mov	r13, r31
     5c4:	f0 2d       	mov	r31, r0
			sprintf(buff,"Motor %d, angle =  %d\n",motor_status.motor_select,motor_status.angle);
     5c6:	72 96       	adiw	r30, 0x12	; 18
     5c8:	e2 96       	adiw	r28, 0x32	; 50
     5ca:	ff af       	std	Y+63, r31	; 0x3f
     5cc:	ee af       	std	Y+62, r30	; 0x3e
     5ce:	e2 97       	sbiw	r28, 0x32	; 50
				case 0 : 
					servo0.target_pos = motor_status.angle; 
					break;
				case 1 :
					stepper0.target_pos = motor_status.angle; 
					stepper0.start = 1; 
     5d0:	33 24       	eor	r3, r3
     5d2:	33 94       	inc	r3
     5d4:	21 2c       	mov	r2, r1
	stepper1.pos = 0;
    while (1) 
    {
		/*character FSM */ 
		char buff[50]; 
		if(motor_status.done == 1){
     5d6:	d6 01       	movw	r26, r12
     5d8:	13 96       	adiw	r26, 0x03	; 3
     5da:	8c 91       	ld	r24, X
     5dc:	13 97       	sbiw	r26, 0x03	; 3
     5de:	81 30       	cpi	r24, 0x01	; 1
     5e0:	09 f0       	breq	.+2      	; 0x5e4 <main+0xea>
     5e2:	40 c0       	rjmp	.+128    	; 0x664 <main+0x16a>
			sprintf(buff,"Motor %d, angle =  %d\n",motor_status.motor_select,motor_status.angle);
     5e4:	12 96       	adiw	r26, 0x02	; 2
     5e6:	8c 91       	ld	r24, X
     5e8:	12 97       	sbiw	r26, 0x02	; 2
     5ea:	8f 93       	push	r24
     5ec:	11 96       	adiw	r26, 0x01	; 1
     5ee:	8c 91       	ld	r24, X
     5f0:	11 97       	sbiw	r26, 0x01	; 1
     5f2:	8f 93       	push	r24
     5f4:	8c 91       	ld	r24, X
     5f6:	1f 92       	push	r1
     5f8:	8f 93       	push	r24
     5fa:	e0 e0       	ldi	r30, 0x00	; 0
     5fc:	f1 e0       	ldi	r31, 0x01	; 1
     5fe:	ff 93       	push	r31
     600:	ef 93       	push	r30
     602:	e2 96       	adiw	r28, 0x32	; 50
     604:	8f ad       	ldd	r24, Y+63	; 0x3f
     606:	e2 97       	sbiw	r28, 0x32	; 50
     608:	8f 93       	push	r24
     60a:	e1 96       	adiw	r28, 0x31	; 49
     60c:	9f ad       	ldd	r25, Y+63	; 0x3f
     60e:	e1 97       	sbiw	r28, 0x31	; 49
     610:	9f 93       	push	r25
     612:	0e 94 0d 08 	call	0x101a	; 0x101a <sprintf>
	//		usart_send(buff);
			motor_status.done = 0; 
     616:	d6 01       	movw	r26, r12
     618:	13 96       	adiw	r26, 0x03	; 3
     61a:	1c 92       	st	X, r1
     61c:	13 97       	sbiw	r26, 0x03	; 3
			switch(motor_status.motor_select){
     61e:	0f b6       	in	r0, 0x3f	; 63
     620:	f8 94       	cli
     622:	de bf       	out	0x3e, r29	; 62
     624:	0f be       	out	0x3f, r0	; 63
     626:	cd bf       	out	0x3d, r28	; 61
     628:	8c 91       	ld	r24, X
     62a:	81 30       	cpi	r24, 0x01	; 1
     62c:	61 f0       	breq	.+24     	; 0x646 <main+0x14c>
     62e:	18 f0       	brcs	.+6      	; 0x636 <main+0x13c>
     630:	82 30       	cpi	r24, 0x02	; 2
     632:	81 f0       	breq	.+32     	; 0x654 <main+0x15a>
     634:	17 c0       	rjmp	.+46     	; 0x664 <main+0x16a>
				case 0 : 
					servo0.target_pos = motor_status.angle; 
     636:	d6 01       	movw	r26, r12
     638:	11 96       	adiw	r26, 0x01	; 1
     63a:	8d 91       	ld	r24, X+
     63c:	9c 91       	ld	r25, X
     63e:	12 97       	sbiw	r26, 0x02	; 2
     640:	9d 83       	std	Y+5, r25	; 0x05
     642:	8c 83       	std	Y+4, r24	; 0x04
					break;
     644:	0f c0       	rjmp	.+30     	; 0x664 <main+0x16a>
				case 1 :
					stepper0.target_pos = motor_status.angle; 
     646:	f6 01       	movw	r30, r12
     648:	81 81       	ldd	r24, Z+1	; 0x01
     64a:	92 81       	ldd	r25, Z+2	; 0x02
     64c:	9e 8f       	std	Y+30, r25	; 0x1e
     64e:	8d 8f       	std	Y+29, r24	; 0x1d
					stepper0.start = 1; 
     650:	3a 8e       	std	Y+26, r3	; 0x1a
					break; 
     652:	08 c0       	rjmp	.+16     	; 0x664 <main+0x16a>
				case 2 : 
					stepper1.target_pos = motor_status.angle; 
     654:	d6 01       	movw	r26, r12
     656:	11 96       	adiw	r26, 0x01	; 1
     658:	8d 91       	ld	r24, X+
     65a:	9c 91       	ld	r25, X
     65c:	12 97       	sbiw	r26, 0x02	; 2
     65e:	98 ab       	std	Y+48, r25	; 0x30
     660:	8f a7       	std	Y+47, r24	; 0x2f
					stepper1.start = 1; 
     662:	3c a6       	std	Y+44, r3	; 0x2c
			}
		}

		if(timer_ms()-curtime > 500){
     664:	0e 94 c4 03 	call	0x788	; 0x788 <_Z8timer_msv>
     668:	dc 01       	movw	r26, r24
     66a:	cb 01       	movw	r24, r22
     66c:	84 19       	sub	r24, r4
     66e:	95 09       	sbc	r25, r5
     670:	a6 09       	sbc	r26, r6
     672:	b7 09       	sbc	r27, r7
     674:	85 3f       	cpi	r24, 0xF5	; 245
     676:	91 40       	sbci	r25, 0x01	; 1
     678:	a1 05       	cpc	r26, r1
     67a:	b1 05       	cpc	r27, r1
     67c:	40 f0       	brcs	.+16     	; 0x68e <main+0x194>
			curtime = timer_ms(); 
     67e:	0e 94 c4 03 	call	0x788	; 0x788 <_Z8timer_msv>
     682:	2b 01       	movw	r4, r22
     684:	3c 01       	movw	r6, r24
			//sprintf(buff,"Current pos %d, Target pos =  %d, P = %d, I = %d\n",servo0.current_pos,servo0.target_pos,servo0.proportional,servo0.integral);
			//usart_send(buff);
			//usart_sendln(servo_0.current_pos);

			usart_sendln(stepper0.pos);
     686:	8b 8d       	ldd	r24, Y+27	; 0x1b
     688:	9c 8d       	ldd	r25, Y+28	; 0x1c
     68a:	0e 94 4e 04 	call	0x89c	; 0x89c <_Z12usart_sendlni>

		}
		//servo0.target_pos=stepper0.pos;		
		if(timer_ms() - pid_timer > 1){
     68e:	0e 94 c4 03 	call	0x788	; 0x788 <_Z8timer_msv>
     692:	dc 01       	movw	r26, r24
     694:	cb 01       	movw	r24, r22
     696:	88 19       	sub	r24, r8
     698:	99 09       	sbc	r25, r9
     69a:	aa 09       	sbc	r26, r10
     69c:	bb 09       	sbc	r27, r11
     69e:	02 97       	sbiw	r24, 0x02	; 2
     6a0:	a1 05       	cpc	r26, r1
     6a2:	b1 05       	cpc	r27, r1
     6a4:	b8 f0       	brcs	.+46     	; 0x6d4 <main+0x1da>
			pid_timer = timer_ms();
     6a6:	0e 94 c4 03 	call	0x788	; 0x788 <_Z8timer_msv>
     6aa:	4b 01       	movw	r8, r22
     6ac:	5c 01       	movw	r10, r24
			output = servo_pid(&servo0);
     6ae:	ce 01       	movw	r24, r28
     6b0:	01 96       	adiw	r24, 0x01	; 1
     6b2:	0e 94 67 01 	call	0x2ce	; 0x2ce <_Z9servo_pidP11Servo_motor>
     6b6:	0e 94 32 05 	call	0xa64	; 0xa64 <__fixsfsi>
     6ba:	7b 01       	movw	r14, r22
			stepper_rotate(&stepper0,M0_DIR,M0_STEP);
     6bc:	43 2d       	mov	r20, r3
     6be:	62 e0       	ldi	r22, 0x02	; 2
     6c0:	ce 01       	movw	r24, r28
     6c2:	4a 96       	adiw	r24, 0x1a	; 26
     6c4:	0e 94 fd 01 	call	0x3fa	; 0x3fa <_Z14stepper_rotateP13Stepper_motorhh>
			stepper_rotate(&stepper1,M1_DIR, M1_STEP);
     6c8:	44 e0       	ldi	r20, 0x04	; 4
     6ca:	68 e0       	ldi	r22, 0x08	; 8
     6cc:	ce 01       	movw	r24, r28
     6ce:	8c 96       	adiw	r24, 0x2c	; 44
     6d0:	0e 94 fd 01 	call	0x3fa	; 0x3fa <_Z14stepper_rotateP13Stepper_motorhh>
     6d4:	f1 e0       	ldi	r31, 0x01	; 1
     6d6:	ef 16       	cp	r14, r31
     6d8:	ff ef       	ldi	r31, 0xFF	; 255
     6da:	ff 06       	cpc	r15, r31
     6dc:	24 f4       	brge	.+8      	; 0x6e6 <main+0x1ec>
     6de:	ee 24       	eor	r14, r14
     6e0:	e3 94       	inc	r14
     6e2:	ff 24       	eor	r15, r15
     6e4:	fa 94       	dec	r15
     6e6:	2f ef       	ldi	r18, 0xFF	; 255
     6e8:	e2 16       	cp	r14, r18
     6ea:	f1 04       	cpc	r15, r1
     6ec:	21 f0       	breq	.+8      	; 0x6f6 <main+0x1fc>
     6ee:	1c f0       	brlt	.+6      	; 0x6f6 <main+0x1fc>
     6f0:	ee 24       	eor	r14, r14
     6f2:	ea 94       	dec	r14
     6f4:	f2 2c       	mov	r15, r2
			output = 255; 
		}else if(output < -255){
			output = -255;
		}
		//usart_sendln(temp);	
		servo_rotate(output,&SERVO_0_PWM,SERVO_0_DIR_A,SERVO_0_DIR_B);
     6f6:	b7 01       	movw	r22, r14
     6f8:	0f 2c       	mov	r0, r15
     6fa:	00 0c       	add	r0, r0
     6fc:	88 0b       	sbc	r24, r24
     6fe:	99 0b       	sbc	r25, r25
     700:	0e 94 6a 05 	call	0xad4	; 0xad4 <__floatsisf>
     704:	00 e8       	ldi	r16, 0x80	; 128
     706:	20 e4       	ldi	r18, 0x40	; 64
     708:	44 eb       	ldi	r20, 0xB4	; 180
     70a:	50 e0       	ldi	r21, 0x00	; 0
     70c:	0e 94 d7 01 	call	0x3ae	; 0x3ae <_Z12servo_rotatefPVhhh>
		

		tacho_values= PIND;
     710:	89 b1       	in	r24, 0x09	; 9
		if (tacho_state == 0){
     712:	11 11       	cpse	r17, r1
     714:	12 c0       	rjmp	.+36     	; 0x73a <main+0x240>
			if (PIND & TACHO_0_P){
     716:	4a 9b       	sbis	0x09, 2	; 9
     718:	5e cf       	rjmp	.-324    	; 0x5d6 <main+0xdc>
				if(PIND & TACHO_0_M){
     71a:	4d 9b       	sbis	0x09, 5	; 9
     71c:	07 c0       	rjmp	.+14     	; 0x72c <main+0x232>
					servo0.current_pos++;
     71e:	8a 81       	ldd	r24, Y+2	; 0x02
     720:	9b 81       	ldd	r25, Y+3	; 0x03
     722:	01 96       	adiw	r24, 0x01	; 1
     724:	9b 83       	std	Y+3, r25	; 0x03
     726:	8a 83       	std	Y+2, r24	; 0x02
				}else{
					servo0.current_pos--;
				}
				tacho_state = 1; 
     728:	13 2d       	mov	r17, r3
     72a:	55 cf       	rjmp	.-342    	; 0x5d6 <main+0xdc>
		if (tacho_state == 0){
			if (PIND & TACHO_0_P){
				if(PIND & TACHO_0_M){
					servo0.current_pos++;
				}else{
					servo0.current_pos--;
     72c:	8a 81       	ldd	r24, Y+2	; 0x02
     72e:	9b 81       	ldd	r25, Y+3	; 0x03
     730:	01 97       	sbiw	r24, 0x01	; 1
     732:	9b 83       	std	Y+3, r25	; 0x03
     734:	8a 83       	std	Y+2, r24	; 0x02
				}
				tacho_state = 1; 
     736:	13 2d       	mov	r17, r3
     738:	4e cf       	rjmp	.-356    	; 0x5d6 <main+0xdc>
			}
		}else{
			if (!(PIND & TACHO_0_P)){
     73a:	4a 99       	sbic	0x09, 2	; 9
     73c:	4c cf       	rjmp	.-360    	; 0x5d6 <main+0xdc>
				tacho_state = 0; 
     73e:	10 e0       	ldi	r17, 0x00	; 0
	stepper0.pos = 0; 

	Stepper_motor stepper1 ={0};
	stepper1.gear_train = 0.14;
	stepper1.pos = 0;
    while (1) 
     740:	4a cf       	rjmp	.-364    	; 0x5d6 <main+0xdc>

00000742 <_Z12timer_enablev>:
	timer_counter = 0; 
}

//Reset the counter
void timer_reset(){
	timer_counter = 0; 
     742:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
     746:	e1 e8       	ldi	r30, 0x81	; 129
     748:	f0 e0       	ldi	r31, 0x00	; 0
     74a:	10 82       	st	Z, r1
     74c:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     750:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     754:	89 ef       	ldi	r24, 0xF9	; 249
     756:	90 e0       	ldi	r25, 0x00	; 0
     758:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
     75c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
     760:	80 81       	ld	r24, Z
     762:	88 60       	ori	r24, 0x08	; 8
     764:	80 83       	st	Z, r24
     766:	80 81       	ld	r24, Z
     768:	83 60       	ori	r24, 0x03	; 3
     76a:	80 83       	st	Z, r24
     76c:	ef e6       	ldi	r30, 0x6F	; 111
     76e:	f0 e0       	ldi	r31, 0x00	; 0
     770:	80 81       	ld	r24, Z
     772:	82 60       	ori	r24, 0x02	; 2
     774:	80 83       	st	Z, r24
     776:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <timer_counter>
     77a:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <timer_counter+0x1>
     77e:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <timer_counter+0x2>
     782:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <timer_counter+0x3>
     786:	08 95       	ret

00000788 <_Z8timer_msv>:
}

//Return the elapsed time since the counter was enable 
uint32_t timer_ms(){
	return timer_counter;
     788:	60 91 25 01 	lds	r22, 0x0125	; 0x800125 <timer_counter>
     78c:	70 91 26 01 	lds	r23, 0x0126	; 0x800126 <timer_counter+0x1>
     790:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <timer_counter+0x2>
     794:	90 91 28 01 	lds	r25, 0x0128	; 0x800128 <timer_counter+0x3>
}
     798:	08 95       	ret

0000079a <__vector_11>:

//interrupt vector 
ISR (TIMER1_COMPA_vect) {
     79a:	1f 92       	push	r1
     79c:	0f 92       	push	r0
     79e:	0f b6       	in	r0, 0x3f	; 63
     7a0:	0f 92       	push	r0
     7a2:	11 24       	eor	r1, r1
     7a4:	8f 93       	push	r24
     7a6:	9f 93       	push	r25
     7a8:	af 93       	push	r26
     7aa:	bf 93       	push	r27
	timer_counter++;
     7ac:	80 91 25 01 	lds	r24, 0x0125	; 0x800125 <timer_counter>
     7b0:	90 91 26 01 	lds	r25, 0x0126	; 0x800126 <timer_counter+0x1>
     7b4:	a0 91 27 01 	lds	r26, 0x0127	; 0x800127 <timer_counter+0x2>
     7b8:	b0 91 28 01 	lds	r27, 0x0128	; 0x800128 <timer_counter+0x3>
     7bc:	01 96       	adiw	r24, 0x01	; 1
     7be:	a1 1d       	adc	r26, r1
     7c0:	b1 1d       	adc	r27, r1
     7c2:	80 93 25 01 	sts	0x0125, r24	; 0x800125 <timer_counter>
     7c6:	90 93 26 01 	sts	0x0126, r25	; 0x800126 <timer_counter+0x1>
     7ca:	a0 93 27 01 	sts	0x0127, r26	; 0x800127 <timer_counter+0x2>
     7ce:	b0 93 28 01 	sts	0x0128, r27	; 0x800128 <timer_counter+0x3>
     7d2:	bf 91       	pop	r27
     7d4:	af 91       	pop	r26
     7d6:	9f 91       	pop	r25
     7d8:	8f 91       	pop	r24
     7da:	0f 90       	pop	r0
     7dc:	0f be       	out	0x3f, r0	; 63
     7de:	0f 90       	pop	r0
     7e0:	1f 90       	pop	r1
     7e2:	18 95       	reti

000007e4 <_Z12usart_enablej>:
	char * index = text;
	for( ; *index != 0; index++){
		usart_send(*index);
	}
	
}
     7e4:	28 e9       	ldi	r18, 0x98	; 152
     7e6:	20 93 c1 00 	sts	0x00C1, r18	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     7ea:	26 e0       	ldi	r18, 0x06	; 6
     7ec:	20 93 c2 00 	sts	0x00C2, r18	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
     7f0:	bc 01       	movw	r22, r24
     7f2:	80 e0       	ldi	r24, 0x00	; 0
     7f4:	90 e0       	ldi	r25, 0x00	; 0
     7f6:	0e 94 68 05 	call	0xad0	; 0xad0 <__floatunsisf>
     7fa:	20 e0       	ldi	r18, 0x00	; 0
     7fc:	30 e0       	ldi	r19, 0x00	; 0
     7fe:	40 e8       	ldi	r20, 0x80	; 128
     800:	51 e4       	ldi	r21, 0x41	; 65
     802:	0e 94 f6 05 	call	0xbec	; 0xbec <__mulsf3>
     806:	9b 01       	movw	r18, r22
     808:	ac 01       	movw	r20, r24
     80a:	60 e0       	ldi	r22, 0x00	; 0
     80c:	74 e2       	ldi	r23, 0x24	; 36
     80e:	84 e7       	ldi	r24, 0x74	; 116
     810:	9b e4       	ldi	r25, 0x4B	; 75
     812:	0e 94 c0 04 	call	0x980	; 0x980 <__divsf3>
     816:	20 e0       	ldi	r18, 0x00	; 0
     818:	30 e0       	ldi	r19, 0x00	; 0
     81a:	40 e8       	ldi	r20, 0x80	; 128
     81c:	5f e3       	ldi	r21, 0x3F	; 63
     81e:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__subsf3>
     822:	0e 94 39 05 	call	0xa72	; 0xa72 <__fixunssfsi>
     826:	70 93 c5 00 	sts	0x00C5, r23	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     82a:	60 93 c4 00 	sts	0x00C4, r22	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     82e:	08 95       	ret

00000830 <_Z10usart_sendc>:
     830:	e0 ec       	ldi	r30, 0xC0	; 192
     832:	f0 e0       	ldi	r31, 0x00	; 0
     834:	90 81       	ld	r25, Z
     836:	95 ff       	sbrs	r25, 5
     838:	fd cf       	rjmp	.-6      	; 0x834 <_Z10usart_sendc+0x4>
     83a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     83e:	08 95       	ret

00000840 <_Z13usart_newlinev>:
     840:	8a e0       	ldi	r24, 0x0A	; 10
     842:	0e 94 18 04 	call	0x830	; 0x830 <_Z10usart_sendc>
     846:	08 95       	ret

00000848 <_Z10usart_sendi>:
     848:	0f 93       	push	r16
     84a:	1f 93       	push	r17
     84c:	cf 93       	push	r28
     84e:	df 93       	push	r29
     850:	cd b7       	in	r28, 0x3d	; 61
     852:	de b7       	in	r29, 0x3e	; 62
     854:	2a 97       	sbiw	r28, 0x0a	; 10
     856:	0f b6       	in	r0, 0x3f	; 63
     858:	f8 94       	cli
     85a:	de bf       	out	0x3e, r29	; 62
     85c:	0f be       	out	0x3f, r0	; 63
     85e:	cd bf       	out	0x3d, r28	; 61
     860:	4a e0       	ldi	r20, 0x0A	; 10
     862:	be 01       	movw	r22, r28
     864:	6f 5f       	subi	r22, 0xFF	; 255
     866:	7f 4f       	sbci	r23, 0xFF	; 255
     868:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <__itoa_ncheck>
     86c:	89 81       	ldd	r24, Y+1	; 0x01
     86e:	88 23       	and	r24, r24
     870:	51 f0       	breq	.+20     	; 0x886 <_Z10usart_sendi+0x3e>
     872:	8e 01       	movw	r16, r28
     874:	0e 5f       	subi	r16, 0xFE	; 254
     876:	1f 4f       	sbci	r17, 0xFF	; 255
     878:	0e 94 18 04 	call	0x830	; 0x830 <_Z10usart_sendc>
     87c:	f8 01       	movw	r30, r16
     87e:	81 91       	ld	r24, Z+
     880:	8f 01       	movw	r16, r30
     882:	81 11       	cpse	r24, r1
     884:	f9 cf       	rjmp	.-14     	; 0x878 <_Z10usart_sendi+0x30>
     886:	2a 96       	adiw	r28, 0x0a	; 10
     888:	0f b6       	in	r0, 0x3f	; 63
     88a:	f8 94       	cli
     88c:	de bf       	out	0x3e, r29	; 62
     88e:	0f be       	out	0x3f, r0	; 63
     890:	cd bf       	out	0x3d, r28	; 61
     892:	df 91       	pop	r29
     894:	cf 91       	pop	r28
     896:	1f 91       	pop	r17
     898:	0f 91       	pop	r16
     89a:	08 95       	ret

0000089c <_Z12usart_sendlni>:
//Send data with a newline added 
void usart_sendln(int integer){
	usart_send(integer);
     89c:	0e 94 24 04 	call	0x848	; 0x848 <_Z10usart_sendi>
	usart_newline();	
     8a0:	0e 94 20 04 	call	0x840	; 0x840 <_Z13usart_newlinev>
     8a4:	08 95       	ret

000008a6 <__subsf3>:
     8a6:	50 58       	subi	r21, 0x80	; 128

000008a8 <__addsf3>:
     8a8:	bb 27       	eor	r27, r27
     8aa:	aa 27       	eor	r26, r26
     8ac:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <__addsf3x>
     8b0:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__fp_round>
     8b4:	0e 94 ae 05 	call	0xb5c	; 0xb5c <__fp_pscA>
     8b8:	38 f0       	brcs	.+14     	; 0x8c8 <__addsf3+0x20>
     8ba:	0e 94 b5 05 	call	0xb6a	; 0xb6a <__fp_pscB>
     8be:	20 f0       	brcs	.+8      	; 0x8c8 <__addsf3+0x20>
     8c0:	39 f4       	brne	.+14     	; 0x8d0 <__addsf3+0x28>
     8c2:	9f 3f       	cpi	r25, 0xFF	; 255
     8c4:	19 f4       	brne	.+6      	; 0x8cc <__addsf3+0x24>
     8c6:	26 f4       	brtc	.+8      	; 0x8d0 <__addsf3+0x28>
     8c8:	0c 94 ab 05 	jmp	0xb56	; 0xb56 <__fp_nan>
     8cc:	0e f4       	brtc	.+2      	; 0x8d0 <__addsf3+0x28>
     8ce:	e0 95       	com	r30
     8d0:	e7 fb       	bst	r30, 7
     8d2:	0c 94 a5 05 	jmp	0xb4a	; 0xb4a <__fp_inf>

000008d6 <__addsf3x>:
     8d6:	e9 2f       	mov	r30, r25
     8d8:	0e 94 cd 05 	call	0xb9a	; 0xb9a <__fp_split3>
     8dc:	58 f3       	brcs	.-42     	; 0x8b4 <__addsf3+0xc>
     8de:	ba 17       	cp	r27, r26
     8e0:	62 07       	cpc	r22, r18
     8e2:	73 07       	cpc	r23, r19
     8e4:	84 07       	cpc	r24, r20
     8e6:	95 07       	cpc	r25, r21
     8e8:	20 f0       	brcs	.+8      	; 0x8f2 <__addsf3x+0x1c>
     8ea:	79 f4       	brne	.+30     	; 0x90a <__stack+0xb>
     8ec:	a6 f5       	brtc	.+104    	; 0x956 <__stack+0x57>
     8ee:	0c 94 ef 05 	jmp	0xbde	; 0xbde <__fp_zero>
     8f2:	0e f4       	brtc	.+2      	; 0x8f6 <__addsf3x+0x20>
     8f4:	e0 95       	com	r30
     8f6:	0b 2e       	mov	r0, r27
     8f8:	ba 2f       	mov	r27, r26
     8fa:	a0 2d       	mov	r26, r0
     8fc:	0b 01       	movw	r0, r22
     8fe:	b9 01       	movw	r22, r18
     900:	90 01       	movw	r18, r0
     902:	0c 01       	movw	r0, r24
     904:	ca 01       	movw	r24, r20
     906:	a0 01       	movw	r20, r0
     908:	11 24       	eor	r1, r1
     90a:	ff 27       	eor	r31, r31
     90c:	59 1b       	sub	r21, r25
     90e:	99 f0       	breq	.+38     	; 0x936 <__stack+0x37>
     910:	59 3f       	cpi	r21, 0xF9	; 249
     912:	50 f4       	brcc	.+20     	; 0x928 <__stack+0x29>
     914:	50 3e       	cpi	r21, 0xE0	; 224
     916:	68 f1       	brcs	.+90     	; 0x972 <__stack+0x73>
     918:	1a 16       	cp	r1, r26
     91a:	f0 40       	sbci	r31, 0x00	; 0
     91c:	a2 2f       	mov	r26, r18
     91e:	23 2f       	mov	r18, r19
     920:	34 2f       	mov	r19, r20
     922:	44 27       	eor	r20, r20
     924:	58 5f       	subi	r21, 0xF8	; 248
     926:	f3 cf       	rjmp	.-26     	; 0x90e <__stack+0xf>
     928:	46 95       	lsr	r20
     92a:	37 95       	ror	r19
     92c:	27 95       	ror	r18
     92e:	a7 95       	ror	r26
     930:	f0 40       	sbci	r31, 0x00	; 0
     932:	53 95       	inc	r21
     934:	c9 f7       	brne	.-14     	; 0x928 <__stack+0x29>
     936:	7e f4       	brtc	.+30     	; 0x956 <__stack+0x57>
     938:	1f 16       	cp	r1, r31
     93a:	ba 0b       	sbc	r27, r26
     93c:	62 0b       	sbc	r22, r18
     93e:	73 0b       	sbc	r23, r19
     940:	84 0b       	sbc	r24, r20
     942:	ba f0       	brmi	.+46     	; 0x972 <__stack+0x73>
     944:	91 50       	subi	r25, 0x01	; 1
     946:	a1 f0       	breq	.+40     	; 0x970 <__stack+0x71>
     948:	ff 0f       	add	r31, r31
     94a:	bb 1f       	adc	r27, r27
     94c:	66 1f       	adc	r22, r22
     94e:	77 1f       	adc	r23, r23
     950:	88 1f       	adc	r24, r24
     952:	c2 f7       	brpl	.-16     	; 0x944 <__stack+0x45>
     954:	0e c0       	rjmp	.+28     	; 0x972 <__stack+0x73>
     956:	ba 0f       	add	r27, r26
     958:	62 1f       	adc	r22, r18
     95a:	73 1f       	adc	r23, r19
     95c:	84 1f       	adc	r24, r20
     95e:	48 f4       	brcc	.+18     	; 0x972 <__stack+0x73>
     960:	87 95       	ror	r24
     962:	77 95       	ror	r23
     964:	67 95       	ror	r22
     966:	b7 95       	ror	r27
     968:	f7 95       	ror	r31
     96a:	9e 3f       	cpi	r25, 0xFE	; 254
     96c:	08 f0       	brcs	.+2      	; 0x970 <__stack+0x71>
     96e:	b0 cf       	rjmp	.-160    	; 0x8d0 <__addsf3+0x28>
     970:	93 95       	inc	r25
     972:	88 0f       	add	r24, r24
     974:	08 f0       	brcs	.+2      	; 0x978 <__stack+0x79>
     976:	99 27       	eor	r25, r25
     978:	ee 0f       	add	r30, r30
     97a:	97 95       	ror	r25
     97c:	87 95       	ror	r24
     97e:	08 95       	ret

00000980 <__divsf3>:
     980:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <__divsf3x>
     984:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__fp_round>
     988:	0e 94 b5 05 	call	0xb6a	; 0xb6a <__fp_pscB>
     98c:	58 f0       	brcs	.+22     	; 0x9a4 <__divsf3+0x24>
     98e:	0e 94 ae 05 	call	0xb5c	; 0xb5c <__fp_pscA>
     992:	40 f0       	brcs	.+16     	; 0x9a4 <__divsf3+0x24>
     994:	29 f4       	brne	.+10     	; 0x9a0 <__divsf3+0x20>
     996:	5f 3f       	cpi	r21, 0xFF	; 255
     998:	29 f0       	breq	.+10     	; 0x9a4 <__divsf3+0x24>
     99a:	0c 94 a5 05 	jmp	0xb4a	; 0xb4a <__fp_inf>
     99e:	51 11       	cpse	r21, r1
     9a0:	0c 94 f0 05 	jmp	0xbe0	; 0xbe0 <__fp_szero>
     9a4:	0c 94 ab 05 	jmp	0xb56	; 0xb56 <__fp_nan>

000009a8 <__divsf3x>:
     9a8:	0e 94 cd 05 	call	0xb9a	; 0xb9a <__fp_split3>
     9ac:	68 f3       	brcs	.-38     	; 0x988 <__divsf3+0x8>

000009ae <__divsf3_pse>:
     9ae:	99 23       	and	r25, r25
     9b0:	b1 f3       	breq	.-20     	; 0x99e <__divsf3+0x1e>
     9b2:	55 23       	and	r21, r21
     9b4:	91 f3       	breq	.-28     	; 0x99a <__divsf3+0x1a>
     9b6:	95 1b       	sub	r25, r21
     9b8:	55 0b       	sbc	r21, r21
     9ba:	bb 27       	eor	r27, r27
     9bc:	aa 27       	eor	r26, r26
     9be:	62 17       	cp	r22, r18
     9c0:	73 07       	cpc	r23, r19
     9c2:	84 07       	cpc	r24, r20
     9c4:	38 f0       	brcs	.+14     	; 0x9d4 <__divsf3_pse+0x26>
     9c6:	9f 5f       	subi	r25, 0xFF	; 255
     9c8:	5f 4f       	sbci	r21, 0xFF	; 255
     9ca:	22 0f       	add	r18, r18
     9cc:	33 1f       	adc	r19, r19
     9ce:	44 1f       	adc	r20, r20
     9d0:	aa 1f       	adc	r26, r26
     9d2:	a9 f3       	breq	.-22     	; 0x9be <__divsf3_pse+0x10>
     9d4:	35 d0       	rcall	.+106    	; 0xa40 <__divsf3_pse+0x92>
     9d6:	0e 2e       	mov	r0, r30
     9d8:	3a f0       	brmi	.+14     	; 0x9e8 <__divsf3_pse+0x3a>
     9da:	e0 e8       	ldi	r30, 0x80	; 128
     9dc:	32 d0       	rcall	.+100    	; 0xa42 <__divsf3_pse+0x94>
     9de:	91 50       	subi	r25, 0x01	; 1
     9e0:	50 40       	sbci	r21, 0x00	; 0
     9e2:	e6 95       	lsr	r30
     9e4:	00 1c       	adc	r0, r0
     9e6:	ca f7       	brpl	.-14     	; 0x9da <__divsf3_pse+0x2c>
     9e8:	2b d0       	rcall	.+86     	; 0xa40 <__divsf3_pse+0x92>
     9ea:	fe 2f       	mov	r31, r30
     9ec:	29 d0       	rcall	.+82     	; 0xa40 <__divsf3_pse+0x92>
     9ee:	66 0f       	add	r22, r22
     9f0:	77 1f       	adc	r23, r23
     9f2:	88 1f       	adc	r24, r24
     9f4:	bb 1f       	adc	r27, r27
     9f6:	26 17       	cp	r18, r22
     9f8:	37 07       	cpc	r19, r23
     9fa:	48 07       	cpc	r20, r24
     9fc:	ab 07       	cpc	r26, r27
     9fe:	b0 e8       	ldi	r27, 0x80	; 128
     a00:	09 f0       	breq	.+2      	; 0xa04 <__divsf3_pse+0x56>
     a02:	bb 0b       	sbc	r27, r27
     a04:	80 2d       	mov	r24, r0
     a06:	bf 01       	movw	r22, r30
     a08:	ff 27       	eor	r31, r31
     a0a:	93 58       	subi	r25, 0x83	; 131
     a0c:	5f 4f       	sbci	r21, 0xFF	; 255
     a0e:	3a f0       	brmi	.+14     	; 0xa1e <__divsf3_pse+0x70>
     a10:	9e 3f       	cpi	r25, 0xFE	; 254
     a12:	51 05       	cpc	r21, r1
     a14:	78 f0       	brcs	.+30     	; 0xa34 <__divsf3_pse+0x86>
     a16:	0c 94 a5 05 	jmp	0xb4a	; 0xb4a <__fp_inf>
     a1a:	0c 94 f0 05 	jmp	0xbe0	; 0xbe0 <__fp_szero>
     a1e:	5f 3f       	cpi	r21, 0xFF	; 255
     a20:	e4 f3       	brlt	.-8      	; 0xa1a <__divsf3_pse+0x6c>
     a22:	98 3e       	cpi	r25, 0xE8	; 232
     a24:	d4 f3       	brlt	.-12     	; 0xa1a <__divsf3_pse+0x6c>
     a26:	86 95       	lsr	r24
     a28:	77 95       	ror	r23
     a2a:	67 95       	ror	r22
     a2c:	b7 95       	ror	r27
     a2e:	f7 95       	ror	r31
     a30:	9f 5f       	subi	r25, 0xFF	; 255
     a32:	c9 f7       	brne	.-14     	; 0xa26 <__divsf3_pse+0x78>
     a34:	88 0f       	add	r24, r24
     a36:	91 1d       	adc	r25, r1
     a38:	96 95       	lsr	r25
     a3a:	87 95       	ror	r24
     a3c:	97 f9       	bld	r25, 7
     a3e:	08 95       	ret
     a40:	e1 e0       	ldi	r30, 0x01	; 1
     a42:	66 0f       	add	r22, r22
     a44:	77 1f       	adc	r23, r23
     a46:	88 1f       	adc	r24, r24
     a48:	bb 1f       	adc	r27, r27
     a4a:	62 17       	cp	r22, r18
     a4c:	73 07       	cpc	r23, r19
     a4e:	84 07       	cpc	r24, r20
     a50:	ba 07       	cpc	r27, r26
     a52:	20 f0       	brcs	.+8      	; 0xa5c <__divsf3_pse+0xae>
     a54:	62 1b       	sub	r22, r18
     a56:	73 0b       	sbc	r23, r19
     a58:	84 0b       	sbc	r24, r20
     a5a:	ba 0b       	sbc	r27, r26
     a5c:	ee 1f       	adc	r30, r30
     a5e:	88 f7       	brcc	.-30     	; 0xa42 <__divsf3_pse+0x94>
     a60:	e0 95       	com	r30
     a62:	08 95       	ret

00000a64 <__fixsfsi>:
     a64:	0e 94 39 05 	call	0xa72	; 0xa72 <__fixunssfsi>
     a68:	68 94       	set
     a6a:	b1 11       	cpse	r27, r1
     a6c:	0c 94 f0 05 	jmp	0xbe0	; 0xbe0 <__fp_szero>
     a70:	08 95       	ret

00000a72 <__fixunssfsi>:
     a72:	0e 94 d5 05 	call	0xbaa	; 0xbaa <__fp_splitA>
     a76:	88 f0       	brcs	.+34     	; 0xa9a <__fixunssfsi+0x28>
     a78:	9f 57       	subi	r25, 0x7F	; 127
     a7a:	98 f0       	brcs	.+38     	; 0xaa2 <__fixunssfsi+0x30>
     a7c:	b9 2f       	mov	r27, r25
     a7e:	99 27       	eor	r25, r25
     a80:	b7 51       	subi	r27, 0x17	; 23
     a82:	b0 f0       	brcs	.+44     	; 0xab0 <__fixunssfsi+0x3e>
     a84:	e1 f0       	breq	.+56     	; 0xabe <__fixunssfsi+0x4c>
     a86:	66 0f       	add	r22, r22
     a88:	77 1f       	adc	r23, r23
     a8a:	88 1f       	adc	r24, r24
     a8c:	99 1f       	adc	r25, r25
     a8e:	1a f0       	brmi	.+6      	; 0xa96 <__fixunssfsi+0x24>
     a90:	ba 95       	dec	r27
     a92:	c9 f7       	brne	.-14     	; 0xa86 <__fixunssfsi+0x14>
     a94:	14 c0       	rjmp	.+40     	; 0xabe <__fixunssfsi+0x4c>
     a96:	b1 30       	cpi	r27, 0x01	; 1
     a98:	91 f0       	breq	.+36     	; 0xabe <__fixunssfsi+0x4c>
     a9a:	0e 94 ef 05 	call	0xbde	; 0xbde <__fp_zero>
     a9e:	b1 e0       	ldi	r27, 0x01	; 1
     aa0:	08 95       	ret
     aa2:	0c 94 ef 05 	jmp	0xbde	; 0xbde <__fp_zero>
     aa6:	67 2f       	mov	r22, r23
     aa8:	78 2f       	mov	r23, r24
     aaa:	88 27       	eor	r24, r24
     aac:	b8 5f       	subi	r27, 0xF8	; 248
     aae:	39 f0       	breq	.+14     	; 0xabe <__fixunssfsi+0x4c>
     ab0:	b9 3f       	cpi	r27, 0xF9	; 249
     ab2:	cc f3       	brlt	.-14     	; 0xaa6 <__fixunssfsi+0x34>
     ab4:	86 95       	lsr	r24
     ab6:	77 95       	ror	r23
     ab8:	67 95       	ror	r22
     aba:	b3 95       	inc	r27
     abc:	d9 f7       	brne	.-10     	; 0xab4 <__fixunssfsi+0x42>
     abe:	3e f4       	brtc	.+14     	; 0xace <__fixunssfsi+0x5c>
     ac0:	90 95       	com	r25
     ac2:	80 95       	com	r24
     ac4:	70 95       	com	r23
     ac6:	61 95       	neg	r22
     ac8:	7f 4f       	sbci	r23, 0xFF	; 255
     aca:	8f 4f       	sbci	r24, 0xFF	; 255
     acc:	9f 4f       	sbci	r25, 0xFF	; 255
     ace:	08 95       	ret

00000ad0 <__floatunsisf>:
     ad0:	e8 94       	clt
     ad2:	09 c0       	rjmp	.+18     	; 0xae6 <__floatsisf+0x12>

00000ad4 <__floatsisf>:
     ad4:	97 fb       	bst	r25, 7
     ad6:	3e f4       	brtc	.+14     	; 0xae6 <__floatsisf+0x12>
     ad8:	90 95       	com	r25
     ada:	80 95       	com	r24
     adc:	70 95       	com	r23
     ade:	61 95       	neg	r22
     ae0:	7f 4f       	sbci	r23, 0xFF	; 255
     ae2:	8f 4f       	sbci	r24, 0xFF	; 255
     ae4:	9f 4f       	sbci	r25, 0xFF	; 255
     ae6:	99 23       	and	r25, r25
     ae8:	a9 f0       	breq	.+42     	; 0xb14 <__floatsisf+0x40>
     aea:	f9 2f       	mov	r31, r25
     aec:	96 e9       	ldi	r25, 0x96	; 150
     aee:	bb 27       	eor	r27, r27
     af0:	93 95       	inc	r25
     af2:	f6 95       	lsr	r31
     af4:	87 95       	ror	r24
     af6:	77 95       	ror	r23
     af8:	67 95       	ror	r22
     afa:	b7 95       	ror	r27
     afc:	f1 11       	cpse	r31, r1
     afe:	f8 cf       	rjmp	.-16     	; 0xaf0 <__floatsisf+0x1c>
     b00:	fa f4       	brpl	.+62     	; 0xb40 <__floatsisf+0x6c>
     b02:	bb 0f       	add	r27, r27
     b04:	11 f4       	brne	.+4      	; 0xb0a <__floatsisf+0x36>
     b06:	60 ff       	sbrs	r22, 0
     b08:	1b c0       	rjmp	.+54     	; 0xb40 <__floatsisf+0x6c>
     b0a:	6f 5f       	subi	r22, 0xFF	; 255
     b0c:	7f 4f       	sbci	r23, 0xFF	; 255
     b0e:	8f 4f       	sbci	r24, 0xFF	; 255
     b10:	9f 4f       	sbci	r25, 0xFF	; 255
     b12:	16 c0       	rjmp	.+44     	; 0xb40 <__floatsisf+0x6c>
     b14:	88 23       	and	r24, r24
     b16:	11 f0       	breq	.+4      	; 0xb1c <__floatsisf+0x48>
     b18:	96 e9       	ldi	r25, 0x96	; 150
     b1a:	11 c0       	rjmp	.+34     	; 0xb3e <__floatsisf+0x6a>
     b1c:	77 23       	and	r23, r23
     b1e:	21 f0       	breq	.+8      	; 0xb28 <__floatsisf+0x54>
     b20:	9e e8       	ldi	r25, 0x8E	; 142
     b22:	87 2f       	mov	r24, r23
     b24:	76 2f       	mov	r23, r22
     b26:	05 c0       	rjmp	.+10     	; 0xb32 <__floatsisf+0x5e>
     b28:	66 23       	and	r22, r22
     b2a:	71 f0       	breq	.+28     	; 0xb48 <__floatsisf+0x74>
     b2c:	96 e8       	ldi	r25, 0x86	; 134
     b2e:	86 2f       	mov	r24, r22
     b30:	70 e0       	ldi	r23, 0x00	; 0
     b32:	60 e0       	ldi	r22, 0x00	; 0
     b34:	2a f0       	brmi	.+10     	; 0xb40 <__floatsisf+0x6c>
     b36:	9a 95       	dec	r25
     b38:	66 0f       	add	r22, r22
     b3a:	77 1f       	adc	r23, r23
     b3c:	88 1f       	adc	r24, r24
     b3e:	da f7       	brpl	.-10     	; 0xb36 <__floatsisf+0x62>
     b40:	88 0f       	add	r24, r24
     b42:	96 95       	lsr	r25
     b44:	87 95       	ror	r24
     b46:	97 f9       	bld	r25, 7
     b48:	08 95       	ret

00000b4a <__fp_inf>:
     b4a:	97 f9       	bld	r25, 7
     b4c:	9f 67       	ori	r25, 0x7F	; 127
     b4e:	80 e8       	ldi	r24, 0x80	; 128
     b50:	70 e0       	ldi	r23, 0x00	; 0
     b52:	60 e0       	ldi	r22, 0x00	; 0
     b54:	08 95       	ret

00000b56 <__fp_nan>:
     b56:	9f ef       	ldi	r25, 0xFF	; 255
     b58:	80 ec       	ldi	r24, 0xC0	; 192
     b5a:	08 95       	ret

00000b5c <__fp_pscA>:
     b5c:	00 24       	eor	r0, r0
     b5e:	0a 94       	dec	r0
     b60:	16 16       	cp	r1, r22
     b62:	17 06       	cpc	r1, r23
     b64:	18 06       	cpc	r1, r24
     b66:	09 06       	cpc	r0, r25
     b68:	08 95       	ret

00000b6a <__fp_pscB>:
     b6a:	00 24       	eor	r0, r0
     b6c:	0a 94       	dec	r0
     b6e:	12 16       	cp	r1, r18
     b70:	13 06       	cpc	r1, r19
     b72:	14 06       	cpc	r1, r20
     b74:	05 06       	cpc	r0, r21
     b76:	08 95       	ret

00000b78 <__fp_round>:
     b78:	09 2e       	mov	r0, r25
     b7a:	03 94       	inc	r0
     b7c:	00 0c       	add	r0, r0
     b7e:	11 f4       	brne	.+4      	; 0xb84 <__fp_round+0xc>
     b80:	88 23       	and	r24, r24
     b82:	52 f0       	brmi	.+20     	; 0xb98 <__fp_round+0x20>
     b84:	bb 0f       	add	r27, r27
     b86:	40 f4       	brcc	.+16     	; 0xb98 <__fp_round+0x20>
     b88:	bf 2b       	or	r27, r31
     b8a:	11 f4       	brne	.+4      	; 0xb90 <__fp_round+0x18>
     b8c:	60 ff       	sbrs	r22, 0
     b8e:	04 c0       	rjmp	.+8      	; 0xb98 <__fp_round+0x20>
     b90:	6f 5f       	subi	r22, 0xFF	; 255
     b92:	7f 4f       	sbci	r23, 0xFF	; 255
     b94:	8f 4f       	sbci	r24, 0xFF	; 255
     b96:	9f 4f       	sbci	r25, 0xFF	; 255
     b98:	08 95       	ret

00000b9a <__fp_split3>:
     b9a:	57 fd       	sbrc	r21, 7
     b9c:	90 58       	subi	r25, 0x80	; 128
     b9e:	44 0f       	add	r20, r20
     ba0:	55 1f       	adc	r21, r21
     ba2:	59 f0       	breq	.+22     	; 0xbba <__fp_splitA+0x10>
     ba4:	5f 3f       	cpi	r21, 0xFF	; 255
     ba6:	71 f0       	breq	.+28     	; 0xbc4 <__fp_splitA+0x1a>
     ba8:	47 95       	ror	r20

00000baa <__fp_splitA>:
     baa:	88 0f       	add	r24, r24
     bac:	97 fb       	bst	r25, 7
     bae:	99 1f       	adc	r25, r25
     bb0:	61 f0       	breq	.+24     	; 0xbca <__fp_splitA+0x20>
     bb2:	9f 3f       	cpi	r25, 0xFF	; 255
     bb4:	79 f0       	breq	.+30     	; 0xbd4 <__fp_splitA+0x2a>
     bb6:	87 95       	ror	r24
     bb8:	08 95       	ret
     bba:	12 16       	cp	r1, r18
     bbc:	13 06       	cpc	r1, r19
     bbe:	14 06       	cpc	r1, r20
     bc0:	55 1f       	adc	r21, r21
     bc2:	f2 cf       	rjmp	.-28     	; 0xba8 <__fp_split3+0xe>
     bc4:	46 95       	lsr	r20
     bc6:	f1 df       	rcall	.-30     	; 0xbaa <__fp_splitA>
     bc8:	08 c0       	rjmp	.+16     	; 0xbda <__fp_splitA+0x30>
     bca:	16 16       	cp	r1, r22
     bcc:	17 06       	cpc	r1, r23
     bce:	18 06       	cpc	r1, r24
     bd0:	99 1f       	adc	r25, r25
     bd2:	f1 cf       	rjmp	.-30     	; 0xbb6 <__fp_splitA+0xc>
     bd4:	86 95       	lsr	r24
     bd6:	71 05       	cpc	r23, r1
     bd8:	61 05       	cpc	r22, r1
     bda:	08 94       	sec
     bdc:	08 95       	ret

00000bde <__fp_zero>:
     bde:	e8 94       	clt

00000be0 <__fp_szero>:
     be0:	bb 27       	eor	r27, r27
     be2:	66 27       	eor	r22, r22
     be4:	77 27       	eor	r23, r23
     be6:	cb 01       	movw	r24, r22
     be8:	97 f9       	bld	r25, 7
     bea:	08 95       	ret

00000bec <__mulsf3>:
     bec:	0e 94 09 06 	call	0xc12	; 0xc12 <__mulsf3x>
     bf0:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__fp_round>
     bf4:	0e 94 ae 05 	call	0xb5c	; 0xb5c <__fp_pscA>
     bf8:	38 f0       	brcs	.+14     	; 0xc08 <__mulsf3+0x1c>
     bfa:	0e 94 b5 05 	call	0xb6a	; 0xb6a <__fp_pscB>
     bfe:	20 f0       	brcs	.+8      	; 0xc08 <__mulsf3+0x1c>
     c00:	95 23       	and	r25, r21
     c02:	11 f0       	breq	.+4      	; 0xc08 <__mulsf3+0x1c>
     c04:	0c 94 a5 05 	jmp	0xb4a	; 0xb4a <__fp_inf>
     c08:	0c 94 ab 05 	jmp	0xb56	; 0xb56 <__fp_nan>
     c0c:	11 24       	eor	r1, r1
     c0e:	0c 94 f0 05 	jmp	0xbe0	; 0xbe0 <__fp_szero>

00000c12 <__mulsf3x>:
     c12:	0e 94 cd 05 	call	0xb9a	; 0xb9a <__fp_split3>
     c16:	70 f3       	brcs	.-36     	; 0xbf4 <__mulsf3+0x8>

00000c18 <__mulsf3_pse>:
     c18:	95 9f       	mul	r25, r21
     c1a:	c1 f3       	breq	.-16     	; 0xc0c <__mulsf3+0x20>
     c1c:	95 0f       	add	r25, r21
     c1e:	50 e0       	ldi	r21, 0x00	; 0
     c20:	55 1f       	adc	r21, r21
     c22:	62 9f       	mul	r22, r18
     c24:	f0 01       	movw	r30, r0
     c26:	72 9f       	mul	r23, r18
     c28:	bb 27       	eor	r27, r27
     c2a:	f0 0d       	add	r31, r0
     c2c:	b1 1d       	adc	r27, r1
     c2e:	63 9f       	mul	r22, r19
     c30:	aa 27       	eor	r26, r26
     c32:	f0 0d       	add	r31, r0
     c34:	b1 1d       	adc	r27, r1
     c36:	aa 1f       	adc	r26, r26
     c38:	64 9f       	mul	r22, r20
     c3a:	66 27       	eor	r22, r22
     c3c:	b0 0d       	add	r27, r0
     c3e:	a1 1d       	adc	r26, r1
     c40:	66 1f       	adc	r22, r22
     c42:	82 9f       	mul	r24, r18
     c44:	22 27       	eor	r18, r18
     c46:	b0 0d       	add	r27, r0
     c48:	a1 1d       	adc	r26, r1
     c4a:	62 1f       	adc	r22, r18
     c4c:	73 9f       	mul	r23, r19
     c4e:	b0 0d       	add	r27, r0
     c50:	a1 1d       	adc	r26, r1
     c52:	62 1f       	adc	r22, r18
     c54:	83 9f       	mul	r24, r19
     c56:	a0 0d       	add	r26, r0
     c58:	61 1d       	adc	r22, r1
     c5a:	22 1f       	adc	r18, r18
     c5c:	74 9f       	mul	r23, r20
     c5e:	33 27       	eor	r19, r19
     c60:	a0 0d       	add	r26, r0
     c62:	61 1d       	adc	r22, r1
     c64:	23 1f       	adc	r18, r19
     c66:	84 9f       	mul	r24, r20
     c68:	60 0d       	add	r22, r0
     c6a:	21 1d       	adc	r18, r1
     c6c:	82 2f       	mov	r24, r18
     c6e:	76 2f       	mov	r23, r22
     c70:	6a 2f       	mov	r22, r26
     c72:	11 24       	eor	r1, r1
     c74:	9f 57       	subi	r25, 0x7F	; 127
     c76:	50 40       	sbci	r21, 0x00	; 0
     c78:	9a f0       	brmi	.+38     	; 0xca0 <__mulsf3_pse+0x88>
     c7a:	f1 f0       	breq	.+60     	; 0xcb8 <__mulsf3_pse+0xa0>
     c7c:	88 23       	and	r24, r24
     c7e:	4a f0       	brmi	.+18     	; 0xc92 <__mulsf3_pse+0x7a>
     c80:	ee 0f       	add	r30, r30
     c82:	ff 1f       	adc	r31, r31
     c84:	bb 1f       	adc	r27, r27
     c86:	66 1f       	adc	r22, r22
     c88:	77 1f       	adc	r23, r23
     c8a:	88 1f       	adc	r24, r24
     c8c:	91 50       	subi	r25, 0x01	; 1
     c8e:	50 40       	sbci	r21, 0x00	; 0
     c90:	a9 f7       	brne	.-22     	; 0xc7c <__mulsf3_pse+0x64>
     c92:	9e 3f       	cpi	r25, 0xFE	; 254
     c94:	51 05       	cpc	r21, r1
     c96:	80 f0       	brcs	.+32     	; 0xcb8 <__mulsf3_pse+0xa0>
     c98:	0c 94 a5 05 	jmp	0xb4a	; 0xb4a <__fp_inf>
     c9c:	0c 94 f0 05 	jmp	0xbe0	; 0xbe0 <__fp_szero>
     ca0:	5f 3f       	cpi	r21, 0xFF	; 255
     ca2:	e4 f3       	brlt	.-8      	; 0xc9c <__mulsf3_pse+0x84>
     ca4:	98 3e       	cpi	r25, 0xE8	; 232
     ca6:	d4 f3       	brlt	.-12     	; 0xc9c <__mulsf3_pse+0x84>
     ca8:	86 95       	lsr	r24
     caa:	77 95       	ror	r23
     cac:	67 95       	ror	r22
     cae:	b7 95       	ror	r27
     cb0:	f7 95       	ror	r31
     cb2:	e7 95       	ror	r30
     cb4:	9f 5f       	subi	r25, 0xFF	; 255
     cb6:	c1 f7       	brne	.-16     	; 0xca8 <__mulsf3_pse+0x90>
     cb8:	fe 2b       	or	r31, r30
     cba:	88 0f       	add	r24, r24
     cbc:	91 1d       	adc	r25, r1
     cbe:	96 95       	lsr	r25
     cc0:	87 95       	ror	r24
     cc2:	97 f9       	bld	r25, 7
     cc4:	08 95       	ret

00000cc6 <pow>:
     cc6:	fa 01       	movw	r30, r20
     cc8:	ee 0f       	add	r30, r30
     cca:	ff 1f       	adc	r31, r31
     ccc:	30 96       	adiw	r30, 0x00	; 0
     cce:	21 05       	cpc	r18, r1
     cd0:	31 05       	cpc	r19, r1
     cd2:	a1 f1       	breq	.+104    	; 0xd3c <pow+0x76>
     cd4:	61 15       	cp	r22, r1
     cd6:	71 05       	cpc	r23, r1
     cd8:	61 f4       	brne	.+24     	; 0xcf2 <pow+0x2c>
     cda:	80 38       	cpi	r24, 0x80	; 128
     cdc:	bf e3       	ldi	r27, 0x3F	; 63
     cde:	9b 07       	cpc	r25, r27
     ce0:	49 f1       	breq	.+82     	; 0xd34 <pow+0x6e>
     ce2:	68 94       	set
     ce4:	90 38       	cpi	r25, 0x80	; 128
     ce6:	81 05       	cpc	r24, r1
     ce8:	61 f0       	breq	.+24     	; 0xd02 <pow+0x3c>
     cea:	80 38       	cpi	r24, 0x80	; 128
     cec:	bf ef       	ldi	r27, 0xFF	; 255
     cee:	9b 07       	cpc	r25, r27
     cf0:	41 f0       	breq	.+16     	; 0xd02 <pow+0x3c>
     cf2:	99 23       	and	r25, r25
     cf4:	4a f5       	brpl	.+82     	; 0xd48 <pow+0x82>
     cf6:	ff 3f       	cpi	r31, 0xFF	; 255
     cf8:	e1 05       	cpc	r30, r1
     cfa:	31 05       	cpc	r19, r1
     cfc:	21 05       	cpc	r18, r1
     cfe:	19 f1       	breq	.+70     	; 0xd46 <pow+0x80>
     d00:	e8 94       	clt
     d02:	08 94       	sec
     d04:	e7 95       	ror	r30
     d06:	d9 01       	movw	r26, r18
     d08:	aa 23       	and	r26, r26
     d0a:	29 f4       	brne	.+10     	; 0xd16 <pow+0x50>
     d0c:	ab 2f       	mov	r26, r27
     d0e:	be 2f       	mov	r27, r30
     d10:	f8 5f       	subi	r31, 0xF8	; 248
     d12:	d0 f3       	brcs	.-12     	; 0xd08 <pow+0x42>
     d14:	10 c0       	rjmp	.+32     	; 0xd36 <pow+0x70>
     d16:	ff 5f       	subi	r31, 0xFF	; 255
     d18:	70 f4       	brcc	.+28     	; 0xd36 <pow+0x70>
     d1a:	a6 95       	lsr	r26
     d1c:	e0 f7       	brcc	.-8      	; 0xd16 <pow+0x50>
     d1e:	f7 39       	cpi	r31, 0x97	; 151
     d20:	50 f0       	brcs	.+20     	; 0xd36 <pow+0x70>
     d22:	19 f0       	breq	.+6      	; 0xd2a <pow+0x64>
     d24:	ff 3a       	cpi	r31, 0xAF	; 175
     d26:	38 f4       	brcc	.+14     	; 0xd36 <pow+0x70>
     d28:	9f 77       	andi	r25, 0x7F	; 127
     d2a:	9f 93       	push	r25
     d2c:	0d d0       	rcall	.+26     	; 0xd48 <pow+0x82>
     d2e:	0f 90       	pop	r0
     d30:	07 fc       	sbrc	r0, 7
     d32:	90 58       	subi	r25, 0x80	; 128
     d34:	08 95       	ret
     d36:	46 f0       	brts	.+16     	; 0xd48 <pow+0x82>
     d38:	0c 94 ab 05 	jmp	0xb56	; 0xb56 <__fp_nan>
     d3c:	60 e0       	ldi	r22, 0x00	; 0
     d3e:	70 e0       	ldi	r23, 0x00	; 0
     d40:	80 e8       	ldi	r24, 0x80	; 128
     d42:	9f e3       	ldi	r25, 0x3F	; 63
     d44:	08 95       	ret
     d46:	4f e7       	ldi	r20, 0x7F	; 127
     d48:	9f 77       	andi	r25, 0x7F	; 127
     d4a:	5f 93       	push	r21
     d4c:	4f 93       	push	r20
     d4e:	3f 93       	push	r19
     d50:	2f 93       	push	r18
     d52:	0e 94 5e 07 	call	0xebc	; 0xebc <log>
     d56:	2f 91       	pop	r18
     d58:	3f 91       	pop	r19
     d5a:	4f 91       	pop	r20
     d5c:	5f 91       	pop	r21
     d5e:	0e 94 f6 05 	call	0xbec	; 0xbec <__mulsf3>
     d62:	0c 94 bb 06 	jmp	0xd76	; 0xd76 <exp>
     d66:	29 f4       	brne	.+10     	; 0xd72 <pow+0xac>
     d68:	16 f0       	brts	.+4      	; 0xd6e <pow+0xa8>
     d6a:	0c 94 a5 05 	jmp	0xb4a	; 0xb4a <__fp_inf>
     d6e:	0c 94 ef 05 	jmp	0xbde	; 0xbde <__fp_zero>
     d72:	0c 94 ab 05 	jmp	0xb56	; 0xb56 <__fp_nan>

00000d76 <exp>:
     d76:	0e 94 d5 05 	call	0xbaa	; 0xbaa <__fp_splitA>
     d7a:	a8 f3       	brcs	.-22     	; 0xd66 <pow+0xa0>
     d7c:	96 38       	cpi	r25, 0x86	; 134
     d7e:	a0 f7       	brcc	.-24     	; 0xd68 <pow+0xa2>
     d80:	07 f8       	bld	r0, 7
     d82:	0f 92       	push	r0
     d84:	e8 94       	clt
     d86:	2b e3       	ldi	r18, 0x3B	; 59
     d88:	3a ea       	ldi	r19, 0xAA	; 170
     d8a:	48 eb       	ldi	r20, 0xB8	; 184
     d8c:	5f e7       	ldi	r21, 0x7F	; 127
     d8e:	0e 94 0c 06 	call	0xc18	; 0xc18 <__mulsf3_pse>
     d92:	0f 92       	push	r0
     d94:	0f 92       	push	r0
     d96:	0f 92       	push	r0
     d98:	4d b7       	in	r20, 0x3d	; 61
     d9a:	5e b7       	in	r21, 0x3e	; 62
     d9c:	0f 92       	push	r0
     d9e:	0e 94 a6 07 	call	0xf4c	; 0xf4c <modf>
     da2:	e8 e6       	ldi	r30, 0x68	; 104
     da4:	f0 e0       	ldi	r31, 0x00	; 0
     da6:	0e 94 ed 06 	call	0xdda	; 0xdda <__fp_powser>
     daa:	4f 91       	pop	r20
     dac:	5f 91       	pop	r21
     dae:	ef 91       	pop	r30
     db0:	ff 91       	pop	r31
     db2:	e5 95       	asr	r30
     db4:	ee 1f       	adc	r30, r30
     db6:	ff 1f       	adc	r31, r31
     db8:	49 f0       	breq	.+18     	; 0xdcc <exp+0x56>
     dba:	fe 57       	subi	r31, 0x7E	; 126
     dbc:	e0 68       	ori	r30, 0x80	; 128
     dbe:	44 27       	eor	r20, r20
     dc0:	ee 0f       	add	r30, r30
     dc2:	44 1f       	adc	r20, r20
     dc4:	fa 95       	dec	r31
     dc6:	e1 f7       	brne	.-8      	; 0xdc0 <exp+0x4a>
     dc8:	41 95       	neg	r20
     dca:	55 0b       	sbc	r21, r21
     dcc:	0e 94 20 07 	call	0xe40	; 0xe40 <ldexp>
     dd0:	0f 90       	pop	r0
     dd2:	07 fe       	sbrs	r0, 7
     dd4:	0c 94 14 07 	jmp	0xe28	; 0xe28 <inverse>
     dd8:	08 95       	ret

00000dda <__fp_powser>:
     dda:	df 93       	push	r29
     ddc:	cf 93       	push	r28
     dde:	1f 93       	push	r17
     de0:	0f 93       	push	r16
     de2:	ff 92       	push	r15
     de4:	ef 92       	push	r14
     de6:	df 92       	push	r13
     de8:	7b 01       	movw	r14, r22
     dea:	8c 01       	movw	r16, r24
     dec:	68 94       	set
     dee:	06 c0       	rjmp	.+12     	; 0xdfc <__fp_powser+0x22>
     df0:	da 2e       	mov	r13, r26
     df2:	ef 01       	movw	r28, r30
     df4:	0e 94 09 06 	call	0xc12	; 0xc12 <__mulsf3x>
     df8:	fe 01       	movw	r30, r28
     dfa:	e8 94       	clt
     dfc:	a5 91       	lpm	r26, Z+
     dfe:	25 91       	lpm	r18, Z+
     e00:	35 91       	lpm	r19, Z+
     e02:	45 91       	lpm	r20, Z+
     e04:	55 91       	lpm	r21, Z+
     e06:	a6 f3       	brts	.-24     	; 0xdf0 <__fp_powser+0x16>
     e08:	ef 01       	movw	r28, r30
     e0a:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <__addsf3x>
     e0e:	fe 01       	movw	r30, r28
     e10:	97 01       	movw	r18, r14
     e12:	a8 01       	movw	r20, r16
     e14:	da 94       	dec	r13
     e16:	69 f7       	brne	.-38     	; 0xdf2 <__fp_powser+0x18>
     e18:	df 90       	pop	r13
     e1a:	ef 90       	pop	r14
     e1c:	ff 90       	pop	r15
     e1e:	0f 91       	pop	r16
     e20:	1f 91       	pop	r17
     e22:	cf 91       	pop	r28
     e24:	df 91       	pop	r29
     e26:	08 95       	ret

00000e28 <inverse>:
     e28:	9b 01       	movw	r18, r22
     e2a:	ac 01       	movw	r20, r24
     e2c:	60 e0       	ldi	r22, 0x00	; 0
     e2e:	70 e0       	ldi	r23, 0x00	; 0
     e30:	80 e8       	ldi	r24, 0x80	; 128
     e32:	9f e3       	ldi	r25, 0x3F	; 63
     e34:	0c 94 c0 04 	jmp	0x980	; 0x980 <__divsf3>
     e38:	0c 94 a5 05 	jmp	0xb4a	; 0xb4a <__fp_inf>
     e3c:	0c 94 da 07 	jmp	0xfb4	; 0xfb4 <__fp_mpack>

00000e40 <ldexp>:
     e40:	0e 94 d5 05 	call	0xbaa	; 0xbaa <__fp_splitA>
     e44:	d8 f3       	brcs	.-10     	; 0xe3c <inverse+0x14>
     e46:	99 23       	and	r25, r25
     e48:	c9 f3       	breq	.-14     	; 0xe3c <inverse+0x14>
     e4a:	94 0f       	add	r25, r20
     e4c:	51 1d       	adc	r21, r1
     e4e:	a3 f3       	brvs	.-24     	; 0xe38 <inverse+0x10>
     e50:	91 50       	subi	r25, 0x01	; 1
     e52:	50 40       	sbci	r21, 0x00	; 0
     e54:	94 f0       	brlt	.+36     	; 0xe7a <ldexp+0x3a>
     e56:	59 f0       	breq	.+22     	; 0xe6e <ldexp+0x2e>
     e58:	88 23       	and	r24, r24
     e5a:	32 f0       	brmi	.+12     	; 0xe68 <ldexp+0x28>
     e5c:	66 0f       	add	r22, r22
     e5e:	77 1f       	adc	r23, r23
     e60:	88 1f       	adc	r24, r24
     e62:	91 50       	subi	r25, 0x01	; 1
     e64:	50 40       	sbci	r21, 0x00	; 0
     e66:	c1 f7       	brne	.-16     	; 0xe58 <ldexp+0x18>
     e68:	9e 3f       	cpi	r25, 0xFE	; 254
     e6a:	51 05       	cpc	r21, r1
     e6c:	2c f7       	brge	.-54     	; 0xe38 <inverse+0x10>
     e6e:	88 0f       	add	r24, r24
     e70:	91 1d       	adc	r25, r1
     e72:	96 95       	lsr	r25
     e74:	87 95       	ror	r24
     e76:	97 f9       	bld	r25, 7
     e78:	08 95       	ret
     e7a:	5f 3f       	cpi	r21, 0xFF	; 255
     e7c:	ac f0       	brlt	.+42     	; 0xea8 <ldexp+0x68>
     e7e:	98 3e       	cpi	r25, 0xE8	; 232
     e80:	9c f0       	brlt	.+38     	; 0xea8 <ldexp+0x68>
     e82:	bb 27       	eor	r27, r27
     e84:	86 95       	lsr	r24
     e86:	77 95       	ror	r23
     e88:	67 95       	ror	r22
     e8a:	b7 95       	ror	r27
     e8c:	08 f4       	brcc	.+2      	; 0xe90 <ldexp+0x50>
     e8e:	b1 60       	ori	r27, 0x01	; 1
     e90:	93 95       	inc	r25
     e92:	c1 f7       	brne	.-16     	; 0xe84 <ldexp+0x44>
     e94:	bb 0f       	add	r27, r27
     e96:	58 f7       	brcc	.-42     	; 0xe6e <ldexp+0x2e>
     e98:	11 f4       	brne	.+4      	; 0xe9e <ldexp+0x5e>
     e9a:	60 ff       	sbrs	r22, 0
     e9c:	e8 cf       	rjmp	.-48     	; 0xe6e <ldexp+0x2e>
     e9e:	6f 5f       	subi	r22, 0xFF	; 255
     ea0:	7f 4f       	sbci	r23, 0xFF	; 255
     ea2:	8f 4f       	sbci	r24, 0xFF	; 255
     ea4:	9f 4f       	sbci	r25, 0xFF	; 255
     ea6:	e3 cf       	rjmp	.-58     	; 0xe6e <ldexp+0x2e>
     ea8:	0c 94 f0 05 	jmp	0xbe0	; 0xbe0 <__fp_szero>
     eac:	16 f0       	brts	.+4      	; 0xeb2 <ldexp+0x72>
     eae:	0c 94 da 07 	jmp	0xfb4	; 0xfb4 <__fp_mpack>
     eb2:	0c 94 ab 05 	jmp	0xb56	; 0xb56 <__fp_nan>
     eb6:	68 94       	set
     eb8:	0c 94 a5 05 	jmp	0xb4a	; 0xb4a <__fp_inf>

00000ebc <log>:
     ebc:	0e 94 d5 05 	call	0xbaa	; 0xbaa <__fp_splitA>
     ec0:	a8 f3       	brcs	.-22     	; 0xeac <ldexp+0x6c>
     ec2:	99 23       	and	r25, r25
     ec4:	c1 f3       	breq	.-16     	; 0xeb6 <ldexp+0x76>
     ec6:	ae f3       	brts	.-22     	; 0xeb2 <ldexp+0x72>
     ec8:	df 93       	push	r29
     eca:	cf 93       	push	r28
     ecc:	1f 93       	push	r17
     ece:	0f 93       	push	r16
     ed0:	ff 92       	push	r15
     ed2:	c9 2f       	mov	r28, r25
     ed4:	dd 27       	eor	r29, r29
     ed6:	88 23       	and	r24, r24
     ed8:	2a f0       	brmi	.+10     	; 0xee4 <log+0x28>
     eda:	21 97       	sbiw	r28, 0x01	; 1
     edc:	66 0f       	add	r22, r22
     ede:	77 1f       	adc	r23, r23
     ee0:	88 1f       	adc	r24, r24
     ee2:	da f7       	brpl	.-10     	; 0xeda <log+0x1e>
     ee4:	20 e0       	ldi	r18, 0x00	; 0
     ee6:	30 e0       	ldi	r19, 0x00	; 0
     ee8:	40 e8       	ldi	r20, 0x80	; 128
     eea:	5f eb       	ldi	r21, 0xBF	; 191
     eec:	9f e3       	ldi	r25, 0x3F	; 63
     eee:	88 39       	cpi	r24, 0x98	; 152
     ef0:	20 f0       	brcs	.+8      	; 0xefa <log+0x3e>
     ef2:	80 3e       	cpi	r24, 0xE0	; 224
     ef4:	38 f0       	brcs	.+14     	; 0xf04 <log+0x48>
     ef6:	21 96       	adiw	r28, 0x01	; 1
     ef8:	8f 77       	andi	r24, 0x7F	; 127
     efa:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__addsf3>
     efe:	e0 e9       	ldi	r30, 0x90	; 144
     f00:	f0 e0       	ldi	r31, 0x00	; 0
     f02:	04 c0       	rjmp	.+8      	; 0xf0c <log+0x50>
     f04:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__addsf3>
     f08:	ed eb       	ldi	r30, 0xBD	; 189
     f0a:	f0 e0       	ldi	r31, 0x00	; 0
     f0c:	0e 94 ed 06 	call	0xdda	; 0xdda <__fp_powser>
     f10:	8b 01       	movw	r16, r22
     f12:	be 01       	movw	r22, r28
     f14:	ec 01       	movw	r28, r24
     f16:	fb 2e       	mov	r15, r27
     f18:	6f 57       	subi	r22, 0x7F	; 127
     f1a:	71 09       	sbc	r23, r1
     f1c:	75 95       	asr	r23
     f1e:	77 1f       	adc	r23, r23
     f20:	88 0b       	sbc	r24, r24
     f22:	99 0b       	sbc	r25, r25
     f24:	0e 94 6a 05 	call	0xad4	; 0xad4 <__floatsisf>
     f28:	28 e1       	ldi	r18, 0x18	; 24
     f2a:	32 e7       	ldi	r19, 0x72	; 114
     f2c:	41 e3       	ldi	r20, 0x31	; 49
     f2e:	5f e3       	ldi	r21, 0x3F	; 63
     f30:	0e 94 09 06 	call	0xc12	; 0xc12 <__mulsf3x>
     f34:	af 2d       	mov	r26, r15
     f36:	98 01       	movw	r18, r16
     f38:	ae 01       	movw	r20, r28
     f3a:	ff 90       	pop	r15
     f3c:	0f 91       	pop	r16
     f3e:	1f 91       	pop	r17
     f40:	cf 91       	pop	r28
     f42:	df 91       	pop	r29
     f44:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <__addsf3x>
     f48:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__fp_round>

00000f4c <modf>:
     f4c:	fa 01       	movw	r30, r20
     f4e:	dc 01       	movw	r26, r24
     f50:	aa 0f       	add	r26, r26
     f52:	bb 1f       	adc	r27, r27
     f54:	9b 01       	movw	r18, r22
     f56:	ac 01       	movw	r20, r24
     f58:	bf 57       	subi	r27, 0x7F	; 127
     f5a:	28 f4       	brcc	.+10     	; 0xf66 <modf+0x1a>
     f5c:	22 27       	eor	r18, r18
     f5e:	33 27       	eor	r19, r19
     f60:	44 27       	eor	r20, r20
     f62:	50 78       	andi	r21, 0x80	; 128
     f64:	20 c0       	rjmp	.+64     	; 0xfa6 <modf+0x5a>
     f66:	b7 51       	subi	r27, 0x17	; 23
     f68:	90 f4       	brcc	.+36     	; 0xf8e <modf+0x42>
     f6a:	ab 2f       	mov	r26, r27
     f6c:	00 24       	eor	r0, r0
     f6e:	46 95       	lsr	r20
     f70:	37 95       	ror	r19
     f72:	27 95       	ror	r18
     f74:	01 1c       	adc	r0, r1
     f76:	a3 95       	inc	r26
     f78:	d2 f3       	brmi	.-12     	; 0xf6e <modf+0x22>
     f7a:	00 20       	and	r0, r0
     f7c:	71 f0       	breq	.+28     	; 0xf9a <modf+0x4e>
     f7e:	22 0f       	add	r18, r18
     f80:	33 1f       	adc	r19, r19
     f82:	44 1f       	adc	r20, r20
     f84:	b3 95       	inc	r27
     f86:	da f3       	brmi	.-10     	; 0xf7e <modf+0x32>
     f88:	0e d0       	rcall	.+28     	; 0xfa6 <modf+0x5a>
     f8a:	0c 94 53 04 	jmp	0x8a6	; 0x8a6 <__subsf3>
     f8e:	61 30       	cpi	r22, 0x01	; 1
     f90:	71 05       	cpc	r23, r1
     f92:	a0 e8       	ldi	r26, 0x80	; 128
     f94:	8a 07       	cpc	r24, r26
     f96:	b9 46       	sbci	r27, 0x69	; 105
     f98:	30 f4       	brcc	.+12     	; 0xfa6 <modf+0x5a>
     f9a:	9b 01       	movw	r18, r22
     f9c:	ac 01       	movw	r20, r24
     f9e:	66 27       	eor	r22, r22
     fa0:	77 27       	eor	r23, r23
     fa2:	88 27       	eor	r24, r24
     fa4:	90 78       	andi	r25, 0x80	; 128
     fa6:	30 96       	adiw	r30, 0x00	; 0
     fa8:	21 f0       	breq	.+8      	; 0xfb2 <modf+0x66>
     faa:	20 83       	st	Z, r18
     fac:	31 83       	std	Z+1, r19	; 0x01
     fae:	42 83       	std	Z+2, r20	; 0x02
     fb0:	53 83       	std	Z+3, r21	; 0x03
     fb2:	08 95       	ret

00000fb4 <__fp_mpack>:
     fb4:	9f 3f       	cpi	r25, 0xFF	; 255
     fb6:	31 f0       	breq	.+12     	; 0xfc4 <__fp_mpack_finite+0xc>

00000fb8 <__fp_mpack_finite>:
     fb8:	91 50       	subi	r25, 0x01	; 1
     fba:	20 f4       	brcc	.+8      	; 0xfc4 <__fp_mpack_finite+0xc>
     fbc:	87 95       	ror	r24
     fbe:	77 95       	ror	r23
     fc0:	67 95       	ror	r22
     fc2:	b7 95       	ror	r27
     fc4:	88 0f       	add	r24, r24
     fc6:	91 1d       	adc	r25, r1
     fc8:	96 95       	lsr	r25
     fca:	87 95       	ror	r24
     fcc:	97 f9       	bld	r25, 7
     fce:	08 95       	ret

00000fd0 <__itoa_ncheck>:
     fd0:	bb 27       	eor	r27, r27
     fd2:	4a 30       	cpi	r20, 0x0A	; 10
     fd4:	31 f4       	brne	.+12     	; 0xfe2 <__itoa_ncheck+0x12>
     fd6:	99 23       	and	r25, r25
     fd8:	22 f4       	brpl	.+8      	; 0xfe2 <__itoa_ncheck+0x12>
     fda:	bd e2       	ldi	r27, 0x2D	; 45
     fdc:	90 95       	com	r25
     fde:	81 95       	neg	r24
     fe0:	9f 4f       	sbci	r25, 0xFF	; 255
     fe2:	0c 94 f4 07 	jmp	0xfe8	; 0xfe8 <__utoa_common>

00000fe6 <__utoa_ncheck>:
     fe6:	bb 27       	eor	r27, r27

00000fe8 <__utoa_common>:
     fe8:	fb 01       	movw	r30, r22
     fea:	55 27       	eor	r21, r21
     fec:	aa 27       	eor	r26, r26
     fee:	88 0f       	add	r24, r24
     ff0:	99 1f       	adc	r25, r25
     ff2:	aa 1f       	adc	r26, r26
     ff4:	a4 17       	cp	r26, r20
     ff6:	10 f0       	brcs	.+4      	; 0xffc <__utoa_common+0x14>
     ff8:	a4 1b       	sub	r26, r20
     ffa:	83 95       	inc	r24
     ffc:	50 51       	subi	r21, 0x10	; 16
     ffe:	b9 f7       	brne	.-18     	; 0xfee <__utoa_common+0x6>
    1000:	a0 5d       	subi	r26, 0xD0	; 208
    1002:	aa 33       	cpi	r26, 0x3A	; 58
    1004:	08 f0       	brcs	.+2      	; 0x1008 <__utoa_common+0x20>
    1006:	a9 5d       	subi	r26, 0xD9	; 217
    1008:	a1 93       	st	Z+, r26
    100a:	00 97       	sbiw	r24, 0x00	; 0
    100c:	79 f7       	brne	.-34     	; 0xfec <__utoa_common+0x4>
    100e:	b1 11       	cpse	r27, r1
    1010:	b1 93       	st	Z+, r27
    1012:	11 92       	st	Z+, r1
    1014:	cb 01       	movw	r24, r22
    1016:	0c 94 26 0a 	jmp	0x144c	; 0x144c <strrev>

0000101a <sprintf>:
    101a:	ae e0       	ldi	r26, 0x0E	; 14
    101c:	b0 e0       	ldi	r27, 0x00	; 0
    101e:	e3 e1       	ldi	r30, 0x13	; 19
    1020:	f8 e0       	ldi	r31, 0x08	; 8
    1022:	0c 94 de 0a 	jmp	0x15bc	; 0x15bc <__prologue_saves__+0x1c>
    1026:	0d 89       	ldd	r16, Y+21	; 0x15
    1028:	1e 89       	ldd	r17, Y+22	; 0x16
    102a:	86 e0       	ldi	r24, 0x06	; 6
    102c:	8c 83       	std	Y+4, r24	; 0x04
    102e:	1a 83       	std	Y+2, r17	; 0x02
    1030:	09 83       	std	Y+1, r16	; 0x01
    1032:	8f ef       	ldi	r24, 0xFF	; 255
    1034:	9f e7       	ldi	r25, 0x7F	; 127
    1036:	9e 83       	std	Y+6, r25	; 0x06
    1038:	8d 83       	std	Y+5, r24	; 0x05
    103a:	ae 01       	movw	r20, r28
    103c:	47 5e       	subi	r20, 0xE7	; 231
    103e:	5f 4f       	sbci	r21, 0xFF	; 255
    1040:	6f 89       	ldd	r22, Y+23	; 0x17
    1042:	78 8d       	ldd	r23, Y+24	; 0x18
    1044:	ce 01       	movw	r24, r28
    1046:	01 96       	adiw	r24, 0x01	; 1
    1048:	0e 94 2f 08 	call	0x105e	; 0x105e <vfprintf>
    104c:	ef 81       	ldd	r30, Y+7	; 0x07
    104e:	f8 85       	ldd	r31, Y+8	; 0x08
    1050:	e0 0f       	add	r30, r16
    1052:	f1 1f       	adc	r31, r17
    1054:	10 82       	st	Z, r1
    1056:	2e 96       	adiw	r28, 0x0e	; 14
    1058:	e4 e0       	ldi	r30, 0x04	; 4
    105a:	0c 94 fa 0a 	jmp	0x15f4	; 0x15f4 <__epilogue_restores__+0x1c>

0000105e <vfprintf>:
    105e:	ab e0       	ldi	r26, 0x0B	; 11
    1060:	b0 e0       	ldi	r27, 0x00	; 0
    1062:	e5 e3       	ldi	r30, 0x35	; 53
    1064:	f8 e0       	ldi	r31, 0x08	; 8
    1066:	0c 94 d0 0a 	jmp	0x15a0	; 0x15a0 <__prologue_saves__>
    106a:	6c 01       	movw	r12, r24
    106c:	7b 01       	movw	r14, r22
    106e:	8a 01       	movw	r16, r20
    1070:	fc 01       	movw	r30, r24
    1072:	17 82       	std	Z+7, r1	; 0x07
    1074:	16 82       	std	Z+6, r1	; 0x06
    1076:	83 81       	ldd	r24, Z+3	; 0x03
    1078:	81 ff       	sbrs	r24, 1
    107a:	cc c1       	rjmp	.+920    	; 0x1414 <vfprintf+0x3b6>
    107c:	ce 01       	movw	r24, r28
    107e:	01 96       	adiw	r24, 0x01	; 1
    1080:	3c 01       	movw	r6, r24
    1082:	f6 01       	movw	r30, r12
    1084:	93 81       	ldd	r25, Z+3	; 0x03
    1086:	f7 01       	movw	r30, r14
    1088:	93 fd       	sbrc	r25, 3
    108a:	85 91       	lpm	r24, Z+
    108c:	93 ff       	sbrs	r25, 3
    108e:	81 91       	ld	r24, Z+
    1090:	7f 01       	movw	r14, r30
    1092:	88 23       	and	r24, r24
    1094:	09 f4       	brne	.+2      	; 0x1098 <vfprintf+0x3a>
    1096:	ba c1       	rjmp	.+884    	; 0x140c <vfprintf+0x3ae>
    1098:	85 32       	cpi	r24, 0x25	; 37
    109a:	39 f4       	brne	.+14     	; 0x10aa <vfprintf+0x4c>
    109c:	93 fd       	sbrc	r25, 3
    109e:	85 91       	lpm	r24, Z+
    10a0:	93 ff       	sbrs	r25, 3
    10a2:	81 91       	ld	r24, Z+
    10a4:	7f 01       	movw	r14, r30
    10a6:	85 32       	cpi	r24, 0x25	; 37
    10a8:	29 f4       	brne	.+10     	; 0x10b4 <vfprintf+0x56>
    10aa:	b6 01       	movw	r22, r12
    10ac:	90 e0       	ldi	r25, 0x00	; 0
    10ae:	0e 94 36 0a 	call	0x146c	; 0x146c <fputc>
    10b2:	e7 cf       	rjmp	.-50     	; 0x1082 <vfprintf+0x24>
    10b4:	91 2c       	mov	r9, r1
    10b6:	21 2c       	mov	r2, r1
    10b8:	31 2c       	mov	r3, r1
    10ba:	ff e1       	ldi	r31, 0x1F	; 31
    10bc:	f3 15       	cp	r31, r3
    10be:	d8 f0       	brcs	.+54     	; 0x10f6 <vfprintf+0x98>
    10c0:	8b 32       	cpi	r24, 0x2B	; 43
    10c2:	79 f0       	breq	.+30     	; 0x10e2 <vfprintf+0x84>
    10c4:	38 f4       	brcc	.+14     	; 0x10d4 <vfprintf+0x76>
    10c6:	80 32       	cpi	r24, 0x20	; 32
    10c8:	79 f0       	breq	.+30     	; 0x10e8 <vfprintf+0x8a>
    10ca:	83 32       	cpi	r24, 0x23	; 35
    10cc:	a1 f4       	brne	.+40     	; 0x10f6 <vfprintf+0x98>
    10ce:	23 2d       	mov	r18, r3
    10d0:	20 61       	ori	r18, 0x10	; 16
    10d2:	1d c0       	rjmp	.+58     	; 0x110e <vfprintf+0xb0>
    10d4:	8d 32       	cpi	r24, 0x2D	; 45
    10d6:	61 f0       	breq	.+24     	; 0x10f0 <vfprintf+0x92>
    10d8:	80 33       	cpi	r24, 0x30	; 48
    10da:	69 f4       	brne	.+26     	; 0x10f6 <vfprintf+0x98>
    10dc:	23 2d       	mov	r18, r3
    10de:	21 60       	ori	r18, 0x01	; 1
    10e0:	16 c0       	rjmp	.+44     	; 0x110e <vfprintf+0xb0>
    10e2:	83 2d       	mov	r24, r3
    10e4:	82 60       	ori	r24, 0x02	; 2
    10e6:	38 2e       	mov	r3, r24
    10e8:	e3 2d       	mov	r30, r3
    10ea:	e4 60       	ori	r30, 0x04	; 4
    10ec:	3e 2e       	mov	r3, r30
    10ee:	2a c0       	rjmp	.+84     	; 0x1144 <vfprintf+0xe6>
    10f0:	f3 2d       	mov	r31, r3
    10f2:	f8 60       	ori	r31, 0x08	; 8
    10f4:	1d c0       	rjmp	.+58     	; 0x1130 <vfprintf+0xd2>
    10f6:	37 fc       	sbrc	r3, 7
    10f8:	2d c0       	rjmp	.+90     	; 0x1154 <vfprintf+0xf6>
    10fa:	20 ed       	ldi	r18, 0xD0	; 208
    10fc:	28 0f       	add	r18, r24
    10fe:	2a 30       	cpi	r18, 0x0A	; 10
    1100:	40 f0       	brcs	.+16     	; 0x1112 <vfprintf+0xb4>
    1102:	8e 32       	cpi	r24, 0x2E	; 46
    1104:	b9 f4       	brne	.+46     	; 0x1134 <vfprintf+0xd6>
    1106:	36 fc       	sbrc	r3, 6
    1108:	81 c1       	rjmp	.+770    	; 0x140c <vfprintf+0x3ae>
    110a:	23 2d       	mov	r18, r3
    110c:	20 64       	ori	r18, 0x40	; 64
    110e:	32 2e       	mov	r3, r18
    1110:	19 c0       	rjmp	.+50     	; 0x1144 <vfprintf+0xe6>
    1112:	36 fe       	sbrs	r3, 6
    1114:	06 c0       	rjmp	.+12     	; 0x1122 <vfprintf+0xc4>
    1116:	8a e0       	ldi	r24, 0x0A	; 10
    1118:	98 9e       	mul	r9, r24
    111a:	20 0d       	add	r18, r0
    111c:	11 24       	eor	r1, r1
    111e:	92 2e       	mov	r9, r18
    1120:	11 c0       	rjmp	.+34     	; 0x1144 <vfprintf+0xe6>
    1122:	ea e0       	ldi	r30, 0x0A	; 10
    1124:	2e 9e       	mul	r2, r30
    1126:	20 0d       	add	r18, r0
    1128:	11 24       	eor	r1, r1
    112a:	22 2e       	mov	r2, r18
    112c:	f3 2d       	mov	r31, r3
    112e:	f0 62       	ori	r31, 0x20	; 32
    1130:	3f 2e       	mov	r3, r31
    1132:	08 c0       	rjmp	.+16     	; 0x1144 <vfprintf+0xe6>
    1134:	8c 36       	cpi	r24, 0x6C	; 108
    1136:	21 f4       	brne	.+8      	; 0x1140 <vfprintf+0xe2>
    1138:	83 2d       	mov	r24, r3
    113a:	80 68       	ori	r24, 0x80	; 128
    113c:	38 2e       	mov	r3, r24
    113e:	02 c0       	rjmp	.+4      	; 0x1144 <vfprintf+0xe6>
    1140:	88 36       	cpi	r24, 0x68	; 104
    1142:	41 f4       	brne	.+16     	; 0x1154 <vfprintf+0xf6>
    1144:	f7 01       	movw	r30, r14
    1146:	93 fd       	sbrc	r25, 3
    1148:	85 91       	lpm	r24, Z+
    114a:	93 ff       	sbrs	r25, 3
    114c:	81 91       	ld	r24, Z+
    114e:	7f 01       	movw	r14, r30
    1150:	81 11       	cpse	r24, r1
    1152:	b3 cf       	rjmp	.-154    	; 0x10ba <vfprintf+0x5c>
    1154:	98 2f       	mov	r25, r24
    1156:	9f 7d       	andi	r25, 0xDF	; 223
    1158:	95 54       	subi	r25, 0x45	; 69
    115a:	93 30       	cpi	r25, 0x03	; 3
    115c:	28 f4       	brcc	.+10     	; 0x1168 <vfprintf+0x10a>
    115e:	0c 5f       	subi	r16, 0xFC	; 252
    1160:	1f 4f       	sbci	r17, 0xFF	; 255
    1162:	9f e3       	ldi	r25, 0x3F	; 63
    1164:	99 83       	std	Y+1, r25	; 0x01
    1166:	0d c0       	rjmp	.+26     	; 0x1182 <vfprintf+0x124>
    1168:	83 36       	cpi	r24, 0x63	; 99
    116a:	31 f0       	breq	.+12     	; 0x1178 <vfprintf+0x11a>
    116c:	83 37       	cpi	r24, 0x73	; 115
    116e:	71 f0       	breq	.+28     	; 0x118c <vfprintf+0x12e>
    1170:	83 35       	cpi	r24, 0x53	; 83
    1172:	09 f0       	breq	.+2      	; 0x1176 <vfprintf+0x118>
    1174:	59 c0       	rjmp	.+178    	; 0x1228 <vfprintf+0x1ca>
    1176:	21 c0       	rjmp	.+66     	; 0x11ba <vfprintf+0x15c>
    1178:	f8 01       	movw	r30, r16
    117a:	80 81       	ld	r24, Z
    117c:	89 83       	std	Y+1, r24	; 0x01
    117e:	0e 5f       	subi	r16, 0xFE	; 254
    1180:	1f 4f       	sbci	r17, 0xFF	; 255
    1182:	88 24       	eor	r8, r8
    1184:	83 94       	inc	r8
    1186:	91 2c       	mov	r9, r1
    1188:	53 01       	movw	r10, r6
    118a:	13 c0       	rjmp	.+38     	; 0x11b2 <vfprintf+0x154>
    118c:	28 01       	movw	r4, r16
    118e:	f2 e0       	ldi	r31, 0x02	; 2
    1190:	4f 0e       	add	r4, r31
    1192:	51 1c       	adc	r5, r1
    1194:	f8 01       	movw	r30, r16
    1196:	a0 80       	ld	r10, Z
    1198:	b1 80       	ldd	r11, Z+1	; 0x01
    119a:	36 fe       	sbrs	r3, 6
    119c:	03 c0       	rjmp	.+6      	; 0x11a4 <vfprintf+0x146>
    119e:	69 2d       	mov	r22, r9
    11a0:	70 e0       	ldi	r23, 0x00	; 0
    11a2:	02 c0       	rjmp	.+4      	; 0x11a8 <vfprintf+0x14a>
    11a4:	6f ef       	ldi	r22, 0xFF	; 255
    11a6:	7f ef       	ldi	r23, 0xFF	; 255
    11a8:	c5 01       	movw	r24, r10
    11aa:	0e 94 1b 0a 	call	0x1436	; 0x1436 <strnlen>
    11ae:	4c 01       	movw	r8, r24
    11b0:	82 01       	movw	r16, r4
    11b2:	f3 2d       	mov	r31, r3
    11b4:	ff 77       	andi	r31, 0x7F	; 127
    11b6:	3f 2e       	mov	r3, r31
    11b8:	16 c0       	rjmp	.+44     	; 0x11e6 <vfprintf+0x188>
    11ba:	28 01       	movw	r4, r16
    11bc:	22 e0       	ldi	r18, 0x02	; 2
    11be:	42 0e       	add	r4, r18
    11c0:	51 1c       	adc	r5, r1
    11c2:	f8 01       	movw	r30, r16
    11c4:	a0 80       	ld	r10, Z
    11c6:	b1 80       	ldd	r11, Z+1	; 0x01
    11c8:	36 fe       	sbrs	r3, 6
    11ca:	03 c0       	rjmp	.+6      	; 0x11d2 <vfprintf+0x174>
    11cc:	69 2d       	mov	r22, r9
    11ce:	70 e0       	ldi	r23, 0x00	; 0
    11d0:	02 c0       	rjmp	.+4      	; 0x11d6 <vfprintf+0x178>
    11d2:	6f ef       	ldi	r22, 0xFF	; 255
    11d4:	7f ef       	ldi	r23, 0xFF	; 255
    11d6:	c5 01       	movw	r24, r10
    11d8:	0e 94 10 0a 	call	0x1420	; 0x1420 <strnlen_P>
    11dc:	4c 01       	movw	r8, r24
    11de:	f3 2d       	mov	r31, r3
    11e0:	f0 68       	ori	r31, 0x80	; 128
    11e2:	3f 2e       	mov	r3, r31
    11e4:	82 01       	movw	r16, r4
    11e6:	33 fc       	sbrc	r3, 3
    11e8:	1b c0       	rjmp	.+54     	; 0x1220 <vfprintf+0x1c2>
    11ea:	82 2d       	mov	r24, r2
    11ec:	90 e0       	ldi	r25, 0x00	; 0
    11ee:	88 16       	cp	r8, r24
    11f0:	99 06       	cpc	r9, r25
    11f2:	b0 f4       	brcc	.+44     	; 0x1220 <vfprintf+0x1c2>
    11f4:	b6 01       	movw	r22, r12
    11f6:	80 e2       	ldi	r24, 0x20	; 32
    11f8:	90 e0       	ldi	r25, 0x00	; 0
    11fa:	0e 94 36 0a 	call	0x146c	; 0x146c <fputc>
    11fe:	2a 94       	dec	r2
    1200:	f4 cf       	rjmp	.-24     	; 0x11ea <vfprintf+0x18c>
    1202:	f5 01       	movw	r30, r10
    1204:	37 fc       	sbrc	r3, 7
    1206:	85 91       	lpm	r24, Z+
    1208:	37 fe       	sbrs	r3, 7
    120a:	81 91       	ld	r24, Z+
    120c:	5f 01       	movw	r10, r30
    120e:	b6 01       	movw	r22, r12
    1210:	90 e0       	ldi	r25, 0x00	; 0
    1212:	0e 94 36 0a 	call	0x146c	; 0x146c <fputc>
    1216:	21 10       	cpse	r2, r1
    1218:	2a 94       	dec	r2
    121a:	21 e0       	ldi	r18, 0x01	; 1
    121c:	82 1a       	sub	r8, r18
    121e:	91 08       	sbc	r9, r1
    1220:	81 14       	cp	r8, r1
    1222:	91 04       	cpc	r9, r1
    1224:	71 f7       	brne	.-36     	; 0x1202 <vfprintf+0x1a4>
    1226:	e8 c0       	rjmp	.+464    	; 0x13f8 <vfprintf+0x39a>
    1228:	84 36       	cpi	r24, 0x64	; 100
    122a:	11 f0       	breq	.+4      	; 0x1230 <vfprintf+0x1d2>
    122c:	89 36       	cpi	r24, 0x69	; 105
    122e:	41 f5       	brne	.+80     	; 0x1280 <vfprintf+0x222>
    1230:	f8 01       	movw	r30, r16
    1232:	37 fe       	sbrs	r3, 7
    1234:	07 c0       	rjmp	.+14     	; 0x1244 <vfprintf+0x1e6>
    1236:	60 81       	ld	r22, Z
    1238:	71 81       	ldd	r23, Z+1	; 0x01
    123a:	82 81       	ldd	r24, Z+2	; 0x02
    123c:	93 81       	ldd	r25, Z+3	; 0x03
    123e:	0c 5f       	subi	r16, 0xFC	; 252
    1240:	1f 4f       	sbci	r17, 0xFF	; 255
    1242:	08 c0       	rjmp	.+16     	; 0x1254 <vfprintf+0x1f6>
    1244:	60 81       	ld	r22, Z
    1246:	71 81       	ldd	r23, Z+1	; 0x01
    1248:	07 2e       	mov	r0, r23
    124a:	00 0c       	add	r0, r0
    124c:	88 0b       	sbc	r24, r24
    124e:	99 0b       	sbc	r25, r25
    1250:	0e 5f       	subi	r16, 0xFE	; 254
    1252:	1f 4f       	sbci	r17, 0xFF	; 255
    1254:	f3 2d       	mov	r31, r3
    1256:	ff 76       	andi	r31, 0x6F	; 111
    1258:	3f 2e       	mov	r3, r31
    125a:	97 ff       	sbrs	r25, 7
    125c:	09 c0       	rjmp	.+18     	; 0x1270 <vfprintf+0x212>
    125e:	90 95       	com	r25
    1260:	80 95       	com	r24
    1262:	70 95       	com	r23
    1264:	61 95       	neg	r22
    1266:	7f 4f       	sbci	r23, 0xFF	; 255
    1268:	8f 4f       	sbci	r24, 0xFF	; 255
    126a:	9f 4f       	sbci	r25, 0xFF	; 255
    126c:	f0 68       	ori	r31, 0x80	; 128
    126e:	3f 2e       	mov	r3, r31
    1270:	2a e0       	ldi	r18, 0x0A	; 10
    1272:	30 e0       	ldi	r19, 0x00	; 0
    1274:	a3 01       	movw	r20, r6
    1276:	0e 94 72 0a 	call	0x14e4	; 0x14e4 <__ultoa_invert>
    127a:	88 2e       	mov	r8, r24
    127c:	86 18       	sub	r8, r6
    127e:	45 c0       	rjmp	.+138    	; 0x130a <vfprintf+0x2ac>
    1280:	85 37       	cpi	r24, 0x75	; 117
    1282:	31 f4       	brne	.+12     	; 0x1290 <vfprintf+0x232>
    1284:	23 2d       	mov	r18, r3
    1286:	2f 7e       	andi	r18, 0xEF	; 239
    1288:	b2 2e       	mov	r11, r18
    128a:	2a e0       	ldi	r18, 0x0A	; 10
    128c:	30 e0       	ldi	r19, 0x00	; 0
    128e:	25 c0       	rjmp	.+74     	; 0x12da <vfprintf+0x27c>
    1290:	93 2d       	mov	r25, r3
    1292:	99 7f       	andi	r25, 0xF9	; 249
    1294:	b9 2e       	mov	r11, r25
    1296:	8f 36       	cpi	r24, 0x6F	; 111
    1298:	c1 f0       	breq	.+48     	; 0x12ca <vfprintf+0x26c>
    129a:	18 f4       	brcc	.+6      	; 0x12a2 <vfprintf+0x244>
    129c:	88 35       	cpi	r24, 0x58	; 88
    129e:	79 f0       	breq	.+30     	; 0x12be <vfprintf+0x260>
    12a0:	b5 c0       	rjmp	.+362    	; 0x140c <vfprintf+0x3ae>
    12a2:	80 37       	cpi	r24, 0x70	; 112
    12a4:	19 f0       	breq	.+6      	; 0x12ac <vfprintf+0x24e>
    12a6:	88 37       	cpi	r24, 0x78	; 120
    12a8:	21 f0       	breq	.+8      	; 0x12b2 <vfprintf+0x254>
    12aa:	b0 c0       	rjmp	.+352    	; 0x140c <vfprintf+0x3ae>
    12ac:	e9 2f       	mov	r30, r25
    12ae:	e0 61       	ori	r30, 0x10	; 16
    12b0:	be 2e       	mov	r11, r30
    12b2:	b4 fe       	sbrs	r11, 4
    12b4:	0d c0       	rjmp	.+26     	; 0x12d0 <vfprintf+0x272>
    12b6:	fb 2d       	mov	r31, r11
    12b8:	f4 60       	ori	r31, 0x04	; 4
    12ba:	bf 2e       	mov	r11, r31
    12bc:	09 c0       	rjmp	.+18     	; 0x12d0 <vfprintf+0x272>
    12be:	34 fe       	sbrs	r3, 4
    12c0:	0a c0       	rjmp	.+20     	; 0x12d6 <vfprintf+0x278>
    12c2:	29 2f       	mov	r18, r25
    12c4:	26 60       	ori	r18, 0x06	; 6
    12c6:	b2 2e       	mov	r11, r18
    12c8:	06 c0       	rjmp	.+12     	; 0x12d6 <vfprintf+0x278>
    12ca:	28 e0       	ldi	r18, 0x08	; 8
    12cc:	30 e0       	ldi	r19, 0x00	; 0
    12ce:	05 c0       	rjmp	.+10     	; 0x12da <vfprintf+0x27c>
    12d0:	20 e1       	ldi	r18, 0x10	; 16
    12d2:	30 e0       	ldi	r19, 0x00	; 0
    12d4:	02 c0       	rjmp	.+4      	; 0x12da <vfprintf+0x27c>
    12d6:	20 e1       	ldi	r18, 0x10	; 16
    12d8:	32 e0       	ldi	r19, 0x02	; 2
    12da:	f8 01       	movw	r30, r16
    12dc:	b7 fe       	sbrs	r11, 7
    12de:	07 c0       	rjmp	.+14     	; 0x12ee <vfprintf+0x290>
    12e0:	60 81       	ld	r22, Z
    12e2:	71 81       	ldd	r23, Z+1	; 0x01
    12e4:	82 81       	ldd	r24, Z+2	; 0x02
    12e6:	93 81       	ldd	r25, Z+3	; 0x03
    12e8:	0c 5f       	subi	r16, 0xFC	; 252
    12ea:	1f 4f       	sbci	r17, 0xFF	; 255
    12ec:	06 c0       	rjmp	.+12     	; 0x12fa <vfprintf+0x29c>
    12ee:	60 81       	ld	r22, Z
    12f0:	71 81       	ldd	r23, Z+1	; 0x01
    12f2:	80 e0       	ldi	r24, 0x00	; 0
    12f4:	90 e0       	ldi	r25, 0x00	; 0
    12f6:	0e 5f       	subi	r16, 0xFE	; 254
    12f8:	1f 4f       	sbci	r17, 0xFF	; 255
    12fa:	a3 01       	movw	r20, r6
    12fc:	0e 94 72 0a 	call	0x14e4	; 0x14e4 <__ultoa_invert>
    1300:	88 2e       	mov	r8, r24
    1302:	86 18       	sub	r8, r6
    1304:	fb 2d       	mov	r31, r11
    1306:	ff 77       	andi	r31, 0x7F	; 127
    1308:	3f 2e       	mov	r3, r31
    130a:	36 fe       	sbrs	r3, 6
    130c:	0d c0       	rjmp	.+26     	; 0x1328 <vfprintf+0x2ca>
    130e:	23 2d       	mov	r18, r3
    1310:	2e 7f       	andi	r18, 0xFE	; 254
    1312:	a2 2e       	mov	r10, r18
    1314:	89 14       	cp	r8, r9
    1316:	58 f4       	brcc	.+22     	; 0x132e <vfprintf+0x2d0>
    1318:	34 fe       	sbrs	r3, 4
    131a:	0b c0       	rjmp	.+22     	; 0x1332 <vfprintf+0x2d4>
    131c:	32 fc       	sbrc	r3, 2
    131e:	09 c0       	rjmp	.+18     	; 0x1332 <vfprintf+0x2d4>
    1320:	83 2d       	mov	r24, r3
    1322:	8e 7e       	andi	r24, 0xEE	; 238
    1324:	a8 2e       	mov	r10, r24
    1326:	05 c0       	rjmp	.+10     	; 0x1332 <vfprintf+0x2d4>
    1328:	b8 2c       	mov	r11, r8
    132a:	a3 2c       	mov	r10, r3
    132c:	03 c0       	rjmp	.+6      	; 0x1334 <vfprintf+0x2d6>
    132e:	b8 2c       	mov	r11, r8
    1330:	01 c0       	rjmp	.+2      	; 0x1334 <vfprintf+0x2d6>
    1332:	b9 2c       	mov	r11, r9
    1334:	a4 fe       	sbrs	r10, 4
    1336:	0f c0       	rjmp	.+30     	; 0x1356 <vfprintf+0x2f8>
    1338:	fe 01       	movw	r30, r28
    133a:	e8 0d       	add	r30, r8
    133c:	f1 1d       	adc	r31, r1
    133e:	80 81       	ld	r24, Z
    1340:	80 33       	cpi	r24, 0x30	; 48
    1342:	21 f4       	brne	.+8      	; 0x134c <vfprintf+0x2ee>
    1344:	9a 2d       	mov	r25, r10
    1346:	99 7e       	andi	r25, 0xE9	; 233
    1348:	a9 2e       	mov	r10, r25
    134a:	09 c0       	rjmp	.+18     	; 0x135e <vfprintf+0x300>
    134c:	a2 fe       	sbrs	r10, 2
    134e:	06 c0       	rjmp	.+12     	; 0x135c <vfprintf+0x2fe>
    1350:	b3 94       	inc	r11
    1352:	b3 94       	inc	r11
    1354:	04 c0       	rjmp	.+8      	; 0x135e <vfprintf+0x300>
    1356:	8a 2d       	mov	r24, r10
    1358:	86 78       	andi	r24, 0x86	; 134
    135a:	09 f0       	breq	.+2      	; 0x135e <vfprintf+0x300>
    135c:	b3 94       	inc	r11
    135e:	a3 fc       	sbrc	r10, 3
    1360:	11 c0       	rjmp	.+34     	; 0x1384 <vfprintf+0x326>
    1362:	a0 fe       	sbrs	r10, 0
    1364:	06 c0       	rjmp	.+12     	; 0x1372 <vfprintf+0x314>
    1366:	b2 14       	cp	r11, r2
    1368:	88 f4       	brcc	.+34     	; 0x138c <vfprintf+0x32e>
    136a:	28 0c       	add	r2, r8
    136c:	92 2c       	mov	r9, r2
    136e:	9b 18       	sub	r9, r11
    1370:	0e c0       	rjmp	.+28     	; 0x138e <vfprintf+0x330>
    1372:	b2 14       	cp	r11, r2
    1374:	60 f4       	brcc	.+24     	; 0x138e <vfprintf+0x330>
    1376:	b6 01       	movw	r22, r12
    1378:	80 e2       	ldi	r24, 0x20	; 32
    137a:	90 e0       	ldi	r25, 0x00	; 0
    137c:	0e 94 36 0a 	call	0x146c	; 0x146c <fputc>
    1380:	b3 94       	inc	r11
    1382:	f7 cf       	rjmp	.-18     	; 0x1372 <vfprintf+0x314>
    1384:	b2 14       	cp	r11, r2
    1386:	18 f4       	brcc	.+6      	; 0x138e <vfprintf+0x330>
    1388:	2b 18       	sub	r2, r11
    138a:	02 c0       	rjmp	.+4      	; 0x1390 <vfprintf+0x332>
    138c:	98 2c       	mov	r9, r8
    138e:	21 2c       	mov	r2, r1
    1390:	a4 fe       	sbrs	r10, 4
    1392:	10 c0       	rjmp	.+32     	; 0x13b4 <vfprintf+0x356>
    1394:	b6 01       	movw	r22, r12
    1396:	80 e3       	ldi	r24, 0x30	; 48
    1398:	90 e0       	ldi	r25, 0x00	; 0
    139a:	0e 94 36 0a 	call	0x146c	; 0x146c <fputc>
    139e:	a2 fe       	sbrs	r10, 2
    13a0:	17 c0       	rjmp	.+46     	; 0x13d0 <vfprintf+0x372>
    13a2:	a1 fc       	sbrc	r10, 1
    13a4:	03 c0       	rjmp	.+6      	; 0x13ac <vfprintf+0x34e>
    13a6:	88 e7       	ldi	r24, 0x78	; 120
    13a8:	90 e0       	ldi	r25, 0x00	; 0
    13aa:	02 c0       	rjmp	.+4      	; 0x13b0 <vfprintf+0x352>
    13ac:	88 e5       	ldi	r24, 0x58	; 88
    13ae:	90 e0       	ldi	r25, 0x00	; 0
    13b0:	b6 01       	movw	r22, r12
    13b2:	0c c0       	rjmp	.+24     	; 0x13cc <vfprintf+0x36e>
    13b4:	8a 2d       	mov	r24, r10
    13b6:	86 78       	andi	r24, 0x86	; 134
    13b8:	59 f0       	breq	.+22     	; 0x13d0 <vfprintf+0x372>
    13ba:	a1 fe       	sbrs	r10, 1
    13bc:	02 c0       	rjmp	.+4      	; 0x13c2 <vfprintf+0x364>
    13be:	8b e2       	ldi	r24, 0x2B	; 43
    13c0:	01 c0       	rjmp	.+2      	; 0x13c4 <vfprintf+0x366>
    13c2:	80 e2       	ldi	r24, 0x20	; 32
    13c4:	a7 fc       	sbrc	r10, 7
    13c6:	8d e2       	ldi	r24, 0x2D	; 45
    13c8:	b6 01       	movw	r22, r12
    13ca:	90 e0       	ldi	r25, 0x00	; 0
    13cc:	0e 94 36 0a 	call	0x146c	; 0x146c <fputc>
    13d0:	89 14       	cp	r8, r9
    13d2:	38 f4       	brcc	.+14     	; 0x13e2 <vfprintf+0x384>
    13d4:	b6 01       	movw	r22, r12
    13d6:	80 e3       	ldi	r24, 0x30	; 48
    13d8:	90 e0       	ldi	r25, 0x00	; 0
    13da:	0e 94 36 0a 	call	0x146c	; 0x146c <fputc>
    13de:	9a 94       	dec	r9
    13e0:	f7 cf       	rjmp	.-18     	; 0x13d0 <vfprintf+0x372>
    13e2:	8a 94       	dec	r8
    13e4:	f3 01       	movw	r30, r6
    13e6:	e8 0d       	add	r30, r8
    13e8:	f1 1d       	adc	r31, r1
    13ea:	80 81       	ld	r24, Z
    13ec:	b6 01       	movw	r22, r12
    13ee:	90 e0       	ldi	r25, 0x00	; 0
    13f0:	0e 94 36 0a 	call	0x146c	; 0x146c <fputc>
    13f4:	81 10       	cpse	r8, r1
    13f6:	f5 cf       	rjmp	.-22     	; 0x13e2 <vfprintf+0x384>
    13f8:	22 20       	and	r2, r2
    13fa:	09 f4       	brne	.+2      	; 0x13fe <vfprintf+0x3a0>
    13fc:	42 ce       	rjmp	.-892    	; 0x1082 <vfprintf+0x24>
    13fe:	b6 01       	movw	r22, r12
    1400:	80 e2       	ldi	r24, 0x20	; 32
    1402:	90 e0       	ldi	r25, 0x00	; 0
    1404:	0e 94 36 0a 	call	0x146c	; 0x146c <fputc>
    1408:	2a 94       	dec	r2
    140a:	f6 cf       	rjmp	.-20     	; 0x13f8 <vfprintf+0x39a>
    140c:	f6 01       	movw	r30, r12
    140e:	86 81       	ldd	r24, Z+6	; 0x06
    1410:	97 81       	ldd	r25, Z+7	; 0x07
    1412:	02 c0       	rjmp	.+4      	; 0x1418 <vfprintf+0x3ba>
    1414:	8f ef       	ldi	r24, 0xFF	; 255
    1416:	9f ef       	ldi	r25, 0xFF	; 255
    1418:	2b 96       	adiw	r28, 0x0b	; 11
    141a:	e2 e1       	ldi	r30, 0x12	; 18
    141c:	0c 94 ec 0a 	jmp	0x15d8	; 0x15d8 <__epilogue_restores__>

00001420 <strnlen_P>:
    1420:	fc 01       	movw	r30, r24
    1422:	05 90       	lpm	r0, Z+
    1424:	61 50       	subi	r22, 0x01	; 1
    1426:	70 40       	sbci	r23, 0x00	; 0
    1428:	01 10       	cpse	r0, r1
    142a:	d8 f7       	brcc	.-10     	; 0x1422 <strnlen_P+0x2>
    142c:	80 95       	com	r24
    142e:	90 95       	com	r25
    1430:	8e 0f       	add	r24, r30
    1432:	9f 1f       	adc	r25, r31
    1434:	08 95       	ret

00001436 <strnlen>:
    1436:	fc 01       	movw	r30, r24
    1438:	61 50       	subi	r22, 0x01	; 1
    143a:	70 40       	sbci	r23, 0x00	; 0
    143c:	01 90       	ld	r0, Z+
    143e:	01 10       	cpse	r0, r1
    1440:	d8 f7       	brcc	.-10     	; 0x1438 <strnlen+0x2>
    1442:	80 95       	com	r24
    1444:	90 95       	com	r25
    1446:	8e 0f       	add	r24, r30
    1448:	9f 1f       	adc	r25, r31
    144a:	08 95       	ret

0000144c <strrev>:
    144c:	dc 01       	movw	r26, r24
    144e:	fc 01       	movw	r30, r24
    1450:	67 2f       	mov	r22, r23
    1452:	71 91       	ld	r23, Z+
    1454:	77 23       	and	r23, r23
    1456:	e1 f7       	brne	.-8      	; 0x1450 <strrev+0x4>
    1458:	32 97       	sbiw	r30, 0x02	; 2
    145a:	04 c0       	rjmp	.+8      	; 0x1464 <strrev+0x18>
    145c:	7c 91       	ld	r23, X
    145e:	6d 93       	st	X+, r22
    1460:	70 83       	st	Z, r23
    1462:	62 91       	ld	r22, -Z
    1464:	ae 17       	cp	r26, r30
    1466:	bf 07       	cpc	r27, r31
    1468:	c8 f3       	brcs	.-14     	; 0x145c <strrev+0x10>
    146a:	08 95       	ret

0000146c <fputc>:
    146c:	0f 93       	push	r16
    146e:	1f 93       	push	r17
    1470:	cf 93       	push	r28
    1472:	df 93       	push	r29
    1474:	fb 01       	movw	r30, r22
    1476:	23 81       	ldd	r18, Z+3	; 0x03
    1478:	21 fd       	sbrc	r18, 1
    147a:	03 c0       	rjmp	.+6      	; 0x1482 <fputc+0x16>
    147c:	8f ef       	ldi	r24, 0xFF	; 255
    147e:	9f ef       	ldi	r25, 0xFF	; 255
    1480:	2c c0       	rjmp	.+88     	; 0x14da <fputc+0x6e>
    1482:	22 ff       	sbrs	r18, 2
    1484:	16 c0       	rjmp	.+44     	; 0x14b2 <fputc+0x46>
    1486:	46 81       	ldd	r20, Z+6	; 0x06
    1488:	57 81       	ldd	r21, Z+7	; 0x07
    148a:	24 81       	ldd	r18, Z+4	; 0x04
    148c:	35 81       	ldd	r19, Z+5	; 0x05
    148e:	42 17       	cp	r20, r18
    1490:	53 07       	cpc	r21, r19
    1492:	44 f4       	brge	.+16     	; 0x14a4 <fputc+0x38>
    1494:	a0 81       	ld	r26, Z
    1496:	b1 81       	ldd	r27, Z+1	; 0x01
    1498:	9d 01       	movw	r18, r26
    149a:	2f 5f       	subi	r18, 0xFF	; 255
    149c:	3f 4f       	sbci	r19, 0xFF	; 255
    149e:	31 83       	std	Z+1, r19	; 0x01
    14a0:	20 83       	st	Z, r18
    14a2:	8c 93       	st	X, r24
    14a4:	26 81       	ldd	r18, Z+6	; 0x06
    14a6:	37 81       	ldd	r19, Z+7	; 0x07
    14a8:	2f 5f       	subi	r18, 0xFF	; 255
    14aa:	3f 4f       	sbci	r19, 0xFF	; 255
    14ac:	37 83       	std	Z+7, r19	; 0x07
    14ae:	26 83       	std	Z+6, r18	; 0x06
    14b0:	14 c0       	rjmp	.+40     	; 0x14da <fputc+0x6e>
    14b2:	8b 01       	movw	r16, r22
    14b4:	ec 01       	movw	r28, r24
    14b6:	fb 01       	movw	r30, r22
    14b8:	00 84       	ldd	r0, Z+8	; 0x08
    14ba:	f1 85       	ldd	r31, Z+9	; 0x09
    14bc:	e0 2d       	mov	r30, r0
    14be:	09 95       	icall
    14c0:	89 2b       	or	r24, r25
    14c2:	e1 f6       	brne	.-72     	; 0x147c <fputc+0x10>
    14c4:	d8 01       	movw	r26, r16
    14c6:	16 96       	adiw	r26, 0x06	; 6
    14c8:	8d 91       	ld	r24, X+
    14ca:	9c 91       	ld	r25, X
    14cc:	17 97       	sbiw	r26, 0x07	; 7
    14ce:	01 96       	adiw	r24, 0x01	; 1
    14d0:	17 96       	adiw	r26, 0x07	; 7
    14d2:	9c 93       	st	X, r25
    14d4:	8e 93       	st	-X, r24
    14d6:	16 97       	sbiw	r26, 0x06	; 6
    14d8:	ce 01       	movw	r24, r28
    14da:	df 91       	pop	r29
    14dc:	cf 91       	pop	r28
    14de:	1f 91       	pop	r17
    14e0:	0f 91       	pop	r16
    14e2:	08 95       	ret

000014e4 <__ultoa_invert>:
    14e4:	fa 01       	movw	r30, r20
    14e6:	aa 27       	eor	r26, r26
    14e8:	28 30       	cpi	r18, 0x08	; 8
    14ea:	51 f1       	breq	.+84     	; 0x1540 <__ultoa_invert+0x5c>
    14ec:	20 31       	cpi	r18, 0x10	; 16
    14ee:	81 f1       	breq	.+96     	; 0x1550 <__ultoa_invert+0x6c>
    14f0:	e8 94       	clt
    14f2:	6f 93       	push	r22
    14f4:	6e 7f       	andi	r22, 0xFE	; 254
    14f6:	6e 5f       	subi	r22, 0xFE	; 254
    14f8:	7f 4f       	sbci	r23, 0xFF	; 255
    14fa:	8f 4f       	sbci	r24, 0xFF	; 255
    14fc:	9f 4f       	sbci	r25, 0xFF	; 255
    14fe:	af 4f       	sbci	r26, 0xFF	; 255
    1500:	b1 e0       	ldi	r27, 0x01	; 1
    1502:	3e d0       	rcall	.+124    	; 0x1580 <__ultoa_invert+0x9c>
    1504:	b4 e0       	ldi	r27, 0x04	; 4
    1506:	3c d0       	rcall	.+120    	; 0x1580 <__ultoa_invert+0x9c>
    1508:	67 0f       	add	r22, r23
    150a:	78 1f       	adc	r23, r24
    150c:	89 1f       	adc	r24, r25
    150e:	9a 1f       	adc	r25, r26
    1510:	a1 1d       	adc	r26, r1
    1512:	68 0f       	add	r22, r24
    1514:	79 1f       	adc	r23, r25
    1516:	8a 1f       	adc	r24, r26
    1518:	91 1d       	adc	r25, r1
    151a:	a1 1d       	adc	r26, r1
    151c:	6a 0f       	add	r22, r26
    151e:	71 1d       	adc	r23, r1
    1520:	81 1d       	adc	r24, r1
    1522:	91 1d       	adc	r25, r1
    1524:	a1 1d       	adc	r26, r1
    1526:	20 d0       	rcall	.+64     	; 0x1568 <__ultoa_invert+0x84>
    1528:	09 f4       	brne	.+2      	; 0x152c <__ultoa_invert+0x48>
    152a:	68 94       	set
    152c:	3f 91       	pop	r19
    152e:	2a e0       	ldi	r18, 0x0A	; 10
    1530:	26 9f       	mul	r18, r22
    1532:	11 24       	eor	r1, r1
    1534:	30 19       	sub	r19, r0
    1536:	30 5d       	subi	r19, 0xD0	; 208
    1538:	31 93       	st	Z+, r19
    153a:	de f6       	brtc	.-74     	; 0x14f2 <__ultoa_invert+0xe>
    153c:	cf 01       	movw	r24, r30
    153e:	08 95       	ret
    1540:	46 2f       	mov	r20, r22
    1542:	47 70       	andi	r20, 0x07	; 7
    1544:	40 5d       	subi	r20, 0xD0	; 208
    1546:	41 93       	st	Z+, r20
    1548:	b3 e0       	ldi	r27, 0x03	; 3
    154a:	0f d0       	rcall	.+30     	; 0x156a <__ultoa_invert+0x86>
    154c:	c9 f7       	brne	.-14     	; 0x1540 <__ultoa_invert+0x5c>
    154e:	f6 cf       	rjmp	.-20     	; 0x153c <__ultoa_invert+0x58>
    1550:	46 2f       	mov	r20, r22
    1552:	4f 70       	andi	r20, 0x0F	; 15
    1554:	40 5d       	subi	r20, 0xD0	; 208
    1556:	4a 33       	cpi	r20, 0x3A	; 58
    1558:	18 f0       	brcs	.+6      	; 0x1560 <__ultoa_invert+0x7c>
    155a:	49 5d       	subi	r20, 0xD9	; 217
    155c:	31 fd       	sbrc	r19, 1
    155e:	40 52       	subi	r20, 0x20	; 32
    1560:	41 93       	st	Z+, r20
    1562:	02 d0       	rcall	.+4      	; 0x1568 <__ultoa_invert+0x84>
    1564:	a9 f7       	brne	.-22     	; 0x1550 <__ultoa_invert+0x6c>
    1566:	ea cf       	rjmp	.-44     	; 0x153c <__ultoa_invert+0x58>
    1568:	b4 e0       	ldi	r27, 0x04	; 4
    156a:	a6 95       	lsr	r26
    156c:	97 95       	ror	r25
    156e:	87 95       	ror	r24
    1570:	77 95       	ror	r23
    1572:	67 95       	ror	r22
    1574:	ba 95       	dec	r27
    1576:	c9 f7       	brne	.-14     	; 0x156a <__ultoa_invert+0x86>
    1578:	00 97       	sbiw	r24, 0x00	; 0
    157a:	61 05       	cpc	r22, r1
    157c:	71 05       	cpc	r23, r1
    157e:	08 95       	ret
    1580:	9b 01       	movw	r18, r22
    1582:	ac 01       	movw	r20, r24
    1584:	0a 2e       	mov	r0, r26
    1586:	06 94       	lsr	r0
    1588:	57 95       	ror	r21
    158a:	47 95       	ror	r20
    158c:	37 95       	ror	r19
    158e:	27 95       	ror	r18
    1590:	ba 95       	dec	r27
    1592:	c9 f7       	brne	.-14     	; 0x1586 <__ultoa_invert+0xa2>
    1594:	62 0f       	add	r22, r18
    1596:	73 1f       	adc	r23, r19
    1598:	84 1f       	adc	r24, r20
    159a:	95 1f       	adc	r25, r21
    159c:	a0 1d       	adc	r26, r0
    159e:	08 95       	ret

000015a0 <__prologue_saves__>:
    15a0:	2f 92       	push	r2
    15a2:	3f 92       	push	r3
    15a4:	4f 92       	push	r4
    15a6:	5f 92       	push	r5
    15a8:	6f 92       	push	r6
    15aa:	7f 92       	push	r7
    15ac:	8f 92       	push	r8
    15ae:	9f 92       	push	r9
    15b0:	af 92       	push	r10
    15b2:	bf 92       	push	r11
    15b4:	cf 92       	push	r12
    15b6:	df 92       	push	r13
    15b8:	ef 92       	push	r14
    15ba:	ff 92       	push	r15
    15bc:	0f 93       	push	r16
    15be:	1f 93       	push	r17
    15c0:	cf 93       	push	r28
    15c2:	df 93       	push	r29
    15c4:	cd b7       	in	r28, 0x3d	; 61
    15c6:	de b7       	in	r29, 0x3e	; 62
    15c8:	ca 1b       	sub	r28, r26
    15ca:	db 0b       	sbc	r29, r27
    15cc:	0f b6       	in	r0, 0x3f	; 63
    15ce:	f8 94       	cli
    15d0:	de bf       	out	0x3e, r29	; 62
    15d2:	0f be       	out	0x3f, r0	; 63
    15d4:	cd bf       	out	0x3d, r28	; 61
    15d6:	09 94       	ijmp

000015d8 <__epilogue_restores__>:
    15d8:	2a 88       	ldd	r2, Y+18	; 0x12
    15da:	39 88       	ldd	r3, Y+17	; 0x11
    15dc:	48 88       	ldd	r4, Y+16	; 0x10
    15de:	5f 84       	ldd	r5, Y+15	; 0x0f
    15e0:	6e 84       	ldd	r6, Y+14	; 0x0e
    15e2:	7d 84       	ldd	r7, Y+13	; 0x0d
    15e4:	8c 84       	ldd	r8, Y+12	; 0x0c
    15e6:	9b 84       	ldd	r9, Y+11	; 0x0b
    15e8:	aa 84       	ldd	r10, Y+10	; 0x0a
    15ea:	b9 84       	ldd	r11, Y+9	; 0x09
    15ec:	c8 84       	ldd	r12, Y+8	; 0x08
    15ee:	df 80       	ldd	r13, Y+7	; 0x07
    15f0:	ee 80       	ldd	r14, Y+6	; 0x06
    15f2:	fd 80       	ldd	r15, Y+5	; 0x05
    15f4:	0c 81       	ldd	r16, Y+4	; 0x04
    15f6:	1b 81       	ldd	r17, Y+3	; 0x03
    15f8:	aa 81       	ldd	r26, Y+2	; 0x02
    15fa:	b9 81       	ldd	r27, Y+1	; 0x01
    15fc:	ce 0f       	add	r28, r30
    15fe:	d1 1d       	adc	r29, r1
    1600:	0f b6       	in	r0, 0x3f	; 63
    1602:	f8 94       	cli
    1604:	de bf       	out	0x3e, r29	; 62
    1606:	0f be       	out	0x3f, r0	; 63
    1608:	cd bf       	out	0x3d, r28	; 61
    160a:	ed 01       	movw	r28, r26
    160c:	08 95       	ret

0000160e <_exit>:
    160e:	f8 94       	cli

00001610 <__stop_program>:
    1610:	ff cf       	rjmp	.-2      	; 0x1610 <__stop_program>
