
RobotArm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800100  00001616  000016aa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001616  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000011  00800118  00800118  000016c2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000016c2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001720  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000138  00000000  00000000  00001760  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000189d  00000000  00000000  00001898  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d09  00000000  00000000  00003135  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009cc  00000000  00000000  00003e3e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000038c  00000000  00000000  0000480c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009ec  00000000  00000000  00004b98  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b07  00000000  00000000  00005584  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  0000608b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 75 00 	jmp	0xea	; 0xea <__ctors_end>
       4:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
       8:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
       c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      10:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      14:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      18:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      1c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      20:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      24:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      28:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      2c:	0c 94 d0 03 	jmp	0x7a0	; 0x7a0 <__vector_11>
      30:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      34:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      38:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      3c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      40:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      44:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      48:	0c 94 9e 00 	jmp	0x13c	; 0x13c <__vector_18>
      4c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      50:	0c 94 94 00 	jmp	0x128	; 0x128 <__vector_20>
      54:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      58:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      5c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      60:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      64:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      68:	07 63       	ori	r16, 0x37	; 55
      6a:	42 36       	cpi	r20, 0x62	; 98
      6c:	b7 9b       	sbis	0x16, 7	; 22
      6e:	d8 a7       	std	Y+40, r29	; 0x28
      70:	1a 39       	cpi	r17, 0x9A	; 154
      72:	68 56       	subi	r22, 0x68	; 104
      74:	18 ae       	std	Y+56, r1	; 0x38
      76:	ba ab       	std	Y+50, r27	; 0x32
      78:	55 8c       	ldd	r5, Z+29	; 0x1d
      7a:	1d 3c       	cpi	r17, 0xCD	; 205
      7c:	b7 cc       	rjmp	.-1682   	; 0xfffff9ec <__eeprom_end+0xff7ef9ec>
      7e:	57 63       	ori	r21, 0x37	; 55
      80:	bd 6d       	ori	r27, 0xDD	; 221
      82:	ed fd       	.word	0xfded	; ????
      84:	75 3e       	cpi	r23, 0xE5	; 229
      86:	f6 17       	cp	r31, r22
      88:	72 31       	cpi	r23, 0x12	; 18
      8a:	bf 00       	.word	0x00bf	; ????
      8c:	00 00       	nop
      8e:	80 3f       	cpi	r24, 0xF0	; 240
      90:	08 00       	.word	0x0008	; ????
      92:	00 00       	nop
      94:	be 92       	st	-X, r11
      96:	24 49       	sbci	r18, 0x94	; 148
      98:	12 3e       	cpi	r17, 0xE2	; 226
      9a:	ab aa       	std	Y+51, r10	; 0x33
      9c:	aa 2a       	or	r10, r26
      9e:	be cd       	rjmp	.-1156   	; 0xfffffc1c <__eeprom_end+0xff7efc1c>
      a0:	cc cc       	rjmp	.-1640   	; 0xfffffa3a <__eeprom_end+0xff7efa3a>
      a2:	4c 3e       	cpi	r20, 0xEC	; 236
      a4:	00 00       	nop
      a6:	00 80       	ld	r0, Z
      a8:	be ab       	std	Y+54, r27	; 0x36
      aa:	aa aa       	std	Y+50, r10	; 0x32
      ac:	aa 3e       	cpi	r26, 0xEA	; 234
      ae:	00 00       	nop
      b0:	00 00       	nop
      b2:	bf 00       	.word	0x00bf	; ????
      b4:	00 00       	nop
      b6:	80 3f       	cpi	r24, 0xF0	; 240
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	00 08       	sbc	r0, r0
      be:	41 78       	andi	r20, 0x81	; 129
      c0:	d3 bb       	out	0x13, r29	; 19
      c2:	43 87       	std	Z+11, r20	; 0x0b
      c4:	d1 13       	cpse	r29, r17
      c6:	3d 19       	sub	r19, r13
      c8:	0e 3c       	cpi	r16, 0xCE	; 206
      ca:	c3 bd       	out	0x23, r28	; 35
      cc:	42 82       	std	Z+2, r4	; 0x02
      ce:	ad 2b       	or	r26, r29
      d0:	3e 68       	ori	r19, 0x8E	; 142
      d2:	ec 82       	std	Y+4, r14	; 0x04
      d4:	76 be       	out	0x36, r7	; 54
      d6:	d9 8f       	std	Y+25, r29	; 0x19
      d8:	e1 a9       	ldd	r30, Z+49	; 0x31
      da:	3e 4c       	sbci	r19, 0xCE	; 206
      dc:	80 ef       	ldi	r24, 0xF0	; 240
      de:	ff be       	out	0x3f, r15	; 63
      e0:	01 c4       	rjmp	.+2050   	; 0x8e4 <__addsf3x+0x7e>
      e2:	ff 7f       	andi	r31, 0xFF	; 255
      e4:	3f 00       	.word	0x003f	; ????
      e6:	00 00       	nop
	...

000000ea <__ctors_end>:
      ea:	11 24       	eor	r1, r1
      ec:	1f be       	out	0x3f, r1	; 63
      ee:	cf ef       	ldi	r28, 0xFF	; 255
      f0:	d8 e0       	ldi	r29, 0x08	; 8
      f2:	de bf       	out	0x3e, r29	; 62
      f4:	cd bf       	out	0x3d, r28	; 61

000000f6 <__do_copy_data>:
      f6:	11 e0       	ldi	r17, 0x01	; 1
      f8:	a0 e0       	ldi	r26, 0x00	; 0
      fa:	b1 e0       	ldi	r27, 0x01	; 1
      fc:	e6 e1       	ldi	r30, 0x16	; 22
      fe:	f6 e1       	ldi	r31, 0x16	; 22
     100:	02 c0       	rjmp	.+4      	; 0x106 <__do_copy_data+0x10>
     102:	05 90       	lpm	r0, Z+
     104:	0d 92       	st	X+, r0
     106:	a8 31       	cpi	r26, 0x18	; 24
     108:	b1 07       	cpc	r27, r17
     10a:	d9 f7       	brne	.-10     	; 0x102 <__do_copy_data+0xc>

0000010c <__do_clear_bss>:
     10c:	21 e0       	ldi	r18, 0x01	; 1
     10e:	a8 e1       	ldi	r26, 0x18	; 24
     110:	b1 e0       	ldi	r27, 0x01	; 1
     112:	01 c0       	rjmp	.+2      	; 0x116 <.do_clear_bss_start>

00000114 <.do_clear_bss_loop>:
     114:	1d 92       	st	X+, r1

00000116 <.do_clear_bss_start>:
     116:	a9 32       	cpi	r26, 0x29	; 41
     118:	b2 07       	cpc	r27, r18
     11a:	e1 f7       	brne	.-8      	; 0x114 <.do_clear_bss_loop>
     11c:	0e 94 8d 01 	call	0x31a	; 0x31a <main>
     120:	0c 94 09 0b 	jmp	0x1612	; 0x1612 <_exit>

00000124 <__bad_interrupt>:
     124:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000128 <__vector_20>:
			motor->integral = temp; 
		}
		motor->proportional = motor->P*error;
		
		return motor->P*error +motor->I*motor->integral;
}
     128:	1f 92       	push	r1
     12a:	0f 92       	push	r0
     12c:	0f b6       	in	r0, 0x3f	; 63
     12e:	0f 92       	push	r0
     130:	11 24       	eor	r1, r1
     132:	0f 90       	pop	r0
     134:	0f be       	out	0x3f, r0	; 63
     136:	0f 90       	pop	r0
     138:	1f 90       	pop	r1
     13a:	18 95       	reti

0000013c <__vector_18>:
     13c:	1f 92       	push	r1
     13e:	0f 92       	push	r0
     140:	0f b6       	in	r0, 0x3f	; 63
     142:	0f 92       	push	r0
     144:	11 24       	eor	r1, r1
     146:	cf 92       	push	r12
     148:	df 92       	push	r13
     14a:	ef 92       	push	r14
     14c:	ff 92       	push	r15
     14e:	1f 93       	push	r17
     150:	2f 93       	push	r18
     152:	3f 93       	push	r19
     154:	4f 93       	push	r20
     156:	5f 93       	push	r21
     158:	6f 93       	push	r22
     15a:	7f 93       	push	r23
     15c:	8f 93       	push	r24
     15e:	9f 93       	push	r25
     160:	af 93       	push	r26
     162:	bf 93       	push	r27
     164:	cf 93       	push	r28
     166:	df 93       	push	r29
     168:	ef 93       	push	r30
     16a:	ff 93       	push	r31
     16c:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <motor_status+0x3>
     170:	10 91 c6 00 	lds	r17, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     174:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <parse_state>
     178:	81 30       	cpi	r24, 0x01	; 1
     17a:	a9 f0       	breq	.+42     	; 0x1a6 <__vector_18+0x6a>
     17c:	28 f0       	brcs	.+10     	; 0x188 <__vector_18+0x4c>
     17e:	82 30       	cpi	r24, 0x02	; 2
     180:	d1 f0       	breq	.+52     	; 0x1b6 <__vector_18+0x7a>
     182:	83 30       	cpi	r24, 0x03	; 3
     184:	b1 f1       	breq	.+108    	; 0x1f2 <__vector_18+0xb6>
     186:	8b c0       	rjmp	.+278    	; 0x29e <__vector_18+0x162>
     188:	1d 34       	cpi	r17, 0x4D	; 77
     18a:	09 f0       	breq	.+2      	; 0x18e <__vector_18+0x52>
     18c:	88 c0       	rjmp	.+272    	; 0x29e <__vector_18+0x162>
     18e:	81 e0       	ldi	r24, 0x01	; 1
     190:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <parse_state>
     194:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <_ZZ11__vector_18E5angle>
     198:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <_ZZ11__vector_18E5angle+0x1>
     19c:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <_ZZ11__vector_18E5angle+0x2>
     1a0:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <_ZZ11__vector_18E5angle+0x3>
     1a4:	7c c0       	rjmp	.+248    	; 0x29e <__vector_18+0x162>
     1a6:	60 ed       	ldi	r22, 0xD0	; 208
     1a8:	61 0f       	add	r22, r17
     1aa:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <motor_status>
     1ae:	82 e0       	ldi	r24, 0x02	; 2
     1b0:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <parse_state>
     1b4:	74 c0       	rjmp	.+232    	; 0x29e <__vector_18+0x162>
     1b6:	83 e0       	ldi	r24, 0x03	; 3
     1b8:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <parse_state>
     1bc:	1d 32       	cpi	r17, 0x2D	; 45
     1be:	39 f4       	brne	.+14     	; 0x1ce <__vector_18+0x92>
     1c0:	8f ef       	ldi	r24, 0xFF	; 255
     1c2:	9f ef       	ldi	r25, 0xFF	; 255
     1c4:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <_ZZ11__vector_18E4sign+0x1>
     1c8:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <_ZZ11__vector_18E4sign>
     1cc:	0b c0       	rjmp	.+22     	; 0x1e4 <__vector_18+0xa8>
     1ce:	1b 32       	cpi	r17, 0x2B	; 43
     1d0:	39 f4       	brne	.+14     	; 0x1e0 <__vector_18+0xa4>
     1d2:	81 e0       	ldi	r24, 0x01	; 1
     1d4:	90 e0       	ldi	r25, 0x00	; 0
     1d6:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <_ZZ11__vector_18E4sign+0x1>
     1da:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <_ZZ11__vector_18E4sign>
     1de:	02 c0       	rjmp	.+4      	; 0x1e4 <__vector_18+0xa8>
     1e0:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <parse_state>
     1e4:	83 e0       	ldi	r24, 0x03	; 3
     1e6:	90 e0       	ldi	r25, 0x00	; 0
     1e8:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <__data_end+0x1>
     1ec:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
     1f0:	56 c0       	rjmp	.+172    	; 0x29e <__vector_18+0x162>
     1f2:	c0 91 18 01 	lds	r28, 0x0118	; 0x800118 <__data_end>
     1f6:	d0 91 19 01 	lds	r29, 0x0119	; 0x800119 <__data_end+0x1>
     1fa:	21 97       	sbiw	r28, 0x01	; 1
     1fc:	d0 93 19 01 	sts	0x0119, r29	; 0x800119 <__data_end+0x1>
     200:	c0 93 18 01 	sts	0x0118, r28	; 0x800118 <__data_end>
     204:	be 01       	movw	r22, r28
     206:	0d 2e       	mov	r0, r29
     208:	00 0c       	add	r0, r0
     20a:	88 0b       	sbc	r24, r24
     20c:	99 0b       	sbc	r25, r25
     20e:	0e 94 32 05 	call	0xa64	; 0xa64 <__floatsisf>
     212:	9b 01       	movw	r18, r22
     214:	ac 01       	movw	r20, r24
     216:	60 e0       	ldi	r22, 0x00	; 0
     218:	70 e0       	ldi	r23, 0x00	; 0
     21a:	80 e2       	ldi	r24, 0x20	; 32
     21c:	91 e4       	ldi	r25, 0x41	; 65
     21e:	0e 94 2b 06 	call	0xc56	; 0xc56 <pow>
     222:	6b 01       	movw	r12, r22
     224:	7c 01       	movw	r14, r24
     226:	61 2f       	mov	r22, r17
     228:	70 e0       	ldi	r23, 0x00	; 0
     22a:	60 53       	subi	r22, 0x30	; 48
     22c:	71 09       	sbc	r23, r1
     22e:	07 2e       	mov	r0, r23
     230:	00 0c       	add	r0, r0
     232:	88 0b       	sbc	r24, r24
     234:	99 0b       	sbc	r25, r25
     236:	0e 94 32 05 	call	0xa64	; 0xa64 <__floatsisf>
     23a:	a7 01       	movw	r20, r14
     23c:	96 01       	movw	r18, r12
     23e:	0e 94 be 05 	call	0xb7c	; 0xb7c <__mulsf3>
     242:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <_ZZ11__vector_18E5angle>
     246:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <_ZZ11__vector_18E5angle+0x1>
     24a:	40 91 1e 01 	lds	r20, 0x011E	; 0x80011e <_ZZ11__vector_18E5angle+0x2>
     24e:	50 91 1f 01 	lds	r21, 0x011F	; 0x80011f <_ZZ11__vector_18E5angle+0x3>
     252:	0e 94 1c 04 	call	0x838	; 0x838 <__addsf3>
     256:	6b 01       	movw	r12, r22
     258:	7c 01       	movw	r14, r24
     25a:	60 93 1c 01 	sts	0x011C, r22	; 0x80011c <_ZZ11__vector_18E5angle>
     25e:	70 93 1d 01 	sts	0x011D, r23	; 0x80011d <_ZZ11__vector_18E5angle+0x1>
     262:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <_ZZ11__vector_18E5angle+0x2>
     266:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <_ZZ11__vector_18E5angle+0x3>
     26a:	cd 2b       	or	r28, r29
     26c:	c1 f4       	brne	.+48     	; 0x29e <__vector_18+0x162>
     26e:	c0 e2       	ldi	r28, 0x20	; 32
     270:	d1 e0       	ldi	r29, 0x01	; 1
     272:	60 91 1a 01 	lds	r22, 0x011A	; 0x80011a <_ZZ11__vector_18E4sign>
     276:	70 91 1b 01 	lds	r23, 0x011B	; 0x80011b <_ZZ11__vector_18E4sign+0x1>
     27a:	07 2e       	mov	r0, r23
     27c:	00 0c       	add	r0, r0
     27e:	88 0b       	sbc	r24, r24
     280:	99 0b       	sbc	r25, r25
     282:	0e 94 32 05 	call	0xa64	; 0xa64 <__floatsisf>
     286:	a7 01       	movw	r20, r14
     288:	96 01       	movw	r18, r12
     28a:	0e 94 be 05 	call	0xb7c	; 0xb7c <__mulsf3>
     28e:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <__fixsfsi>
     292:	7a 83       	std	Y+2, r23	; 0x02
     294:	69 83       	std	Y+1, r22	; 0x01
     296:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <parse_state>
     29a:	81 e0       	ldi	r24, 0x01	; 1
     29c:	8b 83       	std	Y+3, r24	; 0x03
     29e:	ff 91       	pop	r31
     2a0:	ef 91       	pop	r30
     2a2:	df 91       	pop	r29
     2a4:	cf 91       	pop	r28
     2a6:	bf 91       	pop	r27
     2a8:	af 91       	pop	r26
     2aa:	9f 91       	pop	r25
     2ac:	8f 91       	pop	r24
     2ae:	7f 91       	pop	r23
     2b0:	6f 91       	pop	r22
     2b2:	5f 91       	pop	r21
     2b4:	4f 91       	pop	r20
     2b6:	3f 91       	pop	r19
     2b8:	2f 91       	pop	r18
     2ba:	1f 91       	pop	r17
     2bc:	ff 90       	pop	r15
     2be:	ef 90       	pop	r14
     2c0:	df 90       	pop	r13
     2c2:	cf 90       	pop	r12
     2c4:	0f 90       	pop	r0
     2c6:	0f be       	out	0x3f, r0	; 63
     2c8:	0f 90       	pop	r0
     2ca:	1f 90       	pop	r1
     2cc:	18 95       	reti

000002ce <_Z12servo_rotatefPVhhh>:
/*Servo Control */
void servo_rotate(float val,volatile uint8_t * pwm, uint8_t dir_a,uint8_t dir_b){
     2ce:	ef 92       	push	r14
     2d0:	ff 92       	push	r15
     2d2:	0f 93       	push	r16
     2d4:	cf 93       	push	r28
     2d6:	7a 01       	movw	r14, r20
     2d8:	c2 2f       	mov	r28, r18
	int speed = (float)val;
     2da:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <__fixsfsi>
     2de:	ab 01       	movw	r20, r22
	if (speed > 0){
     2e0:	16 16       	cp	r1, r22
     2e2:	17 06       	cpc	r1, r23
     2e4:	44 f4       	brge	.+16     	; 0x2f6 <_Z12servo_rotatefPVhhh+0x28>
		SERVO_REGISTER |= dir_a  ;
     2e6:	2b b1       	in	r18, 0x0b	; 11
     2e8:	c2 2b       	or	r28, r18
     2ea:	cb b9       	out	0x0b, r28	; 11
		SERVO_REGISTER &= ~dir_b;
     2ec:	2b b1       	in	r18, 0x0b	; 11
     2ee:	00 95       	com	r16
     2f0:	02 23       	and	r16, r18
     2f2:	0b b9       	out	0x0b, r16	; 11
     2f4:	0b c0       	rjmp	.+22     	; 0x30c <_Z12servo_rotatefPVhhh+0x3e>
		}else{
		SERVO_REGISTER &= ~dir_a;
     2f6:	2b b1       	in	r18, 0x0b	; 11
     2f8:	c0 95       	com	r28
     2fa:	c2 23       	and	r28, r18
     2fc:	cb b9       	out	0x0b, r28	; 11
		SERVO_REGISTER |= dir_b;
     2fe:	2b b1       	in	r18, 0x0b	; 11
     300:	02 2b       	or	r16, r18
     302:	0b b9       	out	0x0b, r16	; 11
		speed *= -1;
     304:	44 27       	eor	r20, r20
     306:	55 27       	eor	r21, r21
     308:	46 1b       	sub	r20, r22
     30a:	57 0b       	sbc	r21, r23
	}
	*pwm = speed;
     30c:	f7 01       	movw	r30, r14
     30e:	40 83       	st	Z, r20
}
     310:	cf 91       	pop	r28
     312:	0f 91       	pop	r16
     314:	ff 90       	pop	r15
     316:	ef 90       	pop	r14
     318:	08 95       	ret

0000031a <main>:

/*some comment*/
int main(void)
{
     31a:	cf 93       	push	r28
     31c:	df 93       	push	r29
     31e:	cd b7       	in	r28, 0x3d	; 61
     320:	de b7       	in	r29, 0x3e	; 62
     322:	c6 57       	subi	r28, 0x76	; 118
     324:	d1 09       	sbc	r29, r1
     326:	0f b6       	in	r0, 0x3f	; 63
     328:	f8 94       	cli
     32a:	de bf       	out	0x3e, r29	; 62
     32c:	0f be       	out	0x3f, r0	; 63
     32e:	cd bf       	out	0x3d, r28	; 61

	
	/* initialize component */ 
	sei();
     330:	78 94       	sei
	timer_enable();	
     332:	0e 94 a4 03 	call	0x748	; 0x748 <_Z12timer_enablev>
	usart_enable(9600);
     336:	80 e8       	ldi	r24, 0x80	; 128
     338:	95 e2       	ldi	r25, 0x25	; 37
     33a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <_Z12usart_enablej>
	
    /* Replace with your application code */
	uint8_t tacho_values;
	uint8_t tacho_state = 0;
	int16_t tacho = 0;
	DDRD &= ~TACHO_0_M;
     33e:	55 98       	cbi	0x0a, 5	; 10
	DDRD &= ~TACHO_0_P; 
     340:	52 98       	cbi	0x0a, 2	; 10

	/* Initialize servo motors */
	DDRD |= SERVO_0_EN | SERVO_0_DIR_A | SERVO_0_DIR_B;
     342:	8a b1       	in	r24, 0x0a	; 10
     344:	88 6c       	ori	r24, 0xC8	; 200
     346:	8a b9       	out	0x0a, r24	; 10
	TCCR2A |= (1 << COM2B1 ) | (1 << WGM21) | (1 << WGM20); /*Fast PWM */
     348:	e0 eb       	ldi	r30, 0xB0	; 176
     34a:	f0 e0       	ldi	r31, 0x00	; 0
     34c:	80 81       	ld	r24, Z
     34e:	83 62       	ori	r24, 0x23	; 35
     350:	80 83       	st	Z, r24
	TCCR2B |= (1 << CS20); /*No prescaling */
     352:	e1 eb       	ldi	r30, 0xB1	; 177
     354:	f0 e0       	ldi	r31, 0x00	; 0
     356:	80 81       	ld	r24, Z
     358:	81 60       	ori	r24, 0x01	; 1
     35a:	80 83       	st	Z, r24
	int output = 0; 	
	
	uint32_t curtime = 0; 	
	uint32_t pid_timer = 0; 
	
	DDRB |= M0_DIR | M0_STEP | M1_STEP | M1_DIR;
     35c:	84 b1       	in	r24, 0x04	; 4
     35e:	8f 60       	ori	r24, 0x0F	; 15
     360:	84 b9       	out	0x04, r24	; 4
	StepperMotor stepper0(0,0.05,M0_DIR,M0_STEP);
     362:	ee 24       	eor	r14, r14
     364:	e3 94       	inc	r14
     366:	02 e0       	ldi	r16, 0x02	; 2
     368:	2d ec       	ldi	r18, 0xCD	; 205
     36a:	3c ec       	ldi	r19, 0xCC	; 204
     36c:	4c e4       	ldi	r20, 0x4C	; 76
     36e:	5d e3       	ldi	r21, 0x3D	; 61
     370:	60 e0       	ldi	r22, 0x00	; 0
     372:	70 e0       	ldi	r23, 0x00	; 0
     374:	ce 01       	movw	r24, r28
     376:	01 96       	adiw	r24, 0x01	; 1
     378:	0e 94 0f 02 	call	0x41e	; 0x41e <_ZN12StepperMotorC1Eifhh>
	/* Initialize motors */ 
//	Stepper_motor motor0(M0_STEP,M0_DIR,0.23,&DDRD);
	
    /* Replace with your application code */
	uint8_t tacho_values;
	uint8_t tacho_state = 0;
     37c:	10 e0       	ldi	r17, 0x00	; 0
	StepperMotor stepper0(0,0.05,M0_DIR,M0_STEP);
    while (1) 
    {
		/*character FSM */ 
		char buff[50]; 
		if(motor_status.done == 1){
     37e:	0f 2e       	mov	r0, r31
     380:	f0 e2       	ldi	r31, 0x20	; 32
     382:	ef 2e       	mov	r14, r31
     384:	f1 e0       	ldi	r31, 0x01	; 1
     386:	ff 2e       	mov	r15, r31
     388:	f0 2d       	mov	r31, r0
			sprintf(buff,"Motor %d, angle =  %d\n",motor_status.motor_select,motor_status.angle);
     38a:	0f 2e       	mov	r0, r31
     38c:	f0 e0       	ldi	r31, 0x00	; 0
     38e:	af 2e       	mov	r10, r31
     390:	f1 e0       	ldi	r31, 0x01	; 1
     392:	bf 2e       	mov	r11, r31
     394:	f0 2d       	mov	r31, r0
     396:	6e 01       	movw	r12, r28
     398:	85 e4       	ldi	r24, 0x45	; 69
     39a:	c8 0e       	add	r12, r24
     39c:	d1 1c       	adc	r13, r1
				case 0 : 
					servo0.target_pos = motor_status.angle; 
					break;
				case 1 :
					stepper0.target_pos = motor_status.angle; 
					stepper0.start = 1; 
     39e:	99 24       	eor	r9, r9
     3a0:	93 94       	inc	r9
				}
				tacho_state = 1; 
			}
		}else{
			if (!(PIND & TACHO_0_P)){
				tacho_state = 0; 
     3a2:	81 2c       	mov	r8, r1
	StepperMotor stepper0(0,0.05,M0_DIR,M0_STEP);
    while (1) 
    {
		/*character FSM */ 
		char buff[50]; 
		if(motor_status.done == 1){
     3a4:	f7 01       	movw	r30, r14
     3a6:	83 81       	ldd	r24, Z+3	; 0x03
     3a8:	81 30       	cpi	r24, 0x01	; 1
     3aa:	e1 f4       	brne	.+56     	; 0x3e4 <main+0xca>
			sprintf(buff,"Motor %d, angle =  %d\n",motor_status.motor_select,motor_status.angle);
     3ac:	82 81       	ldd	r24, Z+2	; 0x02
     3ae:	8f 93       	push	r24
     3b0:	81 81       	ldd	r24, Z+1	; 0x01
     3b2:	8f 93       	push	r24
     3b4:	80 81       	ld	r24, Z
     3b6:	1f 92       	push	r1
     3b8:	8f 93       	push	r24
     3ba:	bf 92       	push	r11
     3bc:	af 92       	push	r10
     3be:	df 92       	push	r13
     3c0:	cf 92       	push	r12
     3c2:	0e 94 1f 08 	call	0x103e	; 0x103e <sprintf>
	//		usart_send(buff);
			motor_status.done = 0; 
     3c6:	f7 01       	movw	r30, r14
     3c8:	13 82       	std	Z+3, r1	; 0x03
			switch(motor_status.motor_select){
     3ca:	0f b6       	in	r0, 0x3f	; 63
     3cc:	f8 94       	cli
     3ce:	de bf       	out	0x3e, r29	; 62
     3d0:	0f be       	out	0x3f, r0	; 63
     3d2:	cd bf       	out	0x3d, r28	; 61
     3d4:	80 81       	ld	r24, Z
     3d6:	81 30       	cpi	r24, 0x01	; 1
     3d8:	29 f4       	brne	.+10     	; 0x3e4 <main+0xca>
				case 0 : 
					servo0.target_pos = motor_status.angle; 
					break;
				case 1 :
					stepper0.target_pos = motor_status.angle; 
     3da:	81 81       	ldd	r24, Z+1	; 0x01
     3dc:	92 81       	ldd	r25, Z+2	; 0x02
     3de:	9c 83       	std	Y+4, r25	; 0x04
     3e0:	8b 83       	std	Y+3, r24	; 0x03
					stepper0.start = 1; 
     3e2:	9b 86       	std	Y+11, r9	; 0x0b
			output = 255; 
		}else if(output < -255){
			output = -255;
		}
		//usart_sendln(temp);	
		servo_rotate(output,&SERVO_0_PWM,SERVO_0_DIR_A,SERVO_0_DIR_B);
     3e4:	00 e8       	ldi	r16, 0x80	; 128
     3e6:	20 e4       	ldi	r18, 0x40	; 64
     3e8:	44 eb       	ldi	r20, 0xB4	; 180
     3ea:	50 e0       	ldi	r21, 0x00	; 0
     3ec:	60 e0       	ldi	r22, 0x00	; 0
     3ee:	70 e0       	ldi	r23, 0x00	; 0
     3f0:	cb 01       	movw	r24, r22
     3f2:	0e 94 67 01 	call	0x2ce	; 0x2ce <_Z12servo_rotatefPVhhh>
	
		stepper0.rotate(timer_10k());
     3f6:	0e 94 c7 03 	call	0x78e	; 0x78e <_Z9timer_10kv>
     3fa:	ab 01       	movw	r20, r22
     3fc:	bc 01       	movw	r22, r24
     3fe:	ce 01       	movw	r24, r28
     400:	01 96       	adiw	r24, 0x01	; 1
     402:	0e 94 34 02 	call	0x468	; 0x468 <_ZN12StepperMotor6rotateEm>
		tacho_values= PIND;
     406:	89 b1       	in	r24, 0x09	; 9
		if (tacho_state == 0){
     408:	11 11       	cpse	r17, r1
     40a:	05 c0       	rjmp	.+10     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
			if (PIND & TACHO_0_P){
     40c:	4a 9b       	sbis	0x09, 2	; 9
     40e:	ca cf       	rjmp	.-108    	; 0x3a4 <main+0x8a>
				if(PIND & TACHO_0_M){
     410:	89 b1       	in	r24, 0x09	; 9
					servo0.current_pos++;
				}else{
					servo0.current_pos--;
				}
				tacho_state = 1; 
     412:	19 2d       	mov	r17, r9
     414:	c7 cf       	rjmp	.-114    	; 0x3a4 <main+0x8a>
			}
		}else{
			if (!(PIND & TACHO_0_P)){
     416:	4a 99       	sbic	0x09, 2	; 9
     418:	c5 cf       	rjmp	.-118    	; 0x3a4 <main+0x8a>
				tacho_state = 0; 
     41a:	18 2d       	mov	r17, r8
	uint32_t curtime = 0; 	
	uint32_t pid_timer = 0; 
	
	DDRB |= M0_DIR | M0_STEP | M1_STEP | M1_DIR;
	StepperMotor stepper0(0,0.05,M0_DIR,M0_STEP);
    while (1) 
     41c:	c3 cf       	rjmp	.-122    	; 0x3a4 <main+0x8a>

0000041e <_ZN12StepperMotorC1Eifhh>:
#include <math.h>
#include "Usart.h"
#include "StepperMotor.h"

/* Iniatialize the stepper motor */
StepperMotor::StepperMotor(int16_t current_pos, float step_to_angle, uint8_t dir_pin, uint8_t step_pin)
     41e:	cf 92       	push	r12
     420:	df 92       	push	r13
     422:	ef 92       	push	r14
     424:	0f 93       	push	r16
     426:	cf 93       	push	r28
     428:	df 93       	push	r29
     42a:	ec 01       	movw	r28, r24
{
	state = S_WAIT; 
     42c:	fc 01       	movw	r30, r24
     42e:	ed 5b       	subi	r30, 0xBD	; 189
     430:	ff 4f       	sbci	r31, 0xFF	; 255
     432:	10 82       	st	Z, r1
	this->current_pos	= current_pos;
     434:	79 83       	std	Y+1, r23	; 0x01
     436:	68 83       	st	Y, r22
	/*this value should ideally be an integer */
	this->step_to_angle	= 1.0f/step_to_angle; 
     438:	6c 01       	movw	r12, r24
     43a:	8f e3       	ldi	r24, 0x3F	; 63
     43c:	c8 0e       	add	r12, r24
     43e:	d1 1c       	adc	r13, r1
     440:	60 e0       	ldi	r22, 0x00	; 0
     442:	70 e0       	ldi	r23, 0x00	; 0
     444:	80 e8       	ldi	r24, 0x80	; 128
     446:	9f e3       	ldi	r25, 0x3F	; 63
     448:	0e 94 88 04 	call	0x910	; 0x910 <__divsf3>
     44c:	f6 01       	movw	r30, r12
     44e:	60 83       	st	Z, r22
     450:	71 83       	std	Z+1, r23	; 0x01
     452:	82 83       	std	Z+2, r24	; 0x02
     454:	93 83       	std	Z+3, r25	; 0x03
	this->dir_pin		= dir_pin;
     456:	0d af       	std	Y+61, r16	; 0x3d
	this->step_pin		= step_pin;		
     458:	ee ae       	std	Y+62, r14	; 0x3e
} 
     45a:	df 91       	pop	r29
     45c:	cf 91       	pop	r28
     45e:	0f 91       	pop	r16
     460:	ef 90       	pop	r14
     462:	df 90       	pop	r13
     464:	cf 90       	pop	r12
     466:	08 95       	ret

00000468 <_ZN12StepperMotor6rotateEm>:
	0       t0                             t1     stop 	
	 ------------------------------------------------ t
*/

stepper_fsm StepperMotor::rotate(uint32_t current_time)
{
     468:	4f 92       	push	r4
     46a:	5f 92       	push	r5
     46c:	6f 92       	push	r6
     46e:	7f 92       	push	r7
     470:	8f 92       	push	r8
     472:	9f 92       	push	r9
     474:	af 92       	push	r10
     476:	bf 92       	push	r11
     478:	cf 92       	push	r12
     47a:	df 92       	push	r13
     47c:	ef 92       	push	r14
     47e:	ff 92       	push	r15
     480:	0f 93       	push	r16
     482:	1f 93       	push	r17
     484:	cf 93       	push	r28
     486:	df 93       	push	r29
     488:	ec 01       	movw	r28, r24
     48a:	4a 01       	movw	r8, r20
     48c:	5b 01       	movw	r10, r22
	switch (state)
     48e:	fc 01       	movw	r30, r24
     490:	ed 5b       	subi	r30, 0xBD	; 189
     492:	ff 4f       	sbci	r31, 0xFF	; 255
     494:	80 81       	ld	r24, Z
     496:	81 30       	cpi	r24, 0x01	; 1
     498:	71 f0       	breq	.+28     	; 0x4b6 <_ZN12StepperMotor6rotateEm+0x4e>
     49a:	20 f0       	brcs	.+8      	; 0x4a4 <_ZN12StepperMotor6rotateEm+0x3c>
     49c:	82 30       	cpi	r24, 0x02	; 2
     49e:	09 f4       	brne	.+2      	; 0x4a2 <_ZN12StepperMotor6rotateEm+0x3a>
     4a0:	e7 c0       	rjmp	.+462    	; 0x670 <_ZN12StepperMotor6rotateEm+0x208>
     4a2:	3e c1       	rjmp	.+636    	; 0x720 <_ZN12StepperMotor6rotateEm+0x2b8>
	{
		case S_WAIT: 
			if(start == 1){
     4a4:	8a 85       	ldd	r24, Y+10	; 0x0a
     4a6:	81 30       	cpi	r24, 0x01	; 1
     4a8:	09 f0       	breq	.+2      	; 0x4ac <_ZN12StepperMotor6rotateEm+0x44>
     4aa:	3a c1       	rjmp	.+628    	; 0x720 <_ZN12StepperMotor6rotateEm+0x2b8>
				state = S_COMPUTE; 
     4ac:	fe 01       	movw	r30, r28
     4ae:	ed 5b       	subi	r30, 0xBD	; 189
     4b0:	ff 4f       	sbci	r31, 0xFF	; 255
     4b2:	80 83       	st	Z, r24
     4b4:	35 c1       	rjmp	.+618    	; 0x720 <_ZN12StepperMotor6rotateEm+0x2b8>
			}
			break; 
		/* Compute the amount of steps for the stepper motor to make */
		case S_COMPUTE: 
			state = S_TURN;
     4b6:	82 e0       	ldi	r24, 0x02	; 2
     4b8:	fe 01       	movw	r30, r28
     4ba:	ed 5b       	subi	r30, 0xBD	; 189
     4bc:	ff 4f       	sbci	r31, 0xFF	; 255
     4be:	80 83       	st	Z, r24
			angle=(target_pos - current_pos);
     4c0:	8a 81       	ldd	r24, Y+2	; 0x02
     4c2:	9b 81       	ldd	r25, Y+3	; 0x03
     4c4:	28 81       	ld	r18, Y
     4c6:	39 81       	ldd	r19, Y+1	; 0x01
     4c8:	82 1b       	sub	r24, r18
     4ca:	93 0b       	sbc	r25, r19
     4cc:	9a 8b       	std	Y+18, r25	; 0x12
     4ce:	89 8b       	std	Y+17, r24	; 0x11
			 
			if(angle> 0)
     4d0:	18 16       	cp	r1, r24
     4d2:	19 06       	cpc	r1, r25
     4d4:	2c f4       	brge	.+10     	; 0x4e0 <_ZN12StepperMotor6rotateEm+0x78>
			{
				STEPPER_REGISTER |= dir_pin; 
     4d6:	95 b1       	in	r25, 0x05	; 5
     4d8:	8d ad       	ldd	r24, Y+61	; 0x3d
     4da:	89 2b       	or	r24, r25
     4dc:	85 b9       	out	0x05, r24	; 5
     4de:	16 c0       	rjmp	.+44     	; 0x50c <_ZN12StepperMotor6rotateEm+0xa4>
			}else if(angle <0)
     4e0:	99 23       	and	r25, r25
     4e2:	6c f4       	brge	.+26     	; 0x4fe <_ZN12StepperMotor6rotateEm+0x96>
			{
				STEPPER_REGISTER &= ~dir_pin; 
     4e4:	95 b1       	in	r25, 0x05	; 5
     4e6:	8d ad       	ldd	r24, Y+61	; 0x3d
     4e8:	80 95       	com	r24
     4ea:	89 23       	and	r24, r25
     4ec:	85 b9       	out	0x05, r24	; 5
				angle = angle * -1;
     4ee:	89 89       	ldd	r24, Y+17	; 0x11
     4f0:	9a 89       	ldd	r25, Y+18	; 0x12
     4f2:	91 95       	neg	r25
     4f4:	81 95       	neg	r24
     4f6:	91 09       	sbc	r25, r1
     4f8:	9a 8b       	std	Y+18, r25	; 0x12
     4fa:	89 8b       	std	Y+17, r24	; 0x11
     4fc:	07 c0       	rjmp	.+14     	; 0x50c <_ZN12StepperMotor6rotateEm+0xa4>
			}else if(angle == 0)
     4fe:	89 2b       	or	r24, r25
     500:	29 f4       	brne	.+10     	; 0x50c <_ZN12StepperMotor6rotateEm+0xa4>
			{
				state = S_WAIT;
     502:	fe 01       	movw	r30, r28
     504:	ed 5b       	subi	r30, 0xBD	; 189
     506:	ff 4f       	sbci	r31, 0xFF	; 255
     508:	10 82       	st	Z, r1
				start = 0; 
     50a:	1a 86       	std	Y+10, r1	; 0x0a
			}	
			num_steps = angle*step_to_angle; 
     50c:	69 89       	ldd	r22, Y+17	; 0x11
     50e:	7a 89       	ldd	r23, Y+18	; 0x12
     510:	07 2e       	mov	r0, r23
     512:	00 0c       	add	r0, r0
     514:	88 0b       	sbc	r24, r24
     516:	99 0b       	sbc	r25, r25
     518:	0e 94 32 05 	call	0xa64	; 0xa64 <__floatsisf>
     51c:	6e 01       	movw	r12, r28
     51e:	2f e3       	ldi	r18, 0x3F	; 63
     520:	c2 0e       	add	r12, r18
     522:	d1 1c       	adc	r13, r1
     524:	f6 01       	movw	r30, r12
     526:	20 81       	ld	r18, Z
     528:	31 81       	ldd	r19, Z+1	; 0x01
     52a:	42 81       	ldd	r20, Z+2	; 0x02
     52c:	53 81       	ldd	r21, Z+3	; 0x03
     52e:	0e 94 be 05 	call	0xb7c	; 0xb7c <__mulsf3>
     532:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <__fixsfsi>
     536:	7d 83       	std	Y+5, r23	; 0x05
     538:	6c 83       	std	Y+4, r22	; 0x04
			STEPPER_REGISTER &= ~step_pin;
     53a:	95 b1       	in	r25, 0x05	; 5
     53c:	8e ad       	ldd	r24, Y+62	; 0x3e
     53e:	80 95       	com	r24
     540:	89 23       	and	r24, r25
     542:	85 b9       	out	0x05, r24	; 5
			stepper_time = current_time;
     544:	89 ae       	std	Y+57, r8	; 0x39
     546:	9a ae       	std	Y+58, r9	; 0x3a
     548:	ab ae       	std	Y+59, r10	; 0x3b
     54a:	bc ae       	std	Y+60, r11	; 0x3c
			/*Computations */
			acceleration = 10;
     54c:	8a e0       	ldi	r24, 0x0A	; 10
     54e:	90 e0       	ldi	r25, 0x00	; 0
     550:	9e 87       	std	Y+14, r25	; 0x0e
     552:	8d 87       	std	Y+13, r24	; 0x0d
			time = 5;
     554:	85 e0       	ldi	r24, 0x05	; 5
     556:	90 e0       	ldi	r25, 0x00	; 0
     558:	98 8b       	std	Y+16, r25	; 0x10
     55a:	8f 87       	std	Y+15, r24	; 0x0f
			vmax= 0.5*(acceleration*time-sqrt(pow(acceleration*time,2)-(angle*acceleration*4)));
     55c:	89 89       	ldd	r24, Y+17	; 0x11
     55e:	9a 89       	ldd	r25, Y+18	; 0x12
     560:	8c 01       	movw	r16, r24
     562:	00 0f       	add	r16, r16
     564:	11 1f       	adc	r17, r17
     566:	88 0f       	add	r24, r24
     568:	99 1f       	adc	r25, r25
     56a:	88 0f       	add	r24, r24
     56c:	99 1f       	adc	r25, r25
     56e:	88 0f       	add	r24, r24
     570:	99 1f       	adc	r25, r25
     572:	08 0f       	add	r16, r24
     574:	19 1f       	adc	r17, r25
     576:	48 01       	movw	r8, r16
     578:	88 0c       	add	r8, r8
     57a:	99 1c       	adc	r9, r9
     57c:	88 0c       	add	r8, r8
     57e:	99 1c       	adc	r9, r9
     580:	a1 2c       	mov	r10, r1
     582:	b1 2c       	mov	r11, r1
     584:	c5 01       	movw	r24, r10
     586:	b4 01       	movw	r22, r8
     588:	0e 94 30 05 	call	0xa60	; 0xa60 <__floatunsisf>
     58c:	9b 01       	movw	r18, r22
     58e:	ac 01       	movw	r20, r24
     590:	60 e0       	ldi	r22, 0x00	; 0
     592:	70 e4       	ldi	r23, 0x40	; 64
     594:	8c e1       	ldi	r24, 0x1C	; 28
     596:	95 e4       	ldi	r25, 0x45	; 69
     598:	0e 94 1b 04 	call	0x836	; 0x836 <__subsf3>
     59c:	0e 94 81 06 	call	0xd02	; 0xd02 <sqrt>
     5a0:	9b 01       	movw	r18, r22
     5a2:	ac 01       	movw	r20, r24
     5a4:	60 e0       	ldi	r22, 0x00	; 0
     5a6:	70 e0       	ldi	r23, 0x00	; 0
     5a8:	88 e4       	ldi	r24, 0x48	; 72
     5aa:	92 e4       	ldi	r25, 0x42	; 66
     5ac:	0e 94 1b 04 	call	0x836	; 0x836 <__subsf3>
     5b0:	20 e0       	ldi	r18, 0x00	; 0
     5b2:	30 e0       	ldi	r19, 0x00	; 0
     5b4:	40 e0       	ldi	r20, 0x00	; 0
     5b6:	5f e3       	ldi	r21, 0x3F	; 63
     5b8:	0e 94 be 05 	call	0xb7c	; 0xb7c <__mulsf3>
     5bc:	0e 94 01 05 	call	0xa02	; 0xa02 <__fixunssfsi>
     5c0:	7c 87       	std	Y+12, r23	; 0x0c
     5c2:	6b 87       	std	Y+11, r22	; 0x0b
			t1=(pow(vmax,2)*num_steps)/(2*angle*acceleration);
     5c4:	80 e0       	ldi	r24, 0x00	; 0
     5c6:	90 e0       	ldi	r25, 0x00	; 0
     5c8:	0e 94 30 05 	call	0xa60	; 0xa60 <__floatunsisf>
     5cc:	4b 01       	movw	r8, r22
     5ce:	5c 01       	movw	r10, r24
     5d0:	ec 80       	ldd	r14, Y+4	; 0x04
     5d2:	fd 80       	ldd	r15, Y+5	; 0x05
     5d4:	b7 01       	movw	r22, r14
     5d6:	0f 2c       	mov	r0, r15
     5d8:	00 0c       	add	r0, r0
     5da:	88 0b       	sbc	r24, r24
     5dc:	99 0b       	sbc	r25, r25
     5de:	0e 94 32 05 	call	0xa64	; 0xa64 <__floatsisf>
     5e2:	2b 01       	movw	r4, r22
     5e4:	3c 01       	movw	r6, r24
     5e6:	a5 01       	movw	r20, r10
     5e8:	94 01       	movw	r18, r8
     5ea:	c5 01       	movw	r24, r10
     5ec:	b4 01       	movw	r22, r8
     5ee:	0e 94 be 05 	call	0xb7c	; 0xb7c <__mulsf3>
     5f2:	9b 01       	movw	r18, r22
     5f4:	ac 01       	movw	r20, r24
     5f6:	c3 01       	movw	r24, r6
     5f8:	b2 01       	movw	r22, r4
     5fa:	0e 94 be 05 	call	0xb7c	; 0xb7c <__mulsf3>
     5fe:	4b 01       	movw	r8, r22
     600:	5c 01       	movw	r10, r24
     602:	b8 01       	movw	r22, r16
     604:	66 0f       	add	r22, r22
     606:	77 1f       	adc	r23, r23
     608:	80 e0       	ldi	r24, 0x00	; 0
     60a:	90 e0       	ldi	r25, 0x00	; 0
     60c:	0e 94 30 05 	call	0xa60	; 0xa60 <__floatunsisf>
     610:	9b 01       	movw	r18, r22
     612:	ac 01       	movw	r20, r24
     614:	c5 01       	movw	r24, r10
     616:	b4 01       	movw	r22, r8
     618:	0e 94 88 04 	call	0x910	; 0x910 <__divsf3>
     61c:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <__fixsfsi>
     620:	79 87       	std	Y+9, r23	; 0x09
     622:	68 87       	std	Y+8, r22	; 0x08
			t0 =num_steps-t1;
     624:	e6 1a       	sub	r14, r22
     626:	f7 0a       	sbc	r15, r23
     628:	ff 82       	std	Y+7, r15	; 0x07
     62a:	ee 82       	std	Y+6, r14	; 0x06
			step_time =1000* sqrt((2*step_to_angle)/acceleration);
     62c:	f6 01       	movw	r30, r12
     62e:	c0 80       	ld	r12, Z
     630:	d1 80       	ldd	r13, Z+1	; 0x01
     632:	e2 80       	ldd	r14, Z+2	; 0x02
     634:	f3 80       	ldd	r15, Z+3	; 0x03
     636:	a7 01       	movw	r20, r14
     638:	96 01       	movw	r18, r12
     63a:	c7 01       	movw	r24, r14
     63c:	b6 01       	movw	r22, r12
     63e:	0e 94 1c 04 	call	0x838	; 0x838 <__addsf3>
     642:	20 e0       	ldi	r18, 0x00	; 0
     644:	30 e0       	ldi	r19, 0x00	; 0
     646:	40 e2       	ldi	r20, 0x20	; 32
     648:	51 e4       	ldi	r21, 0x41	; 65
     64a:	0e 94 88 04 	call	0x910	; 0x910 <__divsf3>
     64e:	0e 94 81 06 	call	0xd02	; 0xd02 <sqrt>
     652:	20 e0       	ldi	r18, 0x00	; 0
     654:	30 e0       	ldi	r19, 0x00	; 0
     656:	4a e7       	ldi	r20, 0x7A	; 122
     658:	54 e4       	ldi	r21, 0x44	; 68
     65a:	0e 94 be 05 	call	0xb7c	; 0xb7c <__mulsf3>
     65e:	0e 94 01 05 	call	0xa02	; 0xa02 <__fixunssfsi>
     662:	6b 8b       	std	Y+19, r22	; 0x13
     664:	7c 8b       	std	Y+20, r23	; 0x14
     666:	8d 8b       	std	Y+21, r24	; 0x15
     668:	9e 8b       	std	Y+22, r25	; 0x16
			/*End Computation */
			counter = 0; 
     66a:	18 8e       	std	Y+24, r1	; 0x18
     66c:	1f 8a       	std	Y+23, r1	; 0x17
	    	break; 
     66e:	58 c0       	rjmp	.+176    	; 0x720 <_ZN12StepperMotor6rotateEm+0x2b8>
		case S_TURN:
		//	usart_sendln("test");
			state = S_TURN;
     670:	82 e0       	ldi	r24, 0x02	; 2
     672:	fe 01       	movw	r30, r28
     674:	ed 5b       	subi	r30, 0xBD	; 189
     676:	ff 4f       	sbci	r31, 0xFF	; 255
     678:	80 83       	st	Z, r24
			if ((current_time - stepper_time) > step_time){
     67a:	89 ad       	ldd	r24, Y+57	; 0x39
     67c:	9a ad       	ldd	r25, Y+58	; 0x3a
     67e:	ab ad       	ldd	r26, Y+59	; 0x3b
     680:	bc ad       	ldd	r27, Y+60	; 0x3c
     682:	48 1b       	sub	r20, r24
     684:	59 0b       	sbc	r21, r25
     686:	6a 0b       	sbc	r22, r26
     688:	7b 0b       	sbc	r23, r27
     68a:	8b 89       	ldd	r24, Y+19	; 0x13
     68c:	9c 89       	ldd	r25, Y+20	; 0x14
     68e:	ad 89       	ldd	r26, Y+21	; 0x15
     690:	be 89       	ldd	r27, Y+22	; 0x16
     692:	84 17       	cp	r24, r20
     694:	95 07       	cpc	r25, r21
     696:	a6 07       	cpc	r26, r22
     698:	b7 07       	cpc	r27, r23
     69a:	08 f0       	brcs	.+2      	; 0x69e <_ZN12StepperMotor6rotateEm+0x236>
     69c:	41 c0       	rjmp	.+130    	; 0x720 <_ZN12StepperMotor6rotateEm+0x2b8>
				STEPPER_REGISTER |= step_pin;
     69e:	95 b1       	in	r25, 0x05	; 5
     6a0:	8e ad       	ldd	r24, Y+62	; 0x3e
     6a2:	89 2b       	or	r24, r25
     6a4:	85 b9       	out	0x05, r24	; 5
				stepper_time = current_time; 
     6a6:	89 ae       	std	Y+57, r8	; 0x39
     6a8:	9a ae       	std	Y+58, r9	; 0x3a
     6aa:	ab ae       	std	Y+59, r10	; 0x3b
     6ac:	bc ae       	std	Y+60, r11	; 0x3c
					counter++; 
     6ae:	2f 89       	ldd	r18, Y+23	; 0x17
     6b0:	38 8d       	ldd	r19, Y+24	; 0x18
     6b2:	2f 5f       	subi	r18, 0xFF	; 255
     6b4:	3f 4f       	sbci	r19, 0xFF	; 255
     6b6:	38 8f       	std	Y+24, r19	; 0x18
     6b8:	2f 8b       	std	Y+23, r18	; 0x17
		//			usart_sendln(num_steps);
					if(counter == num_steps){
     6ba:	8c 81       	ldd	r24, Y+4	; 0x04
     6bc:	9d 81       	ldd	r25, Y+5	; 0x05
     6be:	28 17       	cp	r18, r24
     6c0:	39 07       	cpc	r19, r25
     6c2:	31 f4       	brne	.+12     	; 0x6d0 <_ZN12StepperMotor6rotateEm+0x268>
						current_pos = target_pos; 
     6c4:	8a 81       	ldd	r24, Y+2	; 0x02
     6c6:	9b 81       	ldd	r25, Y+3	; 0x03
     6c8:	99 83       	std	Y+1, r25	; 0x01
     6ca:	88 83       	st	Y, r24
						state = S_WAIT;
     6cc:	10 82       	st	Z, r1
						start = 0; 
     6ce:	1a 86       	std	Y+10, r1	; 0x0a
						}
					if(counter < t1){
     6d0:	88 85       	ldd	r24, Y+8	; 0x08
     6d2:	99 85       	ldd	r25, Y+9	; 0x09
     6d4:	28 17       	cp	r18, r24
     6d6:	39 07       	cpc	r19, r25
     6d8:	f0 f4       	brcc	.+60     	; 0x716 <_ZN12StepperMotor6rotateEm+0x2ae>
						step_time=step_time-(2*step_time)/(4*counter +1);	
     6da:	cb 88       	ldd	r12, Y+19	; 0x13
     6dc:	dc 88       	ldd	r13, Y+20	; 0x14
     6de:	ed 88       	ldd	r14, Y+21	; 0x15
     6e0:	fe 88       	ldd	r15, Y+22	; 0x16
     6e2:	c7 01       	movw	r24, r14
     6e4:	b6 01       	movw	r22, r12
     6e6:	66 0f       	add	r22, r22
     6e8:	77 1f       	adc	r23, r23
     6ea:	88 1f       	adc	r24, r24
     6ec:	99 1f       	adc	r25, r25
     6ee:	22 0f       	add	r18, r18
     6f0:	33 1f       	adc	r19, r19
     6f2:	22 0f       	add	r18, r18
     6f4:	33 1f       	adc	r19, r19
     6f6:	2f 5f       	subi	r18, 0xFF	; 255
     6f8:	3f 4f       	sbci	r19, 0xFF	; 255
     6fa:	40 e0       	ldi	r20, 0x00	; 0
     6fc:	50 e0       	ldi	r21, 0x00	; 0
     6fe:	0e 94 fd 07 	call	0xffa	; 0xffa <__udivmodsi4>
     702:	d7 01       	movw	r26, r14
     704:	c6 01       	movw	r24, r12
     706:	82 1b       	sub	r24, r18
     708:	93 0b       	sbc	r25, r19
     70a:	a4 0b       	sbc	r26, r20
     70c:	b5 0b       	sbc	r27, r21
     70e:	8b 8b       	std	Y+19, r24	; 0x13
     710:	9c 8b       	std	Y+20, r25	; 0x14
     712:	ad 8b       	std	Y+21, r26	; 0x15
     714:	be 8b       	std	Y+22, r27	; 0x16
					}else if(num_steps < t1){
					}	
					
				STEPPER_REGISTER &= ~step_pin;
     716:	95 b1       	in	r25, 0x05	; 5
     718:	8e ad       	ldd	r24, Y+62	; 0x3e
     71a:	80 95       	com	r24
     71c:	89 23       	and	r24, r25
     71e:	85 b9       	out	0x05, r24	; 5
			}
			break;	
	}
	return state;
     720:	cd 5b       	subi	r28, 0xBD	; 189
     722:	df 4f       	sbci	r29, 0xFF	; 255
}
     724:	88 81       	ld	r24, Y
     726:	df 91       	pop	r29
     728:	cf 91       	pop	r28
     72a:	1f 91       	pop	r17
     72c:	0f 91       	pop	r16
     72e:	ff 90       	pop	r15
     730:	ef 90       	pop	r14
     732:	df 90       	pop	r13
     734:	cf 90       	pop	r12
     736:	bf 90       	pop	r11
     738:	af 90       	pop	r10
     73a:	9f 90       	pop	r9
     73c:	8f 90       	pop	r8
     73e:	7f 90       	pop	r7
     740:	6f 90       	pop	r6
     742:	5f 90       	pop	r5
     744:	4f 90       	pop	r4
     746:	08 95       	ret

00000748 <_Z12timer_enablev>:
	timer_counter = 0; 
}

//Reset the counter
void timer_reset(){
	timer_counter = 0; 
     748:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
     74c:	e1 e8       	ldi	r30, 0x81	; 129
     74e:	f0 e0       	ldi	r31, 0x00	; 0
     750:	10 82       	st	Z, r1
     752:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     756:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     75a:	88 e1       	ldi	r24, 0x18	; 24
     75c:	90 e0       	ldi	r25, 0x00	; 0
     75e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
     762:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
     766:	80 81       	ld	r24, Z
     768:	88 60       	ori	r24, 0x08	; 8
     76a:	80 83       	st	Z, r24
     76c:	80 81       	ld	r24, Z
     76e:	83 60       	ori	r24, 0x03	; 3
     770:	80 83       	st	Z, r24
     772:	ef e6       	ldi	r30, 0x6F	; 111
     774:	f0 e0       	ldi	r31, 0x00	; 0
     776:	80 81       	ld	r24, Z
     778:	82 60       	ori	r24, 0x02	; 2
     77a:	80 83       	st	Z, r24
     77c:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <timer_counter>
     780:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <timer_counter+0x1>
     784:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <timer_counter+0x2>
     788:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <timer_counter+0x3>
     78c:	08 95       	ret

0000078e <_Z9timer_10kv>:
}

//Return the elapsed time since the counter was enable 
uint32_t timer_10k(){
	return timer_counter;
     78e:	60 91 25 01 	lds	r22, 0x0125	; 0x800125 <timer_counter>
     792:	70 91 26 01 	lds	r23, 0x0126	; 0x800126 <timer_counter+0x1>
     796:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <timer_counter+0x2>
     79a:	90 91 28 01 	lds	r25, 0x0128	; 0x800128 <timer_counter+0x3>
}
     79e:	08 95       	ret

000007a0 <__vector_11>:

//interrupt vector 
ISR (TIMER1_COMPA_vect) {
     7a0:	1f 92       	push	r1
     7a2:	0f 92       	push	r0
     7a4:	0f b6       	in	r0, 0x3f	; 63
     7a6:	0f 92       	push	r0
     7a8:	11 24       	eor	r1, r1
     7aa:	8f 93       	push	r24
     7ac:	9f 93       	push	r25
     7ae:	af 93       	push	r26
     7b0:	bf 93       	push	r27
	timer_counter++;
     7b2:	80 91 25 01 	lds	r24, 0x0125	; 0x800125 <timer_counter>
     7b6:	90 91 26 01 	lds	r25, 0x0126	; 0x800126 <timer_counter+0x1>
     7ba:	a0 91 27 01 	lds	r26, 0x0127	; 0x800127 <timer_counter+0x2>
     7be:	b0 91 28 01 	lds	r27, 0x0128	; 0x800128 <timer_counter+0x3>
     7c2:	01 96       	adiw	r24, 0x01	; 1
     7c4:	a1 1d       	adc	r26, r1
     7c6:	b1 1d       	adc	r27, r1
     7c8:	80 93 25 01 	sts	0x0125, r24	; 0x800125 <timer_counter>
     7cc:	90 93 26 01 	sts	0x0126, r25	; 0x800126 <timer_counter+0x1>
     7d0:	a0 93 27 01 	sts	0x0127, r26	; 0x800127 <timer_counter+0x2>
     7d4:	b0 93 28 01 	sts	0x0128, r27	; 0x800128 <timer_counter+0x3>
     7d8:	bf 91       	pop	r27
     7da:	af 91       	pop	r26
     7dc:	9f 91       	pop	r25
     7de:	8f 91       	pop	r24
     7e0:	0f 90       	pop	r0
     7e2:	0f be       	out	0x3f, r0	; 63
     7e4:	0f 90       	pop	r0
     7e6:	1f 90       	pop	r1
     7e8:	18 95       	reti

000007ea <_Z12usart_enablej>:
volatile uint8_t usart_buffer_counter = 0; 
volatile uint8_t fifo_counter = 0;
bool usart_interrupt = false; 

void usart_enable(uint16_t baudrate){
	UCSR0B = (1 << TXEN0) | (1 << RXEN0) | (1 << RXCIE0); // Enable the USART Transmitter and  receive interrupt
     7ea:	28 e9       	ldi	r18, 0x98	; 152
     7ec:	20 93 c1 00 	sts	0x00C1, r18	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00); /* 8 data bits, 1 stop bit */
     7f0:	26 e0       	ldi	r18, 0x06	; 6
     7f2:	20 93 c2 00 	sts	0x00C2, r18	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
	
	baudrate = F_CPU/(16.0*baudrate) -1;	
     7f6:	bc 01       	movw	r22, r24
     7f8:	80 e0       	ldi	r24, 0x00	; 0
     7fa:	90 e0       	ldi	r25, 0x00	; 0
     7fc:	0e 94 30 05 	call	0xa60	; 0xa60 <__floatunsisf>
     800:	20 e0       	ldi	r18, 0x00	; 0
     802:	30 e0       	ldi	r19, 0x00	; 0
     804:	40 e8       	ldi	r20, 0x80	; 128
     806:	51 e4       	ldi	r21, 0x41	; 65
     808:	0e 94 be 05 	call	0xb7c	; 0xb7c <__mulsf3>
     80c:	9b 01       	movw	r18, r22
     80e:	ac 01       	movw	r20, r24
     810:	60 e0       	ldi	r22, 0x00	; 0
     812:	74 e2       	ldi	r23, 0x24	; 36
     814:	84 e7       	ldi	r24, 0x74	; 116
     816:	9b e4       	ldi	r25, 0x4B	; 75
     818:	0e 94 88 04 	call	0x910	; 0x910 <__divsf3>
     81c:	20 e0       	ldi	r18, 0x00	; 0
     81e:	30 e0       	ldi	r19, 0x00	; 0
     820:	40 e8       	ldi	r20, 0x80	; 128
     822:	5f e3       	ldi	r21, 0x3F	; 63
     824:	0e 94 1b 04 	call	0x836	; 0x836 <__subsf3>
     828:	0e 94 01 05 	call	0xa02	; 0xa02 <__fixunssfsi>
	UBRR0H=baudrate >> 8;
     82c:	70 93 c5 00 	sts	0x00C5, r23	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
	UBRR0L=baudrate & 0xFF; 
     830:	60 93 c4 00 	sts	0x00C4, r22	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     834:	08 95       	ret

00000836 <__subsf3>:
     836:	50 58       	subi	r21, 0x80	; 128

00000838 <__addsf3>:
     838:	bb 27       	eor	r27, r27
     83a:	aa 27       	eor	r26, r26
     83c:	0e 94 33 04 	call	0x866	; 0x866 <__addsf3x>
     840:	0c 94 84 05 	jmp	0xb08	; 0xb08 <__fp_round>
     844:	0e 94 76 05 	call	0xaec	; 0xaec <__fp_pscA>
     848:	38 f0       	brcs	.+14     	; 0x858 <__addsf3+0x20>
     84a:	0e 94 7d 05 	call	0xafa	; 0xafa <__fp_pscB>
     84e:	20 f0       	brcs	.+8      	; 0x858 <__addsf3+0x20>
     850:	39 f4       	brne	.+14     	; 0x860 <__addsf3+0x28>
     852:	9f 3f       	cpi	r25, 0xFF	; 255
     854:	19 f4       	brne	.+6      	; 0x85c <__addsf3+0x24>
     856:	26 f4       	brtc	.+8      	; 0x860 <__addsf3+0x28>
     858:	0c 94 73 05 	jmp	0xae6	; 0xae6 <__fp_nan>
     85c:	0e f4       	brtc	.+2      	; 0x860 <__addsf3+0x28>
     85e:	e0 95       	com	r30
     860:	e7 fb       	bst	r30, 7
     862:	0c 94 6d 05 	jmp	0xada	; 0xada <__fp_inf>

00000866 <__addsf3x>:
     866:	e9 2f       	mov	r30, r25
     868:	0e 94 95 05 	call	0xb2a	; 0xb2a <__fp_split3>
     86c:	58 f3       	brcs	.-42     	; 0x844 <__addsf3+0xc>
     86e:	ba 17       	cp	r27, r26
     870:	62 07       	cpc	r22, r18
     872:	73 07       	cpc	r23, r19
     874:	84 07       	cpc	r24, r20
     876:	95 07       	cpc	r25, r21
     878:	20 f0       	brcs	.+8      	; 0x882 <__addsf3x+0x1c>
     87a:	79 f4       	brne	.+30     	; 0x89a <__addsf3x+0x34>
     87c:	a6 f5       	brtc	.+104    	; 0x8e6 <__addsf3x+0x80>
     87e:	0c 94 b7 05 	jmp	0xb6e	; 0xb6e <__fp_zero>
     882:	0e f4       	brtc	.+2      	; 0x886 <__addsf3x+0x20>
     884:	e0 95       	com	r30
     886:	0b 2e       	mov	r0, r27
     888:	ba 2f       	mov	r27, r26
     88a:	a0 2d       	mov	r26, r0
     88c:	0b 01       	movw	r0, r22
     88e:	b9 01       	movw	r22, r18
     890:	90 01       	movw	r18, r0
     892:	0c 01       	movw	r0, r24
     894:	ca 01       	movw	r24, r20
     896:	a0 01       	movw	r20, r0
     898:	11 24       	eor	r1, r1
     89a:	ff 27       	eor	r31, r31
     89c:	59 1b       	sub	r21, r25
     89e:	99 f0       	breq	.+38     	; 0x8c6 <__addsf3x+0x60>
     8a0:	59 3f       	cpi	r21, 0xF9	; 249
     8a2:	50 f4       	brcc	.+20     	; 0x8b8 <__addsf3x+0x52>
     8a4:	50 3e       	cpi	r21, 0xE0	; 224
     8a6:	68 f1       	brcs	.+90     	; 0x902 <__stack+0x3>
     8a8:	1a 16       	cp	r1, r26
     8aa:	f0 40       	sbci	r31, 0x00	; 0
     8ac:	a2 2f       	mov	r26, r18
     8ae:	23 2f       	mov	r18, r19
     8b0:	34 2f       	mov	r19, r20
     8b2:	44 27       	eor	r20, r20
     8b4:	58 5f       	subi	r21, 0xF8	; 248
     8b6:	f3 cf       	rjmp	.-26     	; 0x89e <__addsf3x+0x38>
     8b8:	46 95       	lsr	r20
     8ba:	37 95       	ror	r19
     8bc:	27 95       	ror	r18
     8be:	a7 95       	ror	r26
     8c0:	f0 40       	sbci	r31, 0x00	; 0
     8c2:	53 95       	inc	r21
     8c4:	c9 f7       	brne	.-14     	; 0x8b8 <__addsf3x+0x52>
     8c6:	7e f4       	brtc	.+30     	; 0x8e6 <__addsf3x+0x80>
     8c8:	1f 16       	cp	r1, r31
     8ca:	ba 0b       	sbc	r27, r26
     8cc:	62 0b       	sbc	r22, r18
     8ce:	73 0b       	sbc	r23, r19
     8d0:	84 0b       	sbc	r24, r20
     8d2:	ba f0       	brmi	.+46     	; 0x902 <__stack+0x3>
     8d4:	91 50       	subi	r25, 0x01	; 1
     8d6:	a1 f0       	breq	.+40     	; 0x900 <__stack+0x1>
     8d8:	ff 0f       	add	r31, r31
     8da:	bb 1f       	adc	r27, r27
     8dc:	66 1f       	adc	r22, r22
     8de:	77 1f       	adc	r23, r23
     8e0:	88 1f       	adc	r24, r24
     8e2:	c2 f7       	brpl	.-16     	; 0x8d4 <__addsf3x+0x6e>
     8e4:	0e c0       	rjmp	.+28     	; 0x902 <__stack+0x3>
     8e6:	ba 0f       	add	r27, r26
     8e8:	62 1f       	adc	r22, r18
     8ea:	73 1f       	adc	r23, r19
     8ec:	84 1f       	adc	r24, r20
     8ee:	48 f4       	brcc	.+18     	; 0x902 <__stack+0x3>
     8f0:	87 95       	ror	r24
     8f2:	77 95       	ror	r23
     8f4:	67 95       	ror	r22
     8f6:	b7 95       	ror	r27
     8f8:	f7 95       	ror	r31
     8fa:	9e 3f       	cpi	r25, 0xFE	; 254
     8fc:	08 f0       	brcs	.+2      	; 0x900 <__stack+0x1>
     8fe:	b0 cf       	rjmp	.-160    	; 0x860 <__addsf3+0x28>
     900:	93 95       	inc	r25
     902:	88 0f       	add	r24, r24
     904:	08 f0       	brcs	.+2      	; 0x908 <__stack+0x9>
     906:	99 27       	eor	r25, r25
     908:	ee 0f       	add	r30, r30
     90a:	97 95       	ror	r25
     90c:	87 95       	ror	r24
     90e:	08 95       	ret

00000910 <__divsf3>:
     910:	0e 94 9c 04 	call	0x938	; 0x938 <__divsf3x>
     914:	0c 94 84 05 	jmp	0xb08	; 0xb08 <__fp_round>
     918:	0e 94 7d 05 	call	0xafa	; 0xafa <__fp_pscB>
     91c:	58 f0       	brcs	.+22     	; 0x934 <__divsf3+0x24>
     91e:	0e 94 76 05 	call	0xaec	; 0xaec <__fp_pscA>
     922:	40 f0       	brcs	.+16     	; 0x934 <__divsf3+0x24>
     924:	29 f4       	brne	.+10     	; 0x930 <__divsf3+0x20>
     926:	5f 3f       	cpi	r21, 0xFF	; 255
     928:	29 f0       	breq	.+10     	; 0x934 <__divsf3+0x24>
     92a:	0c 94 6d 05 	jmp	0xada	; 0xada <__fp_inf>
     92e:	51 11       	cpse	r21, r1
     930:	0c 94 b8 05 	jmp	0xb70	; 0xb70 <__fp_szero>
     934:	0c 94 73 05 	jmp	0xae6	; 0xae6 <__fp_nan>

00000938 <__divsf3x>:
     938:	0e 94 95 05 	call	0xb2a	; 0xb2a <__fp_split3>
     93c:	68 f3       	brcs	.-38     	; 0x918 <__divsf3+0x8>

0000093e <__divsf3_pse>:
     93e:	99 23       	and	r25, r25
     940:	b1 f3       	breq	.-20     	; 0x92e <__divsf3+0x1e>
     942:	55 23       	and	r21, r21
     944:	91 f3       	breq	.-28     	; 0x92a <__divsf3+0x1a>
     946:	95 1b       	sub	r25, r21
     948:	55 0b       	sbc	r21, r21
     94a:	bb 27       	eor	r27, r27
     94c:	aa 27       	eor	r26, r26
     94e:	62 17       	cp	r22, r18
     950:	73 07       	cpc	r23, r19
     952:	84 07       	cpc	r24, r20
     954:	38 f0       	brcs	.+14     	; 0x964 <__divsf3_pse+0x26>
     956:	9f 5f       	subi	r25, 0xFF	; 255
     958:	5f 4f       	sbci	r21, 0xFF	; 255
     95a:	22 0f       	add	r18, r18
     95c:	33 1f       	adc	r19, r19
     95e:	44 1f       	adc	r20, r20
     960:	aa 1f       	adc	r26, r26
     962:	a9 f3       	breq	.-22     	; 0x94e <__divsf3_pse+0x10>
     964:	35 d0       	rcall	.+106    	; 0x9d0 <__divsf3_pse+0x92>
     966:	0e 2e       	mov	r0, r30
     968:	3a f0       	brmi	.+14     	; 0x978 <__divsf3_pse+0x3a>
     96a:	e0 e8       	ldi	r30, 0x80	; 128
     96c:	32 d0       	rcall	.+100    	; 0x9d2 <__divsf3_pse+0x94>
     96e:	91 50       	subi	r25, 0x01	; 1
     970:	50 40       	sbci	r21, 0x00	; 0
     972:	e6 95       	lsr	r30
     974:	00 1c       	adc	r0, r0
     976:	ca f7       	brpl	.-14     	; 0x96a <__divsf3_pse+0x2c>
     978:	2b d0       	rcall	.+86     	; 0x9d0 <__divsf3_pse+0x92>
     97a:	fe 2f       	mov	r31, r30
     97c:	29 d0       	rcall	.+82     	; 0x9d0 <__divsf3_pse+0x92>
     97e:	66 0f       	add	r22, r22
     980:	77 1f       	adc	r23, r23
     982:	88 1f       	adc	r24, r24
     984:	bb 1f       	adc	r27, r27
     986:	26 17       	cp	r18, r22
     988:	37 07       	cpc	r19, r23
     98a:	48 07       	cpc	r20, r24
     98c:	ab 07       	cpc	r26, r27
     98e:	b0 e8       	ldi	r27, 0x80	; 128
     990:	09 f0       	breq	.+2      	; 0x994 <__divsf3_pse+0x56>
     992:	bb 0b       	sbc	r27, r27
     994:	80 2d       	mov	r24, r0
     996:	bf 01       	movw	r22, r30
     998:	ff 27       	eor	r31, r31
     99a:	93 58       	subi	r25, 0x83	; 131
     99c:	5f 4f       	sbci	r21, 0xFF	; 255
     99e:	3a f0       	brmi	.+14     	; 0x9ae <__divsf3_pse+0x70>
     9a0:	9e 3f       	cpi	r25, 0xFE	; 254
     9a2:	51 05       	cpc	r21, r1
     9a4:	78 f0       	brcs	.+30     	; 0x9c4 <__divsf3_pse+0x86>
     9a6:	0c 94 6d 05 	jmp	0xada	; 0xada <__fp_inf>
     9aa:	0c 94 b8 05 	jmp	0xb70	; 0xb70 <__fp_szero>
     9ae:	5f 3f       	cpi	r21, 0xFF	; 255
     9b0:	e4 f3       	brlt	.-8      	; 0x9aa <__divsf3_pse+0x6c>
     9b2:	98 3e       	cpi	r25, 0xE8	; 232
     9b4:	d4 f3       	brlt	.-12     	; 0x9aa <__divsf3_pse+0x6c>
     9b6:	86 95       	lsr	r24
     9b8:	77 95       	ror	r23
     9ba:	67 95       	ror	r22
     9bc:	b7 95       	ror	r27
     9be:	f7 95       	ror	r31
     9c0:	9f 5f       	subi	r25, 0xFF	; 255
     9c2:	c9 f7       	brne	.-14     	; 0x9b6 <__divsf3_pse+0x78>
     9c4:	88 0f       	add	r24, r24
     9c6:	91 1d       	adc	r25, r1
     9c8:	96 95       	lsr	r25
     9ca:	87 95       	ror	r24
     9cc:	97 f9       	bld	r25, 7
     9ce:	08 95       	ret
     9d0:	e1 e0       	ldi	r30, 0x01	; 1
     9d2:	66 0f       	add	r22, r22
     9d4:	77 1f       	adc	r23, r23
     9d6:	88 1f       	adc	r24, r24
     9d8:	bb 1f       	adc	r27, r27
     9da:	62 17       	cp	r22, r18
     9dc:	73 07       	cpc	r23, r19
     9de:	84 07       	cpc	r24, r20
     9e0:	ba 07       	cpc	r27, r26
     9e2:	20 f0       	brcs	.+8      	; 0x9ec <__divsf3_pse+0xae>
     9e4:	62 1b       	sub	r22, r18
     9e6:	73 0b       	sbc	r23, r19
     9e8:	84 0b       	sbc	r24, r20
     9ea:	ba 0b       	sbc	r27, r26
     9ec:	ee 1f       	adc	r30, r30
     9ee:	88 f7       	brcc	.-30     	; 0x9d2 <__divsf3_pse+0x94>
     9f0:	e0 95       	com	r30
     9f2:	08 95       	ret

000009f4 <__fixsfsi>:
     9f4:	0e 94 01 05 	call	0xa02	; 0xa02 <__fixunssfsi>
     9f8:	68 94       	set
     9fa:	b1 11       	cpse	r27, r1
     9fc:	0c 94 b8 05 	jmp	0xb70	; 0xb70 <__fp_szero>
     a00:	08 95       	ret

00000a02 <__fixunssfsi>:
     a02:	0e 94 9d 05 	call	0xb3a	; 0xb3a <__fp_splitA>
     a06:	88 f0       	brcs	.+34     	; 0xa2a <__fixunssfsi+0x28>
     a08:	9f 57       	subi	r25, 0x7F	; 127
     a0a:	98 f0       	brcs	.+38     	; 0xa32 <__fixunssfsi+0x30>
     a0c:	b9 2f       	mov	r27, r25
     a0e:	99 27       	eor	r25, r25
     a10:	b7 51       	subi	r27, 0x17	; 23
     a12:	b0 f0       	brcs	.+44     	; 0xa40 <__fixunssfsi+0x3e>
     a14:	e1 f0       	breq	.+56     	; 0xa4e <__fixunssfsi+0x4c>
     a16:	66 0f       	add	r22, r22
     a18:	77 1f       	adc	r23, r23
     a1a:	88 1f       	adc	r24, r24
     a1c:	99 1f       	adc	r25, r25
     a1e:	1a f0       	brmi	.+6      	; 0xa26 <__fixunssfsi+0x24>
     a20:	ba 95       	dec	r27
     a22:	c9 f7       	brne	.-14     	; 0xa16 <__fixunssfsi+0x14>
     a24:	14 c0       	rjmp	.+40     	; 0xa4e <__fixunssfsi+0x4c>
     a26:	b1 30       	cpi	r27, 0x01	; 1
     a28:	91 f0       	breq	.+36     	; 0xa4e <__fixunssfsi+0x4c>
     a2a:	0e 94 b7 05 	call	0xb6e	; 0xb6e <__fp_zero>
     a2e:	b1 e0       	ldi	r27, 0x01	; 1
     a30:	08 95       	ret
     a32:	0c 94 b7 05 	jmp	0xb6e	; 0xb6e <__fp_zero>
     a36:	67 2f       	mov	r22, r23
     a38:	78 2f       	mov	r23, r24
     a3a:	88 27       	eor	r24, r24
     a3c:	b8 5f       	subi	r27, 0xF8	; 248
     a3e:	39 f0       	breq	.+14     	; 0xa4e <__fixunssfsi+0x4c>
     a40:	b9 3f       	cpi	r27, 0xF9	; 249
     a42:	cc f3       	brlt	.-14     	; 0xa36 <__fixunssfsi+0x34>
     a44:	86 95       	lsr	r24
     a46:	77 95       	ror	r23
     a48:	67 95       	ror	r22
     a4a:	b3 95       	inc	r27
     a4c:	d9 f7       	brne	.-10     	; 0xa44 <__fixunssfsi+0x42>
     a4e:	3e f4       	brtc	.+14     	; 0xa5e <__fixunssfsi+0x5c>
     a50:	90 95       	com	r25
     a52:	80 95       	com	r24
     a54:	70 95       	com	r23
     a56:	61 95       	neg	r22
     a58:	7f 4f       	sbci	r23, 0xFF	; 255
     a5a:	8f 4f       	sbci	r24, 0xFF	; 255
     a5c:	9f 4f       	sbci	r25, 0xFF	; 255
     a5e:	08 95       	ret

00000a60 <__floatunsisf>:
     a60:	e8 94       	clt
     a62:	09 c0       	rjmp	.+18     	; 0xa76 <__floatsisf+0x12>

00000a64 <__floatsisf>:
     a64:	97 fb       	bst	r25, 7
     a66:	3e f4       	brtc	.+14     	; 0xa76 <__floatsisf+0x12>
     a68:	90 95       	com	r25
     a6a:	80 95       	com	r24
     a6c:	70 95       	com	r23
     a6e:	61 95       	neg	r22
     a70:	7f 4f       	sbci	r23, 0xFF	; 255
     a72:	8f 4f       	sbci	r24, 0xFF	; 255
     a74:	9f 4f       	sbci	r25, 0xFF	; 255
     a76:	99 23       	and	r25, r25
     a78:	a9 f0       	breq	.+42     	; 0xaa4 <__floatsisf+0x40>
     a7a:	f9 2f       	mov	r31, r25
     a7c:	96 e9       	ldi	r25, 0x96	; 150
     a7e:	bb 27       	eor	r27, r27
     a80:	93 95       	inc	r25
     a82:	f6 95       	lsr	r31
     a84:	87 95       	ror	r24
     a86:	77 95       	ror	r23
     a88:	67 95       	ror	r22
     a8a:	b7 95       	ror	r27
     a8c:	f1 11       	cpse	r31, r1
     a8e:	f8 cf       	rjmp	.-16     	; 0xa80 <__floatsisf+0x1c>
     a90:	fa f4       	brpl	.+62     	; 0xad0 <__floatsisf+0x6c>
     a92:	bb 0f       	add	r27, r27
     a94:	11 f4       	brne	.+4      	; 0xa9a <__floatsisf+0x36>
     a96:	60 ff       	sbrs	r22, 0
     a98:	1b c0       	rjmp	.+54     	; 0xad0 <__floatsisf+0x6c>
     a9a:	6f 5f       	subi	r22, 0xFF	; 255
     a9c:	7f 4f       	sbci	r23, 0xFF	; 255
     a9e:	8f 4f       	sbci	r24, 0xFF	; 255
     aa0:	9f 4f       	sbci	r25, 0xFF	; 255
     aa2:	16 c0       	rjmp	.+44     	; 0xad0 <__floatsisf+0x6c>
     aa4:	88 23       	and	r24, r24
     aa6:	11 f0       	breq	.+4      	; 0xaac <__floatsisf+0x48>
     aa8:	96 e9       	ldi	r25, 0x96	; 150
     aaa:	11 c0       	rjmp	.+34     	; 0xace <__floatsisf+0x6a>
     aac:	77 23       	and	r23, r23
     aae:	21 f0       	breq	.+8      	; 0xab8 <__floatsisf+0x54>
     ab0:	9e e8       	ldi	r25, 0x8E	; 142
     ab2:	87 2f       	mov	r24, r23
     ab4:	76 2f       	mov	r23, r22
     ab6:	05 c0       	rjmp	.+10     	; 0xac2 <__floatsisf+0x5e>
     ab8:	66 23       	and	r22, r22
     aba:	71 f0       	breq	.+28     	; 0xad8 <__floatsisf+0x74>
     abc:	96 e8       	ldi	r25, 0x86	; 134
     abe:	86 2f       	mov	r24, r22
     ac0:	70 e0       	ldi	r23, 0x00	; 0
     ac2:	60 e0       	ldi	r22, 0x00	; 0
     ac4:	2a f0       	brmi	.+10     	; 0xad0 <__floatsisf+0x6c>
     ac6:	9a 95       	dec	r25
     ac8:	66 0f       	add	r22, r22
     aca:	77 1f       	adc	r23, r23
     acc:	88 1f       	adc	r24, r24
     ace:	da f7       	brpl	.-10     	; 0xac6 <__floatsisf+0x62>
     ad0:	88 0f       	add	r24, r24
     ad2:	96 95       	lsr	r25
     ad4:	87 95       	ror	r24
     ad6:	97 f9       	bld	r25, 7
     ad8:	08 95       	ret

00000ada <__fp_inf>:
     ada:	97 f9       	bld	r25, 7
     adc:	9f 67       	ori	r25, 0x7F	; 127
     ade:	80 e8       	ldi	r24, 0x80	; 128
     ae0:	70 e0       	ldi	r23, 0x00	; 0
     ae2:	60 e0       	ldi	r22, 0x00	; 0
     ae4:	08 95       	ret

00000ae6 <__fp_nan>:
     ae6:	9f ef       	ldi	r25, 0xFF	; 255
     ae8:	80 ec       	ldi	r24, 0xC0	; 192
     aea:	08 95       	ret

00000aec <__fp_pscA>:
     aec:	00 24       	eor	r0, r0
     aee:	0a 94       	dec	r0
     af0:	16 16       	cp	r1, r22
     af2:	17 06       	cpc	r1, r23
     af4:	18 06       	cpc	r1, r24
     af6:	09 06       	cpc	r0, r25
     af8:	08 95       	ret

00000afa <__fp_pscB>:
     afa:	00 24       	eor	r0, r0
     afc:	0a 94       	dec	r0
     afe:	12 16       	cp	r1, r18
     b00:	13 06       	cpc	r1, r19
     b02:	14 06       	cpc	r1, r20
     b04:	05 06       	cpc	r0, r21
     b06:	08 95       	ret

00000b08 <__fp_round>:
     b08:	09 2e       	mov	r0, r25
     b0a:	03 94       	inc	r0
     b0c:	00 0c       	add	r0, r0
     b0e:	11 f4       	brne	.+4      	; 0xb14 <__fp_round+0xc>
     b10:	88 23       	and	r24, r24
     b12:	52 f0       	brmi	.+20     	; 0xb28 <__fp_round+0x20>
     b14:	bb 0f       	add	r27, r27
     b16:	40 f4       	brcc	.+16     	; 0xb28 <__fp_round+0x20>
     b18:	bf 2b       	or	r27, r31
     b1a:	11 f4       	brne	.+4      	; 0xb20 <__fp_round+0x18>
     b1c:	60 ff       	sbrs	r22, 0
     b1e:	04 c0       	rjmp	.+8      	; 0xb28 <__fp_round+0x20>
     b20:	6f 5f       	subi	r22, 0xFF	; 255
     b22:	7f 4f       	sbci	r23, 0xFF	; 255
     b24:	8f 4f       	sbci	r24, 0xFF	; 255
     b26:	9f 4f       	sbci	r25, 0xFF	; 255
     b28:	08 95       	ret

00000b2a <__fp_split3>:
     b2a:	57 fd       	sbrc	r21, 7
     b2c:	90 58       	subi	r25, 0x80	; 128
     b2e:	44 0f       	add	r20, r20
     b30:	55 1f       	adc	r21, r21
     b32:	59 f0       	breq	.+22     	; 0xb4a <__fp_splitA+0x10>
     b34:	5f 3f       	cpi	r21, 0xFF	; 255
     b36:	71 f0       	breq	.+28     	; 0xb54 <__fp_splitA+0x1a>
     b38:	47 95       	ror	r20

00000b3a <__fp_splitA>:
     b3a:	88 0f       	add	r24, r24
     b3c:	97 fb       	bst	r25, 7
     b3e:	99 1f       	adc	r25, r25
     b40:	61 f0       	breq	.+24     	; 0xb5a <__fp_splitA+0x20>
     b42:	9f 3f       	cpi	r25, 0xFF	; 255
     b44:	79 f0       	breq	.+30     	; 0xb64 <__fp_splitA+0x2a>
     b46:	87 95       	ror	r24
     b48:	08 95       	ret
     b4a:	12 16       	cp	r1, r18
     b4c:	13 06       	cpc	r1, r19
     b4e:	14 06       	cpc	r1, r20
     b50:	55 1f       	adc	r21, r21
     b52:	f2 cf       	rjmp	.-28     	; 0xb38 <__fp_split3+0xe>
     b54:	46 95       	lsr	r20
     b56:	f1 df       	rcall	.-30     	; 0xb3a <__fp_splitA>
     b58:	08 c0       	rjmp	.+16     	; 0xb6a <__fp_splitA+0x30>
     b5a:	16 16       	cp	r1, r22
     b5c:	17 06       	cpc	r1, r23
     b5e:	18 06       	cpc	r1, r24
     b60:	99 1f       	adc	r25, r25
     b62:	f1 cf       	rjmp	.-30     	; 0xb46 <__fp_splitA+0xc>
     b64:	86 95       	lsr	r24
     b66:	71 05       	cpc	r23, r1
     b68:	61 05       	cpc	r22, r1
     b6a:	08 94       	sec
     b6c:	08 95       	ret

00000b6e <__fp_zero>:
     b6e:	e8 94       	clt

00000b70 <__fp_szero>:
     b70:	bb 27       	eor	r27, r27
     b72:	66 27       	eor	r22, r22
     b74:	77 27       	eor	r23, r23
     b76:	cb 01       	movw	r24, r22
     b78:	97 f9       	bld	r25, 7
     b7a:	08 95       	ret

00000b7c <__mulsf3>:
     b7c:	0e 94 d1 05 	call	0xba2	; 0xba2 <__mulsf3x>
     b80:	0c 94 84 05 	jmp	0xb08	; 0xb08 <__fp_round>
     b84:	0e 94 76 05 	call	0xaec	; 0xaec <__fp_pscA>
     b88:	38 f0       	brcs	.+14     	; 0xb98 <__mulsf3+0x1c>
     b8a:	0e 94 7d 05 	call	0xafa	; 0xafa <__fp_pscB>
     b8e:	20 f0       	brcs	.+8      	; 0xb98 <__mulsf3+0x1c>
     b90:	95 23       	and	r25, r21
     b92:	11 f0       	breq	.+4      	; 0xb98 <__mulsf3+0x1c>
     b94:	0c 94 6d 05 	jmp	0xada	; 0xada <__fp_inf>
     b98:	0c 94 73 05 	jmp	0xae6	; 0xae6 <__fp_nan>
     b9c:	11 24       	eor	r1, r1
     b9e:	0c 94 b8 05 	jmp	0xb70	; 0xb70 <__fp_szero>

00000ba2 <__mulsf3x>:
     ba2:	0e 94 95 05 	call	0xb2a	; 0xb2a <__fp_split3>
     ba6:	70 f3       	brcs	.-36     	; 0xb84 <__mulsf3+0x8>

00000ba8 <__mulsf3_pse>:
     ba8:	95 9f       	mul	r25, r21
     baa:	c1 f3       	breq	.-16     	; 0xb9c <__mulsf3+0x20>
     bac:	95 0f       	add	r25, r21
     bae:	50 e0       	ldi	r21, 0x00	; 0
     bb0:	55 1f       	adc	r21, r21
     bb2:	62 9f       	mul	r22, r18
     bb4:	f0 01       	movw	r30, r0
     bb6:	72 9f       	mul	r23, r18
     bb8:	bb 27       	eor	r27, r27
     bba:	f0 0d       	add	r31, r0
     bbc:	b1 1d       	adc	r27, r1
     bbe:	63 9f       	mul	r22, r19
     bc0:	aa 27       	eor	r26, r26
     bc2:	f0 0d       	add	r31, r0
     bc4:	b1 1d       	adc	r27, r1
     bc6:	aa 1f       	adc	r26, r26
     bc8:	64 9f       	mul	r22, r20
     bca:	66 27       	eor	r22, r22
     bcc:	b0 0d       	add	r27, r0
     bce:	a1 1d       	adc	r26, r1
     bd0:	66 1f       	adc	r22, r22
     bd2:	82 9f       	mul	r24, r18
     bd4:	22 27       	eor	r18, r18
     bd6:	b0 0d       	add	r27, r0
     bd8:	a1 1d       	adc	r26, r1
     bda:	62 1f       	adc	r22, r18
     bdc:	73 9f       	mul	r23, r19
     bde:	b0 0d       	add	r27, r0
     be0:	a1 1d       	adc	r26, r1
     be2:	62 1f       	adc	r22, r18
     be4:	83 9f       	mul	r24, r19
     be6:	a0 0d       	add	r26, r0
     be8:	61 1d       	adc	r22, r1
     bea:	22 1f       	adc	r18, r18
     bec:	74 9f       	mul	r23, r20
     bee:	33 27       	eor	r19, r19
     bf0:	a0 0d       	add	r26, r0
     bf2:	61 1d       	adc	r22, r1
     bf4:	23 1f       	adc	r18, r19
     bf6:	84 9f       	mul	r24, r20
     bf8:	60 0d       	add	r22, r0
     bfa:	21 1d       	adc	r18, r1
     bfc:	82 2f       	mov	r24, r18
     bfe:	76 2f       	mov	r23, r22
     c00:	6a 2f       	mov	r22, r26
     c02:	11 24       	eor	r1, r1
     c04:	9f 57       	subi	r25, 0x7F	; 127
     c06:	50 40       	sbci	r21, 0x00	; 0
     c08:	9a f0       	brmi	.+38     	; 0xc30 <__mulsf3_pse+0x88>
     c0a:	f1 f0       	breq	.+60     	; 0xc48 <__mulsf3_pse+0xa0>
     c0c:	88 23       	and	r24, r24
     c0e:	4a f0       	brmi	.+18     	; 0xc22 <__mulsf3_pse+0x7a>
     c10:	ee 0f       	add	r30, r30
     c12:	ff 1f       	adc	r31, r31
     c14:	bb 1f       	adc	r27, r27
     c16:	66 1f       	adc	r22, r22
     c18:	77 1f       	adc	r23, r23
     c1a:	88 1f       	adc	r24, r24
     c1c:	91 50       	subi	r25, 0x01	; 1
     c1e:	50 40       	sbci	r21, 0x00	; 0
     c20:	a9 f7       	brne	.-22     	; 0xc0c <__mulsf3_pse+0x64>
     c22:	9e 3f       	cpi	r25, 0xFE	; 254
     c24:	51 05       	cpc	r21, r1
     c26:	80 f0       	brcs	.+32     	; 0xc48 <__mulsf3_pse+0xa0>
     c28:	0c 94 6d 05 	jmp	0xada	; 0xada <__fp_inf>
     c2c:	0c 94 b8 05 	jmp	0xb70	; 0xb70 <__fp_szero>
     c30:	5f 3f       	cpi	r21, 0xFF	; 255
     c32:	e4 f3       	brlt	.-8      	; 0xc2c <__mulsf3_pse+0x84>
     c34:	98 3e       	cpi	r25, 0xE8	; 232
     c36:	d4 f3       	brlt	.-12     	; 0xc2c <__mulsf3_pse+0x84>
     c38:	86 95       	lsr	r24
     c3a:	77 95       	ror	r23
     c3c:	67 95       	ror	r22
     c3e:	b7 95       	ror	r27
     c40:	f7 95       	ror	r31
     c42:	e7 95       	ror	r30
     c44:	9f 5f       	subi	r25, 0xFF	; 255
     c46:	c1 f7       	brne	.-16     	; 0xc38 <__mulsf3_pse+0x90>
     c48:	fe 2b       	or	r31, r30
     c4a:	88 0f       	add	r24, r24
     c4c:	91 1d       	adc	r25, r1
     c4e:	96 95       	lsr	r25
     c50:	87 95       	ror	r24
     c52:	97 f9       	bld	r25, 7
     c54:	08 95       	ret

00000c56 <pow>:
     c56:	fa 01       	movw	r30, r20
     c58:	ee 0f       	add	r30, r30
     c5a:	ff 1f       	adc	r31, r31
     c5c:	30 96       	adiw	r30, 0x00	; 0
     c5e:	21 05       	cpc	r18, r1
     c60:	31 05       	cpc	r19, r1
     c62:	a1 f1       	breq	.+104    	; 0xccc <pow+0x76>
     c64:	61 15       	cp	r22, r1
     c66:	71 05       	cpc	r23, r1
     c68:	61 f4       	brne	.+24     	; 0xc82 <pow+0x2c>
     c6a:	80 38       	cpi	r24, 0x80	; 128
     c6c:	bf e3       	ldi	r27, 0x3F	; 63
     c6e:	9b 07       	cpc	r25, r27
     c70:	49 f1       	breq	.+82     	; 0xcc4 <pow+0x6e>
     c72:	68 94       	set
     c74:	90 38       	cpi	r25, 0x80	; 128
     c76:	81 05       	cpc	r24, r1
     c78:	61 f0       	breq	.+24     	; 0xc92 <pow+0x3c>
     c7a:	80 38       	cpi	r24, 0x80	; 128
     c7c:	bf ef       	ldi	r27, 0xFF	; 255
     c7e:	9b 07       	cpc	r25, r27
     c80:	41 f0       	breq	.+16     	; 0xc92 <pow+0x3c>
     c82:	99 23       	and	r25, r25
     c84:	4a f5       	brpl	.+82     	; 0xcd8 <pow+0x82>
     c86:	ff 3f       	cpi	r31, 0xFF	; 255
     c88:	e1 05       	cpc	r30, r1
     c8a:	31 05       	cpc	r19, r1
     c8c:	21 05       	cpc	r18, r1
     c8e:	19 f1       	breq	.+70     	; 0xcd6 <pow+0x80>
     c90:	e8 94       	clt
     c92:	08 94       	sec
     c94:	e7 95       	ror	r30
     c96:	d9 01       	movw	r26, r18
     c98:	aa 23       	and	r26, r26
     c9a:	29 f4       	brne	.+10     	; 0xca6 <pow+0x50>
     c9c:	ab 2f       	mov	r26, r27
     c9e:	be 2f       	mov	r27, r30
     ca0:	f8 5f       	subi	r31, 0xF8	; 248
     ca2:	d0 f3       	brcs	.-12     	; 0xc98 <pow+0x42>
     ca4:	10 c0       	rjmp	.+32     	; 0xcc6 <pow+0x70>
     ca6:	ff 5f       	subi	r31, 0xFF	; 255
     ca8:	70 f4       	brcc	.+28     	; 0xcc6 <pow+0x70>
     caa:	a6 95       	lsr	r26
     cac:	e0 f7       	brcc	.-8      	; 0xca6 <pow+0x50>
     cae:	f7 39       	cpi	r31, 0x97	; 151
     cb0:	50 f0       	brcs	.+20     	; 0xcc6 <pow+0x70>
     cb2:	19 f0       	breq	.+6      	; 0xcba <pow+0x64>
     cb4:	ff 3a       	cpi	r31, 0xAF	; 175
     cb6:	38 f4       	brcc	.+14     	; 0xcc6 <pow+0x70>
     cb8:	9f 77       	andi	r25, 0x7F	; 127
     cba:	9f 93       	push	r25
     cbc:	0d d0       	rcall	.+26     	; 0xcd8 <pow+0x82>
     cbe:	0f 90       	pop	r0
     cc0:	07 fc       	sbrc	r0, 7
     cc2:	90 58       	subi	r25, 0x80	; 128
     cc4:	08 95       	ret
     cc6:	46 f0       	brts	.+16     	; 0xcd8 <pow+0x82>
     cc8:	0c 94 73 05 	jmp	0xae6	; 0xae6 <__fp_nan>
     ccc:	60 e0       	ldi	r22, 0x00	; 0
     cce:	70 e0       	ldi	r23, 0x00	; 0
     cd0:	80 e8       	ldi	r24, 0x80	; 128
     cd2:	9f e3       	ldi	r25, 0x3F	; 63
     cd4:	08 95       	ret
     cd6:	4f e7       	ldi	r20, 0x7F	; 127
     cd8:	9f 77       	andi	r25, 0x7F	; 127
     cda:	5f 93       	push	r21
     cdc:	4f 93       	push	r20
     cde:	3f 93       	push	r19
     ce0:	2f 93       	push	r18
     ce2:	0e 94 81 07 	call	0xf02	; 0xf02 <log>
     ce6:	2f 91       	pop	r18
     ce8:	3f 91       	pop	r19
     cea:	4f 91       	pop	r20
     cec:	5f 91       	pop	r21
     cee:	0e 94 be 05 	call	0xb7c	; 0xb7c <__mulsf3>
     cf2:	0c 94 c9 06 	jmp	0xd92	; 0xd92 <exp>
     cf6:	19 f4       	brne	.+6      	; 0xcfe <pow+0xa8>
     cf8:	16 f4       	brtc	.+4      	; 0xcfe <pow+0xa8>
     cfa:	0c 94 73 05 	jmp	0xae6	; 0xae6 <__fp_nan>
     cfe:	0c 94 fb 06 	jmp	0xdf6	; 0xdf6 <__fp_mpack>

00000d02 <sqrt>:
     d02:	0e 94 9d 05 	call	0xb3a	; 0xb3a <__fp_splitA>
     d06:	b8 f3       	brcs	.-18     	; 0xcf6 <pow+0xa0>
     d08:	99 23       	and	r25, r25
     d0a:	c9 f3       	breq	.-14     	; 0xcfe <pow+0xa8>
     d0c:	b6 f3       	brts	.-20     	; 0xcfa <pow+0xa4>
     d0e:	9f 57       	subi	r25, 0x7F	; 127
     d10:	55 0b       	sbc	r21, r21
     d12:	87 ff       	sbrs	r24, 7
     d14:	0e 94 09 07 	call	0xe12	; 0xe12 <__fp_norm2>
     d18:	00 24       	eor	r0, r0
     d1a:	a0 e6       	ldi	r26, 0x60	; 96
     d1c:	40 ea       	ldi	r20, 0xA0	; 160
     d1e:	90 01       	movw	r18, r0
     d20:	80 58       	subi	r24, 0x80	; 128
     d22:	56 95       	lsr	r21
     d24:	97 95       	ror	r25
     d26:	28 f4       	brcc	.+10     	; 0xd32 <sqrt+0x30>
     d28:	80 5c       	subi	r24, 0xC0	; 192
     d2a:	66 0f       	add	r22, r22
     d2c:	77 1f       	adc	r23, r23
     d2e:	88 1f       	adc	r24, r24
     d30:	20 f0       	brcs	.+8      	; 0xd3a <sqrt+0x38>
     d32:	26 17       	cp	r18, r22
     d34:	37 07       	cpc	r19, r23
     d36:	48 07       	cpc	r20, r24
     d38:	30 f4       	brcc	.+12     	; 0xd46 <sqrt+0x44>
     d3a:	62 1b       	sub	r22, r18
     d3c:	73 0b       	sbc	r23, r19
     d3e:	84 0b       	sbc	r24, r20
     d40:	20 29       	or	r18, r0
     d42:	31 29       	or	r19, r1
     d44:	4a 2b       	or	r20, r26
     d46:	a6 95       	lsr	r26
     d48:	17 94       	ror	r1
     d4a:	07 94       	ror	r0
     d4c:	20 25       	eor	r18, r0
     d4e:	31 25       	eor	r19, r1
     d50:	4a 27       	eor	r20, r26
     d52:	58 f7       	brcc	.-42     	; 0xd2a <sqrt+0x28>
     d54:	66 0f       	add	r22, r22
     d56:	77 1f       	adc	r23, r23
     d58:	88 1f       	adc	r24, r24
     d5a:	20 f0       	brcs	.+8      	; 0xd64 <sqrt+0x62>
     d5c:	26 17       	cp	r18, r22
     d5e:	37 07       	cpc	r19, r23
     d60:	48 07       	cpc	r20, r24
     d62:	30 f4       	brcc	.+12     	; 0xd70 <sqrt+0x6e>
     d64:	62 0b       	sbc	r22, r18
     d66:	73 0b       	sbc	r23, r19
     d68:	84 0b       	sbc	r24, r20
     d6a:	20 0d       	add	r18, r0
     d6c:	31 1d       	adc	r19, r1
     d6e:	41 1d       	adc	r20, r1
     d70:	a0 95       	com	r26
     d72:	81 f7       	brne	.-32     	; 0xd54 <sqrt+0x52>
     d74:	b9 01       	movw	r22, r18
     d76:	84 2f       	mov	r24, r20
     d78:	91 58       	subi	r25, 0x81	; 129
     d7a:	88 0f       	add	r24, r24
     d7c:	96 95       	lsr	r25
     d7e:	87 95       	ror	r24
     d80:	08 95       	ret
     d82:	29 f4       	brne	.+10     	; 0xd8e <sqrt+0x8c>
     d84:	16 f0       	brts	.+4      	; 0xd8a <sqrt+0x88>
     d86:	0c 94 6d 05 	jmp	0xada	; 0xada <__fp_inf>
     d8a:	0c 94 b7 05 	jmp	0xb6e	; 0xb6e <__fp_zero>
     d8e:	0c 94 73 05 	jmp	0xae6	; 0xae6 <__fp_nan>

00000d92 <exp>:
     d92:	0e 94 9d 05 	call	0xb3a	; 0xb3a <__fp_splitA>
     d96:	a8 f3       	brcs	.-22     	; 0xd82 <sqrt+0x80>
     d98:	96 38       	cpi	r25, 0x86	; 134
     d9a:	a0 f7       	brcc	.-24     	; 0xd84 <sqrt+0x82>
     d9c:	07 f8       	bld	r0, 7
     d9e:	0f 92       	push	r0
     da0:	e8 94       	clt
     da2:	2b e3       	ldi	r18, 0x3B	; 59
     da4:	3a ea       	ldi	r19, 0xAA	; 170
     da6:	48 eb       	ldi	r20, 0xB8	; 184
     da8:	5f e7       	ldi	r21, 0x7F	; 127
     daa:	0e 94 d4 05 	call	0xba8	; 0xba8 <__mulsf3_pse>
     dae:	0f 92       	push	r0
     db0:	0f 92       	push	r0
     db2:	0f 92       	push	r0
     db4:	4d b7       	in	r20, 0x3d	; 61
     db6:	5e b7       	in	r21, 0x3e	; 62
     db8:	0f 92       	push	r0
     dba:	0e 94 c9 07 	call	0xf92	; 0xf92 <modf>
     dbe:	e8 e6       	ldi	r30, 0x68	; 104
     dc0:	f0 e0       	ldi	r31, 0x00	; 0
     dc2:	0e 94 10 07 	call	0xe20	; 0xe20 <__fp_powser>
     dc6:	4f 91       	pop	r20
     dc8:	5f 91       	pop	r21
     dca:	ef 91       	pop	r30
     dcc:	ff 91       	pop	r31
     dce:	e5 95       	asr	r30
     dd0:	ee 1f       	adc	r30, r30
     dd2:	ff 1f       	adc	r31, r31
     dd4:	49 f0       	breq	.+18     	; 0xde8 <exp+0x56>
     dd6:	fe 57       	subi	r31, 0x7E	; 126
     dd8:	e0 68       	ori	r30, 0x80	; 128
     dda:	44 27       	eor	r20, r20
     ddc:	ee 0f       	add	r30, r30
     dde:	44 1f       	adc	r20, r20
     de0:	fa 95       	dec	r31
     de2:	e1 f7       	brne	.-8      	; 0xddc <exp+0x4a>
     de4:	41 95       	neg	r20
     de6:	55 0b       	sbc	r21, r21
     de8:	0e 94 43 07 	call	0xe86	; 0xe86 <ldexp>
     dec:	0f 90       	pop	r0
     dee:	07 fe       	sbrs	r0, 7
     df0:	0c 94 37 07 	jmp	0xe6e	; 0xe6e <inverse>
     df4:	08 95       	ret

00000df6 <__fp_mpack>:
     df6:	9f 3f       	cpi	r25, 0xFF	; 255
     df8:	31 f0       	breq	.+12     	; 0xe06 <__fp_mpack_finite+0xc>

00000dfa <__fp_mpack_finite>:
     dfa:	91 50       	subi	r25, 0x01	; 1
     dfc:	20 f4       	brcc	.+8      	; 0xe06 <__fp_mpack_finite+0xc>
     dfe:	87 95       	ror	r24
     e00:	77 95       	ror	r23
     e02:	67 95       	ror	r22
     e04:	b7 95       	ror	r27
     e06:	88 0f       	add	r24, r24
     e08:	91 1d       	adc	r25, r1
     e0a:	96 95       	lsr	r25
     e0c:	87 95       	ror	r24
     e0e:	97 f9       	bld	r25, 7
     e10:	08 95       	ret

00000e12 <__fp_norm2>:
     e12:	91 50       	subi	r25, 0x01	; 1
     e14:	50 40       	sbci	r21, 0x00	; 0
     e16:	66 0f       	add	r22, r22
     e18:	77 1f       	adc	r23, r23
     e1a:	88 1f       	adc	r24, r24
     e1c:	d2 f7       	brpl	.-12     	; 0xe12 <__fp_norm2>
     e1e:	08 95       	ret

00000e20 <__fp_powser>:
     e20:	df 93       	push	r29
     e22:	cf 93       	push	r28
     e24:	1f 93       	push	r17
     e26:	0f 93       	push	r16
     e28:	ff 92       	push	r15
     e2a:	ef 92       	push	r14
     e2c:	df 92       	push	r13
     e2e:	7b 01       	movw	r14, r22
     e30:	8c 01       	movw	r16, r24
     e32:	68 94       	set
     e34:	06 c0       	rjmp	.+12     	; 0xe42 <__fp_powser+0x22>
     e36:	da 2e       	mov	r13, r26
     e38:	ef 01       	movw	r28, r30
     e3a:	0e 94 d1 05 	call	0xba2	; 0xba2 <__mulsf3x>
     e3e:	fe 01       	movw	r30, r28
     e40:	e8 94       	clt
     e42:	a5 91       	lpm	r26, Z+
     e44:	25 91       	lpm	r18, Z+
     e46:	35 91       	lpm	r19, Z+
     e48:	45 91       	lpm	r20, Z+
     e4a:	55 91       	lpm	r21, Z+
     e4c:	a6 f3       	brts	.-24     	; 0xe36 <__fp_powser+0x16>
     e4e:	ef 01       	movw	r28, r30
     e50:	0e 94 33 04 	call	0x866	; 0x866 <__addsf3x>
     e54:	fe 01       	movw	r30, r28
     e56:	97 01       	movw	r18, r14
     e58:	a8 01       	movw	r20, r16
     e5a:	da 94       	dec	r13
     e5c:	69 f7       	brne	.-38     	; 0xe38 <__fp_powser+0x18>
     e5e:	df 90       	pop	r13
     e60:	ef 90       	pop	r14
     e62:	ff 90       	pop	r15
     e64:	0f 91       	pop	r16
     e66:	1f 91       	pop	r17
     e68:	cf 91       	pop	r28
     e6a:	df 91       	pop	r29
     e6c:	08 95       	ret

00000e6e <inverse>:
     e6e:	9b 01       	movw	r18, r22
     e70:	ac 01       	movw	r20, r24
     e72:	60 e0       	ldi	r22, 0x00	; 0
     e74:	70 e0       	ldi	r23, 0x00	; 0
     e76:	80 e8       	ldi	r24, 0x80	; 128
     e78:	9f e3       	ldi	r25, 0x3F	; 63
     e7a:	0c 94 88 04 	jmp	0x910	; 0x910 <__divsf3>
     e7e:	0c 94 6d 05 	jmp	0xada	; 0xada <__fp_inf>
     e82:	0c 94 fb 06 	jmp	0xdf6	; 0xdf6 <__fp_mpack>

00000e86 <ldexp>:
     e86:	0e 94 9d 05 	call	0xb3a	; 0xb3a <__fp_splitA>
     e8a:	d8 f3       	brcs	.-10     	; 0xe82 <inverse+0x14>
     e8c:	99 23       	and	r25, r25
     e8e:	c9 f3       	breq	.-14     	; 0xe82 <inverse+0x14>
     e90:	94 0f       	add	r25, r20
     e92:	51 1d       	adc	r21, r1
     e94:	a3 f3       	brvs	.-24     	; 0xe7e <inverse+0x10>
     e96:	91 50       	subi	r25, 0x01	; 1
     e98:	50 40       	sbci	r21, 0x00	; 0
     e9a:	94 f0       	brlt	.+36     	; 0xec0 <ldexp+0x3a>
     e9c:	59 f0       	breq	.+22     	; 0xeb4 <ldexp+0x2e>
     e9e:	88 23       	and	r24, r24
     ea0:	32 f0       	brmi	.+12     	; 0xeae <ldexp+0x28>
     ea2:	66 0f       	add	r22, r22
     ea4:	77 1f       	adc	r23, r23
     ea6:	88 1f       	adc	r24, r24
     ea8:	91 50       	subi	r25, 0x01	; 1
     eaa:	50 40       	sbci	r21, 0x00	; 0
     eac:	c1 f7       	brne	.-16     	; 0xe9e <ldexp+0x18>
     eae:	9e 3f       	cpi	r25, 0xFE	; 254
     eb0:	51 05       	cpc	r21, r1
     eb2:	2c f7       	brge	.-54     	; 0xe7e <inverse+0x10>
     eb4:	88 0f       	add	r24, r24
     eb6:	91 1d       	adc	r25, r1
     eb8:	96 95       	lsr	r25
     eba:	87 95       	ror	r24
     ebc:	97 f9       	bld	r25, 7
     ebe:	08 95       	ret
     ec0:	5f 3f       	cpi	r21, 0xFF	; 255
     ec2:	ac f0       	brlt	.+42     	; 0xeee <ldexp+0x68>
     ec4:	98 3e       	cpi	r25, 0xE8	; 232
     ec6:	9c f0       	brlt	.+38     	; 0xeee <ldexp+0x68>
     ec8:	bb 27       	eor	r27, r27
     eca:	86 95       	lsr	r24
     ecc:	77 95       	ror	r23
     ece:	67 95       	ror	r22
     ed0:	b7 95       	ror	r27
     ed2:	08 f4       	brcc	.+2      	; 0xed6 <ldexp+0x50>
     ed4:	b1 60       	ori	r27, 0x01	; 1
     ed6:	93 95       	inc	r25
     ed8:	c1 f7       	brne	.-16     	; 0xeca <ldexp+0x44>
     eda:	bb 0f       	add	r27, r27
     edc:	58 f7       	brcc	.-42     	; 0xeb4 <ldexp+0x2e>
     ede:	11 f4       	brne	.+4      	; 0xee4 <ldexp+0x5e>
     ee0:	60 ff       	sbrs	r22, 0
     ee2:	e8 cf       	rjmp	.-48     	; 0xeb4 <ldexp+0x2e>
     ee4:	6f 5f       	subi	r22, 0xFF	; 255
     ee6:	7f 4f       	sbci	r23, 0xFF	; 255
     ee8:	8f 4f       	sbci	r24, 0xFF	; 255
     eea:	9f 4f       	sbci	r25, 0xFF	; 255
     eec:	e3 cf       	rjmp	.-58     	; 0xeb4 <ldexp+0x2e>
     eee:	0c 94 b8 05 	jmp	0xb70	; 0xb70 <__fp_szero>
     ef2:	16 f0       	brts	.+4      	; 0xef8 <ldexp+0x72>
     ef4:	0c 94 fb 06 	jmp	0xdf6	; 0xdf6 <__fp_mpack>
     ef8:	0c 94 73 05 	jmp	0xae6	; 0xae6 <__fp_nan>
     efc:	68 94       	set
     efe:	0c 94 6d 05 	jmp	0xada	; 0xada <__fp_inf>

00000f02 <log>:
     f02:	0e 94 9d 05 	call	0xb3a	; 0xb3a <__fp_splitA>
     f06:	a8 f3       	brcs	.-22     	; 0xef2 <ldexp+0x6c>
     f08:	99 23       	and	r25, r25
     f0a:	c1 f3       	breq	.-16     	; 0xefc <ldexp+0x76>
     f0c:	ae f3       	brts	.-22     	; 0xef8 <ldexp+0x72>
     f0e:	df 93       	push	r29
     f10:	cf 93       	push	r28
     f12:	1f 93       	push	r17
     f14:	0f 93       	push	r16
     f16:	ff 92       	push	r15
     f18:	c9 2f       	mov	r28, r25
     f1a:	dd 27       	eor	r29, r29
     f1c:	88 23       	and	r24, r24
     f1e:	2a f0       	brmi	.+10     	; 0xf2a <log+0x28>
     f20:	21 97       	sbiw	r28, 0x01	; 1
     f22:	66 0f       	add	r22, r22
     f24:	77 1f       	adc	r23, r23
     f26:	88 1f       	adc	r24, r24
     f28:	da f7       	brpl	.-10     	; 0xf20 <log+0x1e>
     f2a:	20 e0       	ldi	r18, 0x00	; 0
     f2c:	30 e0       	ldi	r19, 0x00	; 0
     f2e:	40 e8       	ldi	r20, 0x80	; 128
     f30:	5f eb       	ldi	r21, 0xBF	; 191
     f32:	9f e3       	ldi	r25, 0x3F	; 63
     f34:	88 39       	cpi	r24, 0x98	; 152
     f36:	20 f0       	brcs	.+8      	; 0xf40 <log+0x3e>
     f38:	80 3e       	cpi	r24, 0xE0	; 224
     f3a:	38 f0       	brcs	.+14     	; 0xf4a <log+0x48>
     f3c:	21 96       	adiw	r28, 0x01	; 1
     f3e:	8f 77       	andi	r24, 0x7F	; 127
     f40:	0e 94 1c 04 	call	0x838	; 0x838 <__addsf3>
     f44:	e0 e9       	ldi	r30, 0x90	; 144
     f46:	f0 e0       	ldi	r31, 0x00	; 0
     f48:	04 c0       	rjmp	.+8      	; 0xf52 <log+0x50>
     f4a:	0e 94 1c 04 	call	0x838	; 0x838 <__addsf3>
     f4e:	ed eb       	ldi	r30, 0xBD	; 189
     f50:	f0 e0       	ldi	r31, 0x00	; 0
     f52:	0e 94 10 07 	call	0xe20	; 0xe20 <__fp_powser>
     f56:	8b 01       	movw	r16, r22
     f58:	be 01       	movw	r22, r28
     f5a:	ec 01       	movw	r28, r24
     f5c:	fb 2e       	mov	r15, r27
     f5e:	6f 57       	subi	r22, 0x7F	; 127
     f60:	71 09       	sbc	r23, r1
     f62:	75 95       	asr	r23
     f64:	77 1f       	adc	r23, r23
     f66:	88 0b       	sbc	r24, r24
     f68:	99 0b       	sbc	r25, r25
     f6a:	0e 94 32 05 	call	0xa64	; 0xa64 <__floatsisf>
     f6e:	28 e1       	ldi	r18, 0x18	; 24
     f70:	32 e7       	ldi	r19, 0x72	; 114
     f72:	41 e3       	ldi	r20, 0x31	; 49
     f74:	5f e3       	ldi	r21, 0x3F	; 63
     f76:	0e 94 d1 05 	call	0xba2	; 0xba2 <__mulsf3x>
     f7a:	af 2d       	mov	r26, r15
     f7c:	98 01       	movw	r18, r16
     f7e:	ae 01       	movw	r20, r28
     f80:	ff 90       	pop	r15
     f82:	0f 91       	pop	r16
     f84:	1f 91       	pop	r17
     f86:	cf 91       	pop	r28
     f88:	df 91       	pop	r29
     f8a:	0e 94 33 04 	call	0x866	; 0x866 <__addsf3x>
     f8e:	0c 94 84 05 	jmp	0xb08	; 0xb08 <__fp_round>

00000f92 <modf>:
     f92:	fa 01       	movw	r30, r20
     f94:	dc 01       	movw	r26, r24
     f96:	aa 0f       	add	r26, r26
     f98:	bb 1f       	adc	r27, r27
     f9a:	9b 01       	movw	r18, r22
     f9c:	ac 01       	movw	r20, r24
     f9e:	bf 57       	subi	r27, 0x7F	; 127
     fa0:	28 f4       	brcc	.+10     	; 0xfac <modf+0x1a>
     fa2:	22 27       	eor	r18, r18
     fa4:	33 27       	eor	r19, r19
     fa6:	44 27       	eor	r20, r20
     fa8:	50 78       	andi	r21, 0x80	; 128
     faa:	20 c0       	rjmp	.+64     	; 0xfec <modf+0x5a>
     fac:	b7 51       	subi	r27, 0x17	; 23
     fae:	90 f4       	brcc	.+36     	; 0xfd4 <modf+0x42>
     fb0:	ab 2f       	mov	r26, r27
     fb2:	00 24       	eor	r0, r0
     fb4:	46 95       	lsr	r20
     fb6:	37 95       	ror	r19
     fb8:	27 95       	ror	r18
     fba:	01 1c       	adc	r0, r1
     fbc:	a3 95       	inc	r26
     fbe:	d2 f3       	brmi	.-12     	; 0xfb4 <modf+0x22>
     fc0:	00 20       	and	r0, r0
     fc2:	71 f0       	breq	.+28     	; 0xfe0 <modf+0x4e>
     fc4:	22 0f       	add	r18, r18
     fc6:	33 1f       	adc	r19, r19
     fc8:	44 1f       	adc	r20, r20
     fca:	b3 95       	inc	r27
     fcc:	da f3       	brmi	.-10     	; 0xfc4 <modf+0x32>
     fce:	0e d0       	rcall	.+28     	; 0xfec <modf+0x5a>
     fd0:	0c 94 1b 04 	jmp	0x836	; 0x836 <__subsf3>
     fd4:	61 30       	cpi	r22, 0x01	; 1
     fd6:	71 05       	cpc	r23, r1
     fd8:	a0 e8       	ldi	r26, 0x80	; 128
     fda:	8a 07       	cpc	r24, r26
     fdc:	b9 46       	sbci	r27, 0x69	; 105
     fde:	30 f4       	brcc	.+12     	; 0xfec <modf+0x5a>
     fe0:	9b 01       	movw	r18, r22
     fe2:	ac 01       	movw	r20, r24
     fe4:	66 27       	eor	r22, r22
     fe6:	77 27       	eor	r23, r23
     fe8:	88 27       	eor	r24, r24
     fea:	90 78       	andi	r25, 0x80	; 128
     fec:	30 96       	adiw	r30, 0x00	; 0
     fee:	21 f0       	breq	.+8      	; 0xff8 <modf+0x66>
     ff0:	20 83       	st	Z, r18
     ff2:	31 83       	std	Z+1, r19	; 0x01
     ff4:	42 83       	std	Z+2, r20	; 0x02
     ff6:	53 83       	std	Z+3, r21	; 0x03
     ff8:	08 95       	ret

00000ffa <__udivmodsi4>:
     ffa:	a1 e2       	ldi	r26, 0x21	; 33
     ffc:	1a 2e       	mov	r1, r26
     ffe:	aa 1b       	sub	r26, r26
    1000:	bb 1b       	sub	r27, r27
    1002:	fd 01       	movw	r30, r26
    1004:	0d c0       	rjmp	.+26     	; 0x1020 <__udivmodsi4_ep>

00001006 <__udivmodsi4_loop>:
    1006:	aa 1f       	adc	r26, r26
    1008:	bb 1f       	adc	r27, r27
    100a:	ee 1f       	adc	r30, r30
    100c:	ff 1f       	adc	r31, r31
    100e:	a2 17       	cp	r26, r18
    1010:	b3 07       	cpc	r27, r19
    1012:	e4 07       	cpc	r30, r20
    1014:	f5 07       	cpc	r31, r21
    1016:	20 f0       	brcs	.+8      	; 0x1020 <__udivmodsi4_ep>
    1018:	a2 1b       	sub	r26, r18
    101a:	b3 0b       	sbc	r27, r19
    101c:	e4 0b       	sbc	r30, r20
    101e:	f5 0b       	sbc	r31, r21

00001020 <__udivmodsi4_ep>:
    1020:	66 1f       	adc	r22, r22
    1022:	77 1f       	adc	r23, r23
    1024:	88 1f       	adc	r24, r24
    1026:	99 1f       	adc	r25, r25
    1028:	1a 94       	dec	r1
    102a:	69 f7       	brne	.-38     	; 0x1006 <__udivmodsi4_loop>
    102c:	60 95       	com	r22
    102e:	70 95       	com	r23
    1030:	80 95       	com	r24
    1032:	90 95       	com	r25
    1034:	9b 01       	movw	r18, r22
    1036:	ac 01       	movw	r20, r24
    1038:	bd 01       	movw	r22, r26
    103a:	cf 01       	movw	r24, r30
    103c:	08 95       	ret

0000103e <sprintf>:
    103e:	ae e0       	ldi	r26, 0x0E	; 14
    1040:	b0 e0       	ldi	r27, 0x00	; 0
    1042:	e5 e2       	ldi	r30, 0x25	; 37
    1044:	f8 e0       	ldi	r31, 0x08	; 8
    1046:	0c 94 e0 0a 	jmp	0x15c0	; 0x15c0 <__prologue_saves__+0x1c>
    104a:	0d 89       	ldd	r16, Y+21	; 0x15
    104c:	1e 89       	ldd	r17, Y+22	; 0x16
    104e:	86 e0       	ldi	r24, 0x06	; 6
    1050:	8c 83       	std	Y+4, r24	; 0x04
    1052:	1a 83       	std	Y+2, r17	; 0x02
    1054:	09 83       	std	Y+1, r16	; 0x01
    1056:	8f ef       	ldi	r24, 0xFF	; 255
    1058:	9f e7       	ldi	r25, 0x7F	; 127
    105a:	9e 83       	std	Y+6, r25	; 0x06
    105c:	8d 83       	std	Y+5, r24	; 0x05
    105e:	ae 01       	movw	r20, r28
    1060:	47 5e       	subi	r20, 0xE7	; 231
    1062:	5f 4f       	sbci	r21, 0xFF	; 255
    1064:	6f 89       	ldd	r22, Y+23	; 0x17
    1066:	78 8d       	ldd	r23, Y+24	; 0x18
    1068:	ce 01       	movw	r24, r28
    106a:	01 96       	adiw	r24, 0x01	; 1
    106c:	0e 94 41 08 	call	0x1082	; 0x1082 <vfprintf>
    1070:	ef 81       	ldd	r30, Y+7	; 0x07
    1072:	f8 85       	ldd	r31, Y+8	; 0x08
    1074:	e0 0f       	add	r30, r16
    1076:	f1 1f       	adc	r31, r17
    1078:	10 82       	st	Z, r1
    107a:	2e 96       	adiw	r28, 0x0e	; 14
    107c:	e4 e0       	ldi	r30, 0x04	; 4
    107e:	0c 94 fc 0a 	jmp	0x15f8	; 0x15f8 <__epilogue_restores__+0x1c>

00001082 <vfprintf>:
    1082:	ab e0       	ldi	r26, 0x0B	; 11
    1084:	b0 e0       	ldi	r27, 0x00	; 0
    1086:	e7 e4       	ldi	r30, 0x47	; 71
    1088:	f8 e0       	ldi	r31, 0x08	; 8
    108a:	0c 94 d2 0a 	jmp	0x15a4	; 0x15a4 <__prologue_saves__>
    108e:	6c 01       	movw	r12, r24
    1090:	7b 01       	movw	r14, r22
    1092:	8a 01       	movw	r16, r20
    1094:	fc 01       	movw	r30, r24
    1096:	17 82       	std	Z+7, r1	; 0x07
    1098:	16 82       	std	Z+6, r1	; 0x06
    109a:	83 81       	ldd	r24, Z+3	; 0x03
    109c:	81 ff       	sbrs	r24, 1
    109e:	cc c1       	rjmp	.+920    	; 0x1438 <vfprintf+0x3b6>
    10a0:	ce 01       	movw	r24, r28
    10a2:	01 96       	adiw	r24, 0x01	; 1
    10a4:	3c 01       	movw	r6, r24
    10a6:	f6 01       	movw	r30, r12
    10a8:	93 81       	ldd	r25, Z+3	; 0x03
    10aa:	f7 01       	movw	r30, r14
    10ac:	93 fd       	sbrc	r25, 3
    10ae:	85 91       	lpm	r24, Z+
    10b0:	93 ff       	sbrs	r25, 3
    10b2:	81 91       	ld	r24, Z+
    10b4:	7f 01       	movw	r14, r30
    10b6:	88 23       	and	r24, r24
    10b8:	09 f4       	brne	.+2      	; 0x10bc <vfprintf+0x3a>
    10ba:	ba c1       	rjmp	.+884    	; 0x1430 <vfprintf+0x3ae>
    10bc:	85 32       	cpi	r24, 0x25	; 37
    10be:	39 f4       	brne	.+14     	; 0x10ce <vfprintf+0x4c>
    10c0:	93 fd       	sbrc	r25, 3
    10c2:	85 91       	lpm	r24, Z+
    10c4:	93 ff       	sbrs	r25, 3
    10c6:	81 91       	ld	r24, Z+
    10c8:	7f 01       	movw	r14, r30
    10ca:	85 32       	cpi	r24, 0x25	; 37
    10cc:	29 f4       	brne	.+10     	; 0x10d8 <vfprintf+0x56>
    10ce:	b6 01       	movw	r22, r12
    10d0:	90 e0       	ldi	r25, 0x00	; 0
    10d2:	0e 94 38 0a 	call	0x1470	; 0x1470 <fputc>
    10d6:	e7 cf       	rjmp	.-50     	; 0x10a6 <vfprintf+0x24>
    10d8:	91 2c       	mov	r9, r1
    10da:	21 2c       	mov	r2, r1
    10dc:	31 2c       	mov	r3, r1
    10de:	ff e1       	ldi	r31, 0x1F	; 31
    10e0:	f3 15       	cp	r31, r3
    10e2:	d8 f0       	brcs	.+54     	; 0x111a <vfprintf+0x98>
    10e4:	8b 32       	cpi	r24, 0x2B	; 43
    10e6:	79 f0       	breq	.+30     	; 0x1106 <vfprintf+0x84>
    10e8:	38 f4       	brcc	.+14     	; 0x10f8 <vfprintf+0x76>
    10ea:	80 32       	cpi	r24, 0x20	; 32
    10ec:	79 f0       	breq	.+30     	; 0x110c <vfprintf+0x8a>
    10ee:	83 32       	cpi	r24, 0x23	; 35
    10f0:	a1 f4       	brne	.+40     	; 0x111a <vfprintf+0x98>
    10f2:	23 2d       	mov	r18, r3
    10f4:	20 61       	ori	r18, 0x10	; 16
    10f6:	1d c0       	rjmp	.+58     	; 0x1132 <vfprintf+0xb0>
    10f8:	8d 32       	cpi	r24, 0x2D	; 45
    10fa:	61 f0       	breq	.+24     	; 0x1114 <vfprintf+0x92>
    10fc:	80 33       	cpi	r24, 0x30	; 48
    10fe:	69 f4       	brne	.+26     	; 0x111a <vfprintf+0x98>
    1100:	23 2d       	mov	r18, r3
    1102:	21 60       	ori	r18, 0x01	; 1
    1104:	16 c0       	rjmp	.+44     	; 0x1132 <vfprintf+0xb0>
    1106:	83 2d       	mov	r24, r3
    1108:	82 60       	ori	r24, 0x02	; 2
    110a:	38 2e       	mov	r3, r24
    110c:	e3 2d       	mov	r30, r3
    110e:	e4 60       	ori	r30, 0x04	; 4
    1110:	3e 2e       	mov	r3, r30
    1112:	2a c0       	rjmp	.+84     	; 0x1168 <vfprintf+0xe6>
    1114:	f3 2d       	mov	r31, r3
    1116:	f8 60       	ori	r31, 0x08	; 8
    1118:	1d c0       	rjmp	.+58     	; 0x1154 <vfprintf+0xd2>
    111a:	37 fc       	sbrc	r3, 7
    111c:	2d c0       	rjmp	.+90     	; 0x1178 <vfprintf+0xf6>
    111e:	20 ed       	ldi	r18, 0xD0	; 208
    1120:	28 0f       	add	r18, r24
    1122:	2a 30       	cpi	r18, 0x0A	; 10
    1124:	40 f0       	brcs	.+16     	; 0x1136 <vfprintf+0xb4>
    1126:	8e 32       	cpi	r24, 0x2E	; 46
    1128:	b9 f4       	brne	.+46     	; 0x1158 <vfprintf+0xd6>
    112a:	36 fc       	sbrc	r3, 6
    112c:	81 c1       	rjmp	.+770    	; 0x1430 <vfprintf+0x3ae>
    112e:	23 2d       	mov	r18, r3
    1130:	20 64       	ori	r18, 0x40	; 64
    1132:	32 2e       	mov	r3, r18
    1134:	19 c0       	rjmp	.+50     	; 0x1168 <vfprintf+0xe6>
    1136:	36 fe       	sbrs	r3, 6
    1138:	06 c0       	rjmp	.+12     	; 0x1146 <vfprintf+0xc4>
    113a:	8a e0       	ldi	r24, 0x0A	; 10
    113c:	98 9e       	mul	r9, r24
    113e:	20 0d       	add	r18, r0
    1140:	11 24       	eor	r1, r1
    1142:	92 2e       	mov	r9, r18
    1144:	11 c0       	rjmp	.+34     	; 0x1168 <vfprintf+0xe6>
    1146:	ea e0       	ldi	r30, 0x0A	; 10
    1148:	2e 9e       	mul	r2, r30
    114a:	20 0d       	add	r18, r0
    114c:	11 24       	eor	r1, r1
    114e:	22 2e       	mov	r2, r18
    1150:	f3 2d       	mov	r31, r3
    1152:	f0 62       	ori	r31, 0x20	; 32
    1154:	3f 2e       	mov	r3, r31
    1156:	08 c0       	rjmp	.+16     	; 0x1168 <vfprintf+0xe6>
    1158:	8c 36       	cpi	r24, 0x6C	; 108
    115a:	21 f4       	brne	.+8      	; 0x1164 <vfprintf+0xe2>
    115c:	83 2d       	mov	r24, r3
    115e:	80 68       	ori	r24, 0x80	; 128
    1160:	38 2e       	mov	r3, r24
    1162:	02 c0       	rjmp	.+4      	; 0x1168 <vfprintf+0xe6>
    1164:	88 36       	cpi	r24, 0x68	; 104
    1166:	41 f4       	brne	.+16     	; 0x1178 <vfprintf+0xf6>
    1168:	f7 01       	movw	r30, r14
    116a:	93 fd       	sbrc	r25, 3
    116c:	85 91       	lpm	r24, Z+
    116e:	93 ff       	sbrs	r25, 3
    1170:	81 91       	ld	r24, Z+
    1172:	7f 01       	movw	r14, r30
    1174:	81 11       	cpse	r24, r1
    1176:	b3 cf       	rjmp	.-154    	; 0x10de <vfprintf+0x5c>
    1178:	98 2f       	mov	r25, r24
    117a:	9f 7d       	andi	r25, 0xDF	; 223
    117c:	95 54       	subi	r25, 0x45	; 69
    117e:	93 30       	cpi	r25, 0x03	; 3
    1180:	28 f4       	brcc	.+10     	; 0x118c <vfprintf+0x10a>
    1182:	0c 5f       	subi	r16, 0xFC	; 252
    1184:	1f 4f       	sbci	r17, 0xFF	; 255
    1186:	9f e3       	ldi	r25, 0x3F	; 63
    1188:	99 83       	std	Y+1, r25	; 0x01
    118a:	0d c0       	rjmp	.+26     	; 0x11a6 <vfprintf+0x124>
    118c:	83 36       	cpi	r24, 0x63	; 99
    118e:	31 f0       	breq	.+12     	; 0x119c <vfprintf+0x11a>
    1190:	83 37       	cpi	r24, 0x73	; 115
    1192:	71 f0       	breq	.+28     	; 0x11b0 <vfprintf+0x12e>
    1194:	83 35       	cpi	r24, 0x53	; 83
    1196:	09 f0       	breq	.+2      	; 0x119a <vfprintf+0x118>
    1198:	59 c0       	rjmp	.+178    	; 0x124c <vfprintf+0x1ca>
    119a:	21 c0       	rjmp	.+66     	; 0x11de <vfprintf+0x15c>
    119c:	f8 01       	movw	r30, r16
    119e:	80 81       	ld	r24, Z
    11a0:	89 83       	std	Y+1, r24	; 0x01
    11a2:	0e 5f       	subi	r16, 0xFE	; 254
    11a4:	1f 4f       	sbci	r17, 0xFF	; 255
    11a6:	88 24       	eor	r8, r8
    11a8:	83 94       	inc	r8
    11aa:	91 2c       	mov	r9, r1
    11ac:	53 01       	movw	r10, r6
    11ae:	13 c0       	rjmp	.+38     	; 0x11d6 <vfprintf+0x154>
    11b0:	28 01       	movw	r4, r16
    11b2:	f2 e0       	ldi	r31, 0x02	; 2
    11b4:	4f 0e       	add	r4, r31
    11b6:	51 1c       	adc	r5, r1
    11b8:	f8 01       	movw	r30, r16
    11ba:	a0 80       	ld	r10, Z
    11bc:	b1 80       	ldd	r11, Z+1	; 0x01
    11be:	36 fe       	sbrs	r3, 6
    11c0:	03 c0       	rjmp	.+6      	; 0x11c8 <vfprintf+0x146>
    11c2:	69 2d       	mov	r22, r9
    11c4:	70 e0       	ldi	r23, 0x00	; 0
    11c6:	02 c0       	rjmp	.+4      	; 0x11cc <vfprintf+0x14a>
    11c8:	6f ef       	ldi	r22, 0xFF	; 255
    11ca:	7f ef       	ldi	r23, 0xFF	; 255
    11cc:	c5 01       	movw	r24, r10
    11ce:	0e 94 2d 0a 	call	0x145a	; 0x145a <strnlen>
    11d2:	4c 01       	movw	r8, r24
    11d4:	82 01       	movw	r16, r4
    11d6:	f3 2d       	mov	r31, r3
    11d8:	ff 77       	andi	r31, 0x7F	; 127
    11da:	3f 2e       	mov	r3, r31
    11dc:	16 c0       	rjmp	.+44     	; 0x120a <vfprintf+0x188>
    11de:	28 01       	movw	r4, r16
    11e0:	22 e0       	ldi	r18, 0x02	; 2
    11e2:	42 0e       	add	r4, r18
    11e4:	51 1c       	adc	r5, r1
    11e6:	f8 01       	movw	r30, r16
    11e8:	a0 80       	ld	r10, Z
    11ea:	b1 80       	ldd	r11, Z+1	; 0x01
    11ec:	36 fe       	sbrs	r3, 6
    11ee:	03 c0       	rjmp	.+6      	; 0x11f6 <vfprintf+0x174>
    11f0:	69 2d       	mov	r22, r9
    11f2:	70 e0       	ldi	r23, 0x00	; 0
    11f4:	02 c0       	rjmp	.+4      	; 0x11fa <vfprintf+0x178>
    11f6:	6f ef       	ldi	r22, 0xFF	; 255
    11f8:	7f ef       	ldi	r23, 0xFF	; 255
    11fa:	c5 01       	movw	r24, r10
    11fc:	0e 94 22 0a 	call	0x1444	; 0x1444 <strnlen_P>
    1200:	4c 01       	movw	r8, r24
    1202:	f3 2d       	mov	r31, r3
    1204:	f0 68       	ori	r31, 0x80	; 128
    1206:	3f 2e       	mov	r3, r31
    1208:	82 01       	movw	r16, r4
    120a:	33 fc       	sbrc	r3, 3
    120c:	1b c0       	rjmp	.+54     	; 0x1244 <vfprintf+0x1c2>
    120e:	82 2d       	mov	r24, r2
    1210:	90 e0       	ldi	r25, 0x00	; 0
    1212:	88 16       	cp	r8, r24
    1214:	99 06       	cpc	r9, r25
    1216:	b0 f4       	brcc	.+44     	; 0x1244 <vfprintf+0x1c2>
    1218:	b6 01       	movw	r22, r12
    121a:	80 e2       	ldi	r24, 0x20	; 32
    121c:	90 e0       	ldi	r25, 0x00	; 0
    121e:	0e 94 38 0a 	call	0x1470	; 0x1470 <fputc>
    1222:	2a 94       	dec	r2
    1224:	f4 cf       	rjmp	.-24     	; 0x120e <vfprintf+0x18c>
    1226:	f5 01       	movw	r30, r10
    1228:	37 fc       	sbrc	r3, 7
    122a:	85 91       	lpm	r24, Z+
    122c:	37 fe       	sbrs	r3, 7
    122e:	81 91       	ld	r24, Z+
    1230:	5f 01       	movw	r10, r30
    1232:	b6 01       	movw	r22, r12
    1234:	90 e0       	ldi	r25, 0x00	; 0
    1236:	0e 94 38 0a 	call	0x1470	; 0x1470 <fputc>
    123a:	21 10       	cpse	r2, r1
    123c:	2a 94       	dec	r2
    123e:	21 e0       	ldi	r18, 0x01	; 1
    1240:	82 1a       	sub	r8, r18
    1242:	91 08       	sbc	r9, r1
    1244:	81 14       	cp	r8, r1
    1246:	91 04       	cpc	r9, r1
    1248:	71 f7       	brne	.-36     	; 0x1226 <vfprintf+0x1a4>
    124a:	e8 c0       	rjmp	.+464    	; 0x141c <vfprintf+0x39a>
    124c:	84 36       	cpi	r24, 0x64	; 100
    124e:	11 f0       	breq	.+4      	; 0x1254 <vfprintf+0x1d2>
    1250:	89 36       	cpi	r24, 0x69	; 105
    1252:	41 f5       	brne	.+80     	; 0x12a4 <vfprintf+0x222>
    1254:	f8 01       	movw	r30, r16
    1256:	37 fe       	sbrs	r3, 7
    1258:	07 c0       	rjmp	.+14     	; 0x1268 <vfprintf+0x1e6>
    125a:	60 81       	ld	r22, Z
    125c:	71 81       	ldd	r23, Z+1	; 0x01
    125e:	82 81       	ldd	r24, Z+2	; 0x02
    1260:	93 81       	ldd	r25, Z+3	; 0x03
    1262:	0c 5f       	subi	r16, 0xFC	; 252
    1264:	1f 4f       	sbci	r17, 0xFF	; 255
    1266:	08 c0       	rjmp	.+16     	; 0x1278 <vfprintf+0x1f6>
    1268:	60 81       	ld	r22, Z
    126a:	71 81       	ldd	r23, Z+1	; 0x01
    126c:	07 2e       	mov	r0, r23
    126e:	00 0c       	add	r0, r0
    1270:	88 0b       	sbc	r24, r24
    1272:	99 0b       	sbc	r25, r25
    1274:	0e 5f       	subi	r16, 0xFE	; 254
    1276:	1f 4f       	sbci	r17, 0xFF	; 255
    1278:	f3 2d       	mov	r31, r3
    127a:	ff 76       	andi	r31, 0x6F	; 111
    127c:	3f 2e       	mov	r3, r31
    127e:	97 ff       	sbrs	r25, 7
    1280:	09 c0       	rjmp	.+18     	; 0x1294 <vfprintf+0x212>
    1282:	90 95       	com	r25
    1284:	80 95       	com	r24
    1286:	70 95       	com	r23
    1288:	61 95       	neg	r22
    128a:	7f 4f       	sbci	r23, 0xFF	; 255
    128c:	8f 4f       	sbci	r24, 0xFF	; 255
    128e:	9f 4f       	sbci	r25, 0xFF	; 255
    1290:	f0 68       	ori	r31, 0x80	; 128
    1292:	3f 2e       	mov	r3, r31
    1294:	2a e0       	ldi	r18, 0x0A	; 10
    1296:	30 e0       	ldi	r19, 0x00	; 0
    1298:	a3 01       	movw	r20, r6
    129a:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <__ultoa_invert>
    129e:	88 2e       	mov	r8, r24
    12a0:	86 18       	sub	r8, r6
    12a2:	45 c0       	rjmp	.+138    	; 0x132e <vfprintf+0x2ac>
    12a4:	85 37       	cpi	r24, 0x75	; 117
    12a6:	31 f4       	brne	.+12     	; 0x12b4 <vfprintf+0x232>
    12a8:	23 2d       	mov	r18, r3
    12aa:	2f 7e       	andi	r18, 0xEF	; 239
    12ac:	b2 2e       	mov	r11, r18
    12ae:	2a e0       	ldi	r18, 0x0A	; 10
    12b0:	30 e0       	ldi	r19, 0x00	; 0
    12b2:	25 c0       	rjmp	.+74     	; 0x12fe <vfprintf+0x27c>
    12b4:	93 2d       	mov	r25, r3
    12b6:	99 7f       	andi	r25, 0xF9	; 249
    12b8:	b9 2e       	mov	r11, r25
    12ba:	8f 36       	cpi	r24, 0x6F	; 111
    12bc:	c1 f0       	breq	.+48     	; 0x12ee <vfprintf+0x26c>
    12be:	18 f4       	brcc	.+6      	; 0x12c6 <vfprintf+0x244>
    12c0:	88 35       	cpi	r24, 0x58	; 88
    12c2:	79 f0       	breq	.+30     	; 0x12e2 <vfprintf+0x260>
    12c4:	b5 c0       	rjmp	.+362    	; 0x1430 <vfprintf+0x3ae>
    12c6:	80 37       	cpi	r24, 0x70	; 112
    12c8:	19 f0       	breq	.+6      	; 0x12d0 <vfprintf+0x24e>
    12ca:	88 37       	cpi	r24, 0x78	; 120
    12cc:	21 f0       	breq	.+8      	; 0x12d6 <vfprintf+0x254>
    12ce:	b0 c0       	rjmp	.+352    	; 0x1430 <vfprintf+0x3ae>
    12d0:	e9 2f       	mov	r30, r25
    12d2:	e0 61       	ori	r30, 0x10	; 16
    12d4:	be 2e       	mov	r11, r30
    12d6:	b4 fe       	sbrs	r11, 4
    12d8:	0d c0       	rjmp	.+26     	; 0x12f4 <vfprintf+0x272>
    12da:	fb 2d       	mov	r31, r11
    12dc:	f4 60       	ori	r31, 0x04	; 4
    12de:	bf 2e       	mov	r11, r31
    12e0:	09 c0       	rjmp	.+18     	; 0x12f4 <vfprintf+0x272>
    12e2:	34 fe       	sbrs	r3, 4
    12e4:	0a c0       	rjmp	.+20     	; 0x12fa <vfprintf+0x278>
    12e6:	29 2f       	mov	r18, r25
    12e8:	26 60       	ori	r18, 0x06	; 6
    12ea:	b2 2e       	mov	r11, r18
    12ec:	06 c0       	rjmp	.+12     	; 0x12fa <vfprintf+0x278>
    12ee:	28 e0       	ldi	r18, 0x08	; 8
    12f0:	30 e0       	ldi	r19, 0x00	; 0
    12f2:	05 c0       	rjmp	.+10     	; 0x12fe <vfprintf+0x27c>
    12f4:	20 e1       	ldi	r18, 0x10	; 16
    12f6:	30 e0       	ldi	r19, 0x00	; 0
    12f8:	02 c0       	rjmp	.+4      	; 0x12fe <vfprintf+0x27c>
    12fa:	20 e1       	ldi	r18, 0x10	; 16
    12fc:	32 e0       	ldi	r19, 0x02	; 2
    12fe:	f8 01       	movw	r30, r16
    1300:	b7 fe       	sbrs	r11, 7
    1302:	07 c0       	rjmp	.+14     	; 0x1312 <vfprintf+0x290>
    1304:	60 81       	ld	r22, Z
    1306:	71 81       	ldd	r23, Z+1	; 0x01
    1308:	82 81       	ldd	r24, Z+2	; 0x02
    130a:	93 81       	ldd	r25, Z+3	; 0x03
    130c:	0c 5f       	subi	r16, 0xFC	; 252
    130e:	1f 4f       	sbci	r17, 0xFF	; 255
    1310:	06 c0       	rjmp	.+12     	; 0x131e <vfprintf+0x29c>
    1312:	60 81       	ld	r22, Z
    1314:	71 81       	ldd	r23, Z+1	; 0x01
    1316:	80 e0       	ldi	r24, 0x00	; 0
    1318:	90 e0       	ldi	r25, 0x00	; 0
    131a:	0e 5f       	subi	r16, 0xFE	; 254
    131c:	1f 4f       	sbci	r17, 0xFF	; 255
    131e:	a3 01       	movw	r20, r6
    1320:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <__ultoa_invert>
    1324:	88 2e       	mov	r8, r24
    1326:	86 18       	sub	r8, r6
    1328:	fb 2d       	mov	r31, r11
    132a:	ff 77       	andi	r31, 0x7F	; 127
    132c:	3f 2e       	mov	r3, r31
    132e:	36 fe       	sbrs	r3, 6
    1330:	0d c0       	rjmp	.+26     	; 0x134c <vfprintf+0x2ca>
    1332:	23 2d       	mov	r18, r3
    1334:	2e 7f       	andi	r18, 0xFE	; 254
    1336:	a2 2e       	mov	r10, r18
    1338:	89 14       	cp	r8, r9
    133a:	58 f4       	brcc	.+22     	; 0x1352 <vfprintf+0x2d0>
    133c:	34 fe       	sbrs	r3, 4
    133e:	0b c0       	rjmp	.+22     	; 0x1356 <vfprintf+0x2d4>
    1340:	32 fc       	sbrc	r3, 2
    1342:	09 c0       	rjmp	.+18     	; 0x1356 <vfprintf+0x2d4>
    1344:	83 2d       	mov	r24, r3
    1346:	8e 7e       	andi	r24, 0xEE	; 238
    1348:	a8 2e       	mov	r10, r24
    134a:	05 c0       	rjmp	.+10     	; 0x1356 <vfprintf+0x2d4>
    134c:	b8 2c       	mov	r11, r8
    134e:	a3 2c       	mov	r10, r3
    1350:	03 c0       	rjmp	.+6      	; 0x1358 <vfprintf+0x2d6>
    1352:	b8 2c       	mov	r11, r8
    1354:	01 c0       	rjmp	.+2      	; 0x1358 <vfprintf+0x2d6>
    1356:	b9 2c       	mov	r11, r9
    1358:	a4 fe       	sbrs	r10, 4
    135a:	0f c0       	rjmp	.+30     	; 0x137a <vfprintf+0x2f8>
    135c:	fe 01       	movw	r30, r28
    135e:	e8 0d       	add	r30, r8
    1360:	f1 1d       	adc	r31, r1
    1362:	80 81       	ld	r24, Z
    1364:	80 33       	cpi	r24, 0x30	; 48
    1366:	21 f4       	brne	.+8      	; 0x1370 <vfprintf+0x2ee>
    1368:	9a 2d       	mov	r25, r10
    136a:	99 7e       	andi	r25, 0xE9	; 233
    136c:	a9 2e       	mov	r10, r25
    136e:	09 c0       	rjmp	.+18     	; 0x1382 <vfprintf+0x300>
    1370:	a2 fe       	sbrs	r10, 2
    1372:	06 c0       	rjmp	.+12     	; 0x1380 <vfprintf+0x2fe>
    1374:	b3 94       	inc	r11
    1376:	b3 94       	inc	r11
    1378:	04 c0       	rjmp	.+8      	; 0x1382 <vfprintf+0x300>
    137a:	8a 2d       	mov	r24, r10
    137c:	86 78       	andi	r24, 0x86	; 134
    137e:	09 f0       	breq	.+2      	; 0x1382 <vfprintf+0x300>
    1380:	b3 94       	inc	r11
    1382:	a3 fc       	sbrc	r10, 3
    1384:	11 c0       	rjmp	.+34     	; 0x13a8 <vfprintf+0x326>
    1386:	a0 fe       	sbrs	r10, 0
    1388:	06 c0       	rjmp	.+12     	; 0x1396 <vfprintf+0x314>
    138a:	b2 14       	cp	r11, r2
    138c:	88 f4       	brcc	.+34     	; 0x13b0 <vfprintf+0x32e>
    138e:	28 0c       	add	r2, r8
    1390:	92 2c       	mov	r9, r2
    1392:	9b 18       	sub	r9, r11
    1394:	0e c0       	rjmp	.+28     	; 0x13b2 <vfprintf+0x330>
    1396:	b2 14       	cp	r11, r2
    1398:	60 f4       	brcc	.+24     	; 0x13b2 <vfprintf+0x330>
    139a:	b6 01       	movw	r22, r12
    139c:	80 e2       	ldi	r24, 0x20	; 32
    139e:	90 e0       	ldi	r25, 0x00	; 0
    13a0:	0e 94 38 0a 	call	0x1470	; 0x1470 <fputc>
    13a4:	b3 94       	inc	r11
    13a6:	f7 cf       	rjmp	.-18     	; 0x1396 <vfprintf+0x314>
    13a8:	b2 14       	cp	r11, r2
    13aa:	18 f4       	brcc	.+6      	; 0x13b2 <vfprintf+0x330>
    13ac:	2b 18       	sub	r2, r11
    13ae:	02 c0       	rjmp	.+4      	; 0x13b4 <vfprintf+0x332>
    13b0:	98 2c       	mov	r9, r8
    13b2:	21 2c       	mov	r2, r1
    13b4:	a4 fe       	sbrs	r10, 4
    13b6:	10 c0       	rjmp	.+32     	; 0x13d8 <vfprintf+0x356>
    13b8:	b6 01       	movw	r22, r12
    13ba:	80 e3       	ldi	r24, 0x30	; 48
    13bc:	90 e0       	ldi	r25, 0x00	; 0
    13be:	0e 94 38 0a 	call	0x1470	; 0x1470 <fputc>
    13c2:	a2 fe       	sbrs	r10, 2
    13c4:	17 c0       	rjmp	.+46     	; 0x13f4 <vfprintf+0x372>
    13c6:	a1 fc       	sbrc	r10, 1
    13c8:	03 c0       	rjmp	.+6      	; 0x13d0 <vfprintf+0x34e>
    13ca:	88 e7       	ldi	r24, 0x78	; 120
    13cc:	90 e0       	ldi	r25, 0x00	; 0
    13ce:	02 c0       	rjmp	.+4      	; 0x13d4 <vfprintf+0x352>
    13d0:	88 e5       	ldi	r24, 0x58	; 88
    13d2:	90 e0       	ldi	r25, 0x00	; 0
    13d4:	b6 01       	movw	r22, r12
    13d6:	0c c0       	rjmp	.+24     	; 0x13f0 <vfprintf+0x36e>
    13d8:	8a 2d       	mov	r24, r10
    13da:	86 78       	andi	r24, 0x86	; 134
    13dc:	59 f0       	breq	.+22     	; 0x13f4 <vfprintf+0x372>
    13de:	a1 fe       	sbrs	r10, 1
    13e0:	02 c0       	rjmp	.+4      	; 0x13e6 <vfprintf+0x364>
    13e2:	8b e2       	ldi	r24, 0x2B	; 43
    13e4:	01 c0       	rjmp	.+2      	; 0x13e8 <vfprintf+0x366>
    13e6:	80 e2       	ldi	r24, 0x20	; 32
    13e8:	a7 fc       	sbrc	r10, 7
    13ea:	8d e2       	ldi	r24, 0x2D	; 45
    13ec:	b6 01       	movw	r22, r12
    13ee:	90 e0       	ldi	r25, 0x00	; 0
    13f0:	0e 94 38 0a 	call	0x1470	; 0x1470 <fputc>
    13f4:	89 14       	cp	r8, r9
    13f6:	38 f4       	brcc	.+14     	; 0x1406 <vfprintf+0x384>
    13f8:	b6 01       	movw	r22, r12
    13fa:	80 e3       	ldi	r24, 0x30	; 48
    13fc:	90 e0       	ldi	r25, 0x00	; 0
    13fe:	0e 94 38 0a 	call	0x1470	; 0x1470 <fputc>
    1402:	9a 94       	dec	r9
    1404:	f7 cf       	rjmp	.-18     	; 0x13f4 <vfprintf+0x372>
    1406:	8a 94       	dec	r8
    1408:	f3 01       	movw	r30, r6
    140a:	e8 0d       	add	r30, r8
    140c:	f1 1d       	adc	r31, r1
    140e:	80 81       	ld	r24, Z
    1410:	b6 01       	movw	r22, r12
    1412:	90 e0       	ldi	r25, 0x00	; 0
    1414:	0e 94 38 0a 	call	0x1470	; 0x1470 <fputc>
    1418:	81 10       	cpse	r8, r1
    141a:	f5 cf       	rjmp	.-22     	; 0x1406 <vfprintf+0x384>
    141c:	22 20       	and	r2, r2
    141e:	09 f4       	brne	.+2      	; 0x1422 <vfprintf+0x3a0>
    1420:	42 ce       	rjmp	.-892    	; 0x10a6 <vfprintf+0x24>
    1422:	b6 01       	movw	r22, r12
    1424:	80 e2       	ldi	r24, 0x20	; 32
    1426:	90 e0       	ldi	r25, 0x00	; 0
    1428:	0e 94 38 0a 	call	0x1470	; 0x1470 <fputc>
    142c:	2a 94       	dec	r2
    142e:	f6 cf       	rjmp	.-20     	; 0x141c <vfprintf+0x39a>
    1430:	f6 01       	movw	r30, r12
    1432:	86 81       	ldd	r24, Z+6	; 0x06
    1434:	97 81       	ldd	r25, Z+7	; 0x07
    1436:	02 c0       	rjmp	.+4      	; 0x143c <vfprintf+0x3ba>
    1438:	8f ef       	ldi	r24, 0xFF	; 255
    143a:	9f ef       	ldi	r25, 0xFF	; 255
    143c:	2b 96       	adiw	r28, 0x0b	; 11
    143e:	e2 e1       	ldi	r30, 0x12	; 18
    1440:	0c 94 ee 0a 	jmp	0x15dc	; 0x15dc <__epilogue_restores__>

00001444 <strnlen_P>:
    1444:	fc 01       	movw	r30, r24
    1446:	05 90       	lpm	r0, Z+
    1448:	61 50       	subi	r22, 0x01	; 1
    144a:	70 40       	sbci	r23, 0x00	; 0
    144c:	01 10       	cpse	r0, r1
    144e:	d8 f7       	brcc	.-10     	; 0x1446 <strnlen_P+0x2>
    1450:	80 95       	com	r24
    1452:	90 95       	com	r25
    1454:	8e 0f       	add	r24, r30
    1456:	9f 1f       	adc	r25, r31
    1458:	08 95       	ret

0000145a <strnlen>:
    145a:	fc 01       	movw	r30, r24
    145c:	61 50       	subi	r22, 0x01	; 1
    145e:	70 40       	sbci	r23, 0x00	; 0
    1460:	01 90       	ld	r0, Z+
    1462:	01 10       	cpse	r0, r1
    1464:	d8 f7       	brcc	.-10     	; 0x145c <strnlen+0x2>
    1466:	80 95       	com	r24
    1468:	90 95       	com	r25
    146a:	8e 0f       	add	r24, r30
    146c:	9f 1f       	adc	r25, r31
    146e:	08 95       	ret

00001470 <fputc>:
    1470:	0f 93       	push	r16
    1472:	1f 93       	push	r17
    1474:	cf 93       	push	r28
    1476:	df 93       	push	r29
    1478:	fb 01       	movw	r30, r22
    147a:	23 81       	ldd	r18, Z+3	; 0x03
    147c:	21 fd       	sbrc	r18, 1
    147e:	03 c0       	rjmp	.+6      	; 0x1486 <fputc+0x16>
    1480:	8f ef       	ldi	r24, 0xFF	; 255
    1482:	9f ef       	ldi	r25, 0xFF	; 255
    1484:	2c c0       	rjmp	.+88     	; 0x14de <fputc+0x6e>
    1486:	22 ff       	sbrs	r18, 2
    1488:	16 c0       	rjmp	.+44     	; 0x14b6 <fputc+0x46>
    148a:	46 81       	ldd	r20, Z+6	; 0x06
    148c:	57 81       	ldd	r21, Z+7	; 0x07
    148e:	24 81       	ldd	r18, Z+4	; 0x04
    1490:	35 81       	ldd	r19, Z+5	; 0x05
    1492:	42 17       	cp	r20, r18
    1494:	53 07       	cpc	r21, r19
    1496:	44 f4       	brge	.+16     	; 0x14a8 <fputc+0x38>
    1498:	a0 81       	ld	r26, Z
    149a:	b1 81       	ldd	r27, Z+1	; 0x01
    149c:	9d 01       	movw	r18, r26
    149e:	2f 5f       	subi	r18, 0xFF	; 255
    14a0:	3f 4f       	sbci	r19, 0xFF	; 255
    14a2:	31 83       	std	Z+1, r19	; 0x01
    14a4:	20 83       	st	Z, r18
    14a6:	8c 93       	st	X, r24
    14a8:	26 81       	ldd	r18, Z+6	; 0x06
    14aa:	37 81       	ldd	r19, Z+7	; 0x07
    14ac:	2f 5f       	subi	r18, 0xFF	; 255
    14ae:	3f 4f       	sbci	r19, 0xFF	; 255
    14b0:	37 83       	std	Z+7, r19	; 0x07
    14b2:	26 83       	std	Z+6, r18	; 0x06
    14b4:	14 c0       	rjmp	.+40     	; 0x14de <fputc+0x6e>
    14b6:	8b 01       	movw	r16, r22
    14b8:	ec 01       	movw	r28, r24
    14ba:	fb 01       	movw	r30, r22
    14bc:	00 84       	ldd	r0, Z+8	; 0x08
    14be:	f1 85       	ldd	r31, Z+9	; 0x09
    14c0:	e0 2d       	mov	r30, r0
    14c2:	09 95       	icall
    14c4:	89 2b       	or	r24, r25
    14c6:	e1 f6       	brne	.-72     	; 0x1480 <fputc+0x10>
    14c8:	d8 01       	movw	r26, r16
    14ca:	16 96       	adiw	r26, 0x06	; 6
    14cc:	8d 91       	ld	r24, X+
    14ce:	9c 91       	ld	r25, X
    14d0:	17 97       	sbiw	r26, 0x07	; 7
    14d2:	01 96       	adiw	r24, 0x01	; 1
    14d4:	17 96       	adiw	r26, 0x07	; 7
    14d6:	9c 93       	st	X, r25
    14d8:	8e 93       	st	-X, r24
    14da:	16 97       	sbiw	r26, 0x06	; 6
    14dc:	ce 01       	movw	r24, r28
    14de:	df 91       	pop	r29
    14e0:	cf 91       	pop	r28
    14e2:	1f 91       	pop	r17
    14e4:	0f 91       	pop	r16
    14e6:	08 95       	ret

000014e8 <__ultoa_invert>:
    14e8:	fa 01       	movw	r30, r20
    14ea:	aa 27       	eor	r26, r26
    14ec:	28 30       	cpi	r18, 0x08	; 8
    14ee:	51 f1       	breq	.+84     	; 0x1544 <__ultoa_invert+0x5c>
    14f0:	20 31       	cpi	r18, 0x10	; 16
    14f2:	81 f1       	breq	.+96     	; 0x1554 <__ultoa_invert+0x6c>
    14f4:	e8 94       	clt
    14f6:	6f 93       	push	r22
    14f8:	6e 7f       	andi	r22, 0xFE	; 254
    14fa:	6e 5f       	subi	r22, 0xFE	; 254
    14fc:	7f 4f       	sbci	r23, 0xFF	; 255
    14fe:	8f 4f       	sbci	r24, 0xFF	; 255
    1500:	9f 4f       	sbci	r25, 0xFF	; 255
    1502:	af 4f       	sbci	r26, 0xFF	; 255
    1504:	b1 e0       	ldi	r27, 0x01	; 1
    1506:	3e d0       	rcall	.+124    	; 0x1584 <__ultoa_invert+0x9c>
    1508:	b4 e0       	ldi	r27, 0x04	; 4
    150a:	3c d0       	rcall	.+120    	; 0x1584 <__ultoa_invert+0x9c>
    150c:	67 0f       	add	r22, r23
    150e:	78 1f       	adc	r23, r24
    1510:	89 1f       	adc	r24, r25
    1512:	9a 1f       	adc	r25, r26
    1514:	a1 1d       	adc	r26, r1
    1516:	68 0f       	add	r22, r24
    1518:	79 1f       	adc	r23, r25
    151a:	8a 1f       	adc	r24, r26
    151c:	91 1d       	adc	r25, r1
    151e:	a1 1d       	adc	r26, r1
    1520:	6a 0f       	add	r22, r26
    1522:	71 1d       	adc	r23, r1
    1524:	81 1d       	adc	r24, r1
    1526:	91 1d       	adc	r25, r1
    1528:	a1 1d       	adc	r26, r1
    152a:	20 d0       	rcall	.+64     	; 0x156c <__ultoa_invert+0x84>
    152c:	09 f4       	brne	.+2      	; 0x1530 <__ultoa_invert+0x48>
    152e:	68 94       	set
    1530:	3f 91       	pop	r19
    1532:	2a e0       	ldi	r18, 0x0A	; 10
    1534:	26 9f       	mul	r18, r22
    1536:	11 24       	eor	r1, r1
    1538:	30 19       	sub	r19, r0
    153a:	30 5d       	subi	r19, 0xD0	; 208
    153c:	31 93       	st	Z+, r19
    153e:	de f6       	brtc	.-74     	; 0x14f6 <__ultoa_invert+0xe>
    1540:	cf 01       	movw	r24, r30
    1542:	08 95       	ret
    1544:	46 2f       	mov	r20, r22
    1546:	47 70       	andi	r20, 0x07	; 7
    1548:	40 5d       	subi	r20, 0xD0	; 208
    154a:	41 93       	st	Z+, r20
    154c:	b3 e0       	ldi	r27, 0x03	; 3
    154e:	0f d0       	rcall	.+30     	; 0x156e <__ultoa_invert+0x86>
    1550:	c9 f7       	brne	.-14     	; 0x1544 <__ultoa_invert+0x5c>
    1552:	f6 cf       	rjmp	.-20     	; 0x1540 <__ultoa_invert+0x58>
    1554:	46 2f       	mov	r20, r22
    1556:	4f 70       	andi	r20, 0x0F	; 15
    1558:	40 5d       	subi	r20, 0xD0	; 208
    155a:	4a 33       	cpi	r20, 0x3A	; 58
    155c:	18 f0       	brcs	.+6      	; 0x1564 <__ultoa_invert+0x7c>
    155e:	49 5d       	subi	r20, 0xD9	; 217
    1560:	31 fd       	sbrc	r19, 1
    1562:	40 52       	subi	r20, 0x20	; 32
    1564:	41 93       	st	Z+, r20
    1566:	02 d0       	rcall	.+4      	; 0x156c <__ultoa_invert+0x84>
    1568:	a9 f7       	brne	.-22     	; 0x1554 <__ultoa_invert+0x6c>
    156a:	ea cf       	rjmp	.-44     	; 0x1540 <__ultoa_invert+0x58>
    156c:	b4 e0       	ldi	r27, 0x04	; 4
    156e:	a6 95       	lsr	r26
    1570:	97 95       	ror	r25
    1572:	87 95       	ror	r24
    1574:	77 95       	ror	r23
    1576:	67 95       	ror	r22
    1578:	ba 95       	dec	r27
    157a:	c9 f7       	brne	.-14     	; 0x156e <__ultoa_invert+0x86>
    157c:	00 97       	sbiw	r24, 0x00	; 0
    157e:	61 05       	cpc	r22, r1
    1580:	71 05       	cpc	r23, r1
    1582:	08 95       	ret
    1584:	9b 01       	movw	r18, r22
    1586:	ac 01       	movw	r20, r24
    1588:	0a 2e       	mov	r0, r26
    158a:	06 94       	lsr	r0
    158c:	57 95       	ror	r21
    158e:	47 95       	ror	r20
    1590:	37 95       	ror	r19
    1592:	27 95       	ror	r18
    1594:	ba 95       	dec	r27
    1596:	c9 f7       	brne	.-14     	; 0x158a <__ultoa_invert+0xa2>
    1598:	62 0f       	add	r22, r18
    159a:	73 1f       	adc	r23, r19
    159c:	84 1f       	adc	r24, r20
    159e:	95 1f       	adc	r25, r21
    15a0:	a0 1d       	adc	r26, r0
    15a2:	08 95       	ret

000015a4 <__prologue_saves__>:
    15a4:	2f 92       	push	r2
    15a6:	3f 92       	push	r3
    15a8:	4f 92       	push	r4
    15aa:	5f 92       	push	r5
    15ac:	6f 92       	push	r6
    15ae:	7f 92       	push	r7
    15b0:	8f 92       	push	r8
    15b2:	9f 92       	push	r9
    15b4:	af 92       	push	r10
    15b6:	bf 92       	push	r11
    15b8:	cf 92       	push	r12
    15ba:	df 92       	push	r13
    15bc:	ef 92       	push	r14
    15be:	ff 92       	push	r15
    15c0:	0f 93       	push	r16
    15c2:	1f 93       	push	r17
    15c4:	cf 93       	push	r28
    15c6:	df 93       	push	r29
    15c8:	cd b7       	in	r28, 0x3d	; 61
    15ca:	de b7       	in	r29, 0x3e	; 62
    15cc:	ca 1b       	sub	r28, r26
    15ce:	db 0b       	sbc	r29, r27
    15d0:	0f b6       	in	r0, 0x3f	; 63
    15d2:	f8 94       	cli
    15d4:	de bf       	out	0x3e, r29	; 62
    15d6:	0f be       	out	0x3f, r0	; 63
    15d8:	cd bf       	out	0x3d, r28	; 61
    15da:	09 94       	ijmp

000015dc <__epilogue_restores__>:
    15dc:	2a 88       	ldd	r2, Y+18	; 0x12
    15de:	39 88       	ldd	r3, Y+17	; 0x11
    15e0:	48 88       	ldd	r4, Y+16	; 0x10
    15e2:	5f 84       	ldd	r5, Y+15	; 0x0f
    15e4:	6e 84       	ldd	r6, Y+14	; 0x0e
    15e6:	7d 84       	ldd	r7, Y+13	; 0x0d
    15e8:	8c 84       	ldd	r8, Y+12	; 0x0c
    15ea:	9b 84       	ldd	r9, Y+11	; 0x0b
    15ec:	aa 84       	ldd	r10, Y+10	; 0x0a
    15ee:	b9 84       	ldd	r11, Y+9	; 0x09
    15f0:	c8 84       	ldd	r12, Y+8	; 0x08
    15f2:	df 80       	ldd	r13, Y+7	; 0x07
    15f4:	ee 80       	ldd	r14, Y+6	; 0x06
    15f6:	fd 80       	ldd	r15, Y+5	; 0x05
    15f8:	0c 81       	ldd	r16, Y+4	; 0x04
    15fa:	1b 81       	ldd	r17, Y+3	; 0x03
    15fc:	aa 81       	ldd	r26, Y+2	; 0x02
    15fe:	b9 81       	ldd	r27, Y+1	; 0x01
    1600:	ce 0f       	add	r28, r30
    1602:	d1 1d       	adc	r29, r1
    1604:	0f b6       	in	r0, 0x3f	; 63
    1606:	f8 94       	cli
    1608:	de bf       	out	0x3e, r29	; 62
    160a:	0f be       	out	0x3f, r0	; 63
    160c:	cd bf       	out	0x3d, r28	; 61
    160e:	ed 01       	movw	r28, r26
    1610:	08 95       	ret

00001612 <_exit>:
    1612:	f8 94       	cli

00001614 <__stop_program>:
    1614:	ff cf       	rjmp	.-2      	; 0x1614 <__stop_program>
