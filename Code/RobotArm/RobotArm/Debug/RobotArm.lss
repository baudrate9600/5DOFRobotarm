
RobotArm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000074  00800100  0000147a  0000150e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000147a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001a  00800174  00800174  00001582  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001582  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000015b4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001d0  00000000  00000000  000015f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002a03  00000000  00000000  000017c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001014  00000000  00000000  000041c7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e1f  00000000  00000000  000051db  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000544  00000000  00000000  00005ffc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d24  00000000  00000000  00006540  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001153  00000000  00000000  00007264  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000198  00000000  00000000  000083b7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 1d 06 	jmp	0xc3a	; 0xc3a <__vector_11>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 5d 00 	jmp	0xba	; 0xba <__vector_18>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_20>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ea e7       	ldi	r30, 0x7A	; 122
      7c:	f4 e1       	ldi	r31, 0x14	; 20
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a4 37       	cpi	r26, 0x74	; 116
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	21 e0       	ldi	r18, 0x01	; 1
      8c:	a4 e7       	ldi	r26, 0x74	; 116
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	ae 38       	cpi	r26, 0x8E	; 142
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 b6 00 	call	0x16c	; 0x16c <main>
      9e:	0c 94 3b 0a 	jmp	0x1476	; 0x1476 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_20>:
		SERVO_REGISTER &= ~dir_a;
		SERVO_REGISTER |= dir_b;
		speed *= -1;
	}
	*pwm = speed;
}
      a6:	1f 92       	push	r1
      a8:	0f 92       	push	r0
      aa:	0f b6       	in	r0, 0x3f	; 63
      ac:	0f 92       	push	r0
      ae:	11 24       	eor	r1, r1
      b0:	0f 90       	pop	r0
      b2:	0f be       	out	0x3f, r0	; 63
      b4:	0f 90       	pop	r0
      b6:	1f 90       	pop	r1
      b8:	18 95       	reti

000000ba <__vector_18>:
      ba:	1f 92       	push	r1
      bc:	0f 92       	push	r0
      be:	0f b6       	in	r0, 0x3f	; 63
      c0:	0f 92       	push	r0
      c2:	11 24       	eor	r1, r1
      c4:	2f 93       	push	r18
      c6:	3f 93       	push	r19
      c8:	8f 93       	push	r24
      ca:	9f 93       	push	r25
      cc:	ef 93       	push	r30
      ce:	ff 93       	push	r31
      d0:	10 92 88 01 	sts	0x0188, r1	; 0x800188 <motor_status+0x12>
      d4:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <motor_status+0x11>
      d8:	90 91 c6 00 	lds	r25, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
      dc:	80 91 89 01 	lds	r24, 0x0189	; 0x800189 <parse_state>
      e0:	81 30       	cpi	r24, 0x01	; 1
      e2:	81 f0       	breq	.+32     	; 0x104 <__vector_18+0x4a>
      e4:	18 f0       	brcs	.+6      	; 0xec <__vector_18+0x32>
      e6:	82 30       	cpi	r24, 0x02	; 2
      e8:	c9 f0       	breq	.+50     	; 0x11c <__vector_18+0x62>
      ea:	35 c0       	rjmp	.+106    	; 0x156 <__vector_18+0x9c>
      ec:	9d 34       	cpi	r25, 0x4D	; 77
      ee:	21 f4       	brne	.+8      	; 0xf8 <__vector_18+0x3e>
      f0:	81 e0       	ldi	r24, 0x01	; 1
      f2:	80 93 89 01 	sts	0x0189, r24	; 0x800189 <parse_state>
      f6:	2f c0       	rjmp	.+94     	; 0x156 <__vector_18+0x9c>
      f8:	92 35       	cpi	r25, 0x52	; 82
      fa:	69 f5       	brne	.+90     	; 0x156 <__vector_18+0x9c>
      fc:	83 e0       	ldi	r24, 0x03	; 3
      fe:	80 93 89 01 	sts	0x0189, r24	; 0x800189 <parse_state>
     102:	29 c0       	rjmp	.+82     	; 0x156 <__vector_18+0x9c>
     104:	80 ed       	ldi	r24, 0xD0	; 208
     106:	89 0f       	add	r24, r25
     108:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <motor_status>
     10c:	82 e0       	ldi	r24, 0x02	; 2
     10e:	80 93 89 01 	sts	0x0189, r24	; 0x800189 <parse_state>
     112:	10 92 75 01 	sts	0x0175, r1	; 0x800175 <__data_end+0x1>
     116:	10 92 74 01 	sts	0x0174, r1	; 0x800174 <__data_end>
     11a:	1d c0       	rjmp	.+58     	; 0x156 <__vector_18+0x9c>
     11c:	20 91 74 01 	lds	r18, 0x0174	; 0x800174 <__data_end>
     120:	30 91 75 01 	lds	r19, 0x0175	; 0x800175 <__data_end+0x1>
     124:	f9 01       	movw	r30, r18
     126:	ee 0f       	add	r30, r30
     128:	ff 1f       	adc	r31, r31
     12a:	ea 58       	subi	r30, 0x8A	; 138
     12c:	fe 4f       	sbci	r31, 0xFE	; 254
     12e:	89 2f       	mov	r24, r25
     130:	90 e0       	ldi	r25, 0x00	; 0
     132:	92 83       	std	Z+2, r25	; 0x02
     134:	81 83       	std	Z+1, r24	; 0x01
     136:	c9 01       	movw	r24, r18
     138:	01 96       	adiw	r24, 0x01	; 1
     13a:	90 93 75 01 	sts	0x0175, r25	; 0x800175 <__data_end+0x1>
     13e:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <__data_end>
     142:	08 97       	sbiw	r24, 0x08	; 8
     144:	41 f4       	brne	.+16     	; 0x156 <__vector_18+0x9c>
     146:	10 92 89 01 	sts	0x0189, r1	; 0x800189 <parse_state>
     14a:	81 e0       	ldi	r24, 0x01	; 1
     14c:	90 e0       	ldi	r25, 0x00	; 0
     14e:	90 93 88 01 	sts	0x0188, r25	; 0x800188 <motor_status+0x12>
     152:	80 93 87 01 	sts	0x0187, r24	; 0x800187 <motor_status+0x11>
     156:	ff 91       	pop	r31
     158:	ef 91       	pop	r30
     15a:	9f 91       	pop	r25
     15c:	8f 91       	pop	r24
     15e:	3f 91       	pop	r19
     160:	2f 91       	pop	r18
     162:	0f 90       	pop	r0
     164:	0f be       	out	0x3f, r0	; 63
     166:	0f 90       	pop	r0
     168:	1f 90       	pop	r1
     16a:	18 95       	reti

0000016c <main>:

/*some comment*/
int main(void)
{
     16c:	cf 93       	push	r28
     16e:	df 93       	push	r29
     170:	cd b7       	in	r28, 0x3d	; 61
     172:	de b7       	in	r29, 0x3e	; 62
     174:	c5 58       	subi	r28, 0x85	; 133
     176:	d1 09       	sbc	r29, r1
     178:	0f b6       	in	r0, 0x3f	; 63
     17a:	f8 94       	cli
     17c:	de bf       	out	0x3e, r29	; 62
     17e:	0f be       	out	0x3f, r0	; 63
     180:	cd bf       	out	0x3d, r28	; 61

	
	/* initialize component */ 
	sei();
     182:	78 94       	sei
	timer_enable();	
     184:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <_Z12timer_enablev>
	usart_enable(9600);
     188:	80 e8       	ldi	r24, 0x80	; 128
     18a:	95 e2       	ldi	r25, 0x25	; 37
     18c:	0e 94 42 06 	call	0xc84	; 0xc84 <_Z12usart_enablej>
	/* Initialize motors */ 
	
    /* Replace with your application code */
	uint8_t tacho_values;
	uint8_t old_tacho_values;
	DDRD &= ~SERVO_TACHO_0_M;
     190:	55 98       	cbi	0x0a, 5	; 10
	DDRD &= ~SERVO_TACHO_0_P; 
     192:	52 98       	cbi	0x0a, 2	; 10

	/* Initialize servo motors */
	DDRD |= SERVO_0_EN | SERVO_0_DIR_A | SERVO_0_DIR_B;
     194:	8a b1       	in	r24, 0x0a	; 10
     196:	88 6c       	ori	r24, 0xC8	; 200
     198:	8a b9       	out	0x0a, r24	; 10
	TCCR2A |= (1 << COM2B1 ) | (1 << WGM21) | (1 << WGM20); /*Fast PWM */
     19a:	e0 eb       	ldi	r30, 0xB0	; 176
     19c:	f0 e0       	ldi	r31, 0x00	; 0
     19e:	80 81       	ld	r24, Z
     1a0:	83 62       	ori	r24, 0x23	; 35
     1a2:	80 83       	st	Z, r24
	TCCR2B |= (1 << CS20); /*No prescaling */
     1a4:	e1 eb       	ldi	r30, 0xB1	; 177
     1a6:	f0 e0       	ldi	r31, 0x00	; 0
     1a8:	80 81       	ld	r24, Z
     1aa:	81 60       	ori	r24, 0x01	; 1
     1ac:	80 83       	st	Z, r24
	/* PID */
		
	DDRB |= M0_DIR | M0_STEP | M1_STEP | M1_DIR;
     1ae:	84 b1       	in	r24, 0x04	; 4
     1b0:	8f 60       	ori	r24, 0x0F	; 15
     1b2:	84 b9       	out	0x04, r24	; 4
	StepperMotor stepper0(0,0.043182,M0_DIR,M0_STEP);
     1b4:	ee 24       	eor	r14, r14
     1b6:	e3 94       	inc	r14
     1b8:	02 e0       	ldi	r16, 0x02	; 2
     1ba:	2c e9       	ldi	r18, 0x9C	; 156
     1bc:	3f ed       	ldi	r19, 0xDF	; 223
     1be:	40 e3       	ldi	r20, 0x30	; 48
     1c0:	5d e3       	ldi	r21, 0x3D	; 61
     1c2:	60 e0       	ldi	r22, 0x00	; 0
     1c4:	70 e0       	ldi	r23, 0x00	; 0
     1c6:	ce 01       	movw	r24, r28
     1c8:	01 96       	adiw	r24, 0x01	; 1
     1ca:	0e 94 0a 03 	call	0x614	; 0x614 <_ZN12StepperMotorC1Eifhh>
	StepperMotor stepper1(0,0.2571426, M1_DIR,M1_STEP); 
     1ce:	68 94       	set
     1d0:	ee 24       	eor	r14, r14
     1d2:	e2 f8       	bld	r14, 2
     1d4:	08 e0       	ldi	r16, 0x08	; 8
     1d6:	22 e3       	ldi	r18, 0x32	; 50
     1d8:	38 ea       	ldi	r19, 0xA8	; 168
     1da:	43 e8       	ldi	r20, 0x83	; 131
     1dc:	5e e3       	ldi	r21, 0x3E	; 62
     1de:	60 e0       	ldi	r22, 0x00	; 0
     1e0:	70 e0       	ldi	r23, 0x00	; 0
     1e2:	ce 01       	movw	r24, r28
     1e4:	89 96       	adiw	r24, 0x29	; 41
     1e6:	0e 94 0a 03 	call	0x614	; 0x614 <_ZN12StepperMotorC1Eifhh>
	ServoMotor  servo0(&SERVO0_PWM,&SERVO_REGISTER,SERVO_0_DIR_A,SERVO_0_DIR_B);
     1ea:	00 e8       	ldi	r16, 0x80	; 128
     1ec:	20 e4       	ldi	r18, 0x40	; 64
     1ee:	4b e2       	ldi	r20, 0x2B	; 43
     1f0:	50 e0       	ldi	r21, 0x00	; 0
     1f2:	64 eb       	ldi	r22, 0xB4	; 180
     1f4:	70 e0       	ldi	r23, 0x00	; 0
     1f6:	ce 01       	movw	r24, r28
     1f8:	8f 5a       	subi	r24, 0xAF	; 175
     1fa:	9f 4f       	sbci	r25, 0xFF	; 255
     1fc:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <_ZN10ServoMotorC1EPVhS1_hh>
	servo0.target_pos = 0;
     200:	a7 96       	adiw	r28, 0x27	; 39
     202:	1c ae       	std	Y+60, r1	; 0x3c
     204:	1d ae       	std	Y+61, r1	; 0x3d
     206:	1e ae       	std	Y+62, r1	; 0x3e
     208:	1f ae       	std	Y+63, r1	; 0x3f
     20a:	a7 97       	sbiw	r28, 0x27	; 39
	servo0.set_pid(20,1,0);
     20c:	20 e0       	ldi	r18, 0x00	; 0
     20e:	30 e0       	ldi	r19, 0x00	; 0
     210:	41 e0       	ldi	r20, 0x01	; 1
     212:	50 e0       	ldi	r21, 0x00	; 0
     214:	64 e1       	ldi	r22, 0x14	; 20
     216:	70 e0       	ldi	r23, 0x00	; 0
     218:	ce 01       	movw	r24, r28
     21a:	8f 5a       	subi	r24, 0xAF	; 175
     21c:	9f 4f       	sbci	r25, 0xFF	; 255
     21e:	0e 94 ee 01 	call	0x3dc	; 0x3dc <_ZN10ServoMotor7set_pidEjjj>
	while (1) 
    {
		
		/*character FSM */ 
		char buff[50]; 
		if(motor_status.done == 1){
     222:	06 e7       	ldi	r16, 0x76	; 118
     224:	11 e0       	ldi	r17, 0x01	; 1
	//		sprintf(buff,"Motor %d, angle =  %d\n",motor_status.motor_select,motor_status.angle);
	//		usart_send(buff);
			motor_status.done = 0; 
			uint16_t duration = (motor_status.data[0]-48)*10 + (motor_status.data[1]-48);
			uint16_t acceleration = (motor_status.data[2]-48)*10 + (motor_status.data[3]-48);
			int16_t angle = (motor_status.data[5]-48)*100 + (motor_status.data[6]-48)*10 + (motor_status.data[7]-48);
     226:	0f 2e       	mov	r0, r31
     228:	f4 e6       	ldi	r31, 0x64	; 100
     22a:	ff 2e       	mov	r15, r31
     22c:	f0 2d       	mov	r31, r0
					break;
				case 1 :
					stepper0.target_pos = angle; 
					stepper0.duration = duration;
					stepper0.acceleration = acceleration;
					stepper0.start = 1; 
     22e:	ee 24       	eor	r14, r14
     230:	e3 94       	inc	r14
	while (1) 
    {
		
		/*character FSM */ 
		char buff[50]; 
		if(motor_status.done == 1){
     232:	d8 01       	movw	r26, r16
     234:	51 96       	adiw	r26, 0x11	; 17
     236:	8d 91       	ld	r24, X+
     238:	9c 91       	ld	r25, X
     23a:	52 97       	sbiw	r26, 0x12	; 18
     23c:	01 97       	sbiw	r24, 0x01	; 1
     23e:	09 f0       	breq	.+2      	; 0x242 <main+0xd6>
     240:	8c c0       	rjmp	.+280    	; 0x35a <main+0x1ee>
	//		sprintf(buff,"Motor %d, angle =  %d\n",motor_status.motor_select,motor_status.angle);
	//		usart_send(buff);
			motor_status.done = 0; 
     242:	52 96       	adiw	r26, 0x12	; 18
     244:	1c 92       	st	X, r1
     246:	1e 92       	st	-X, r1
     248:	51 97       	sbiw	r26, 0x11	; 17
			uint16_t duration = (motor_status.data[0]-48)*10 + (motor_status.data[1]-48);
     24a:	11 96       	adiw	r26, 0x01	; 1
     24c:	8d 91       	ld	r24, X+
     24e:	9c 91       	ld	r25, X
     250:	12 97       	sbiw	r26, 0x02	; 2
     252:	c0 97       	sbiw	r24, 0x30	; 48
     254:	ac 01       	movw	r20, r24
     256:	44 0f       	add	r20, r20
     258:	55 1f       	adc	r21, r21
     25a:	88 0f       	add	r24, r24
     25c:	99 1f       	adc	r25, r25
     25e:	88 0f       	add	r24, r24
     260:	99 1f       	adc	r25, r25
     262:	88 0f       	add	r24, r24
     264:	99 1f       	adc	r25, r25
     266:	84 0f       	add	r24, r20
     268:	95 1f       	adc	r25, r21
     26a:	13 96       	adiw	r26, 0x03	; 3
     26c:	4d 91       	ld	r20, X+
     26e:	5c 91       	ld	r21, X
     270:	14 97       	sbiw	r26, 0x04	; 4
     272:	40 53       	subi	r20, 0x30	; 48
     274:	51 09       	sbc	r21, r1
     276:	48 0f       	add	r20, r24
     278:	59 1f       	adc	r21, r25
			uint16_t acceleration = (motor_status.data[2]-48)*10 + (motor_status.data[3]-48);
     27a:	15 96       	adiw	r26, 0x05	; 5
     27c:	8d 91       	ld	r24, X+
     27e:	9c 91       	ld	r25, X
     280:	16 97       	sbiw	r26, 0x06	; 6
     282:	c0 97       	sbiw	r24, 0x30	; 48
     284:	9c 01       	movw	r18, r24
     286:	22 0f       	add	r18, r18
     288:	33 1f       	adc	r19, r19
     28a:	88 0f       	add	r24, r24
     28c:	99 1f       	adc	r25, r25
     28e:	88 0f       	add	r24, r24
     290:	99 1f       	adc	r25, r25
     292:	88 0f       	add	r24, r24
     294:	99 1f       	adc	r25, r25
     296:	82 0f       	add	r24, r18
     298:	93 1f       	adc	r25, r19
     29a:	17 96       	adiw	r26, 0x07	; 7
     29c:	6d 91       	ld	r22, X+
     29e:	7c 91       	ld	r23, X
     2a0:	18 97       	sbiw	r26, 0x08	; 8
     2a2:	60 53       	subi	r22, 0x30	; 48
     2a4:	71 09       	sbc	r23, r1
     2a6:	68 0f       	add	r22, r24
     2a8:	79 1f       	adc	r23, r25
			int16_t angle = (motor_status.data[5]-48)*100 + (motor_status.data[6]-48)*10 + (motor_status.data[7]-48);
     2aa:	1b 96       	adiw	r26, 0x0b	; 11
     2ac:	8d 91       	ld	r24, X+
     2ae:	9c 91       	ld	r25, X
     2b0:	1c 97       	sbiw	r26, 0x0c	; 12
     2b2:	c0 97       	sbiw	r24, 0x30	; 48
     2b4:	f8 9e       	mul	r15, r24
     2b6:	f0 01       	movw	r30, r0
     2b8:	f9 9e       	mul	r15, r25
     2ba:	f0 0d       	add	r31, r0
     2bc:	11 24       	eor	r1, r1
     2be:	1d 96       	adiw	r26, 0x0d	; 13
     2c0:	2d 91       	ld	r18, X+
     2c2:	3c 91       	ld	r19, X
     2c4:	1e 97       	sbiw	r26, 0x0e	; 14
     2c6:	c9 01       	movw	r24, r18
     2c8:	c0 97       	sbiw	r24, 0x30	; 48
     2ca:	dc 01       	movw	r26, r24
     2cc:	aa 0f       	add	r26, r26
     2ce:	bb 1f       	adc	r27, r27
     2d0:	9c 01       	movw	r18, r24
     2d2:	22 0f       	add	r18, r18
     2d4:	33 1f       	adc	r19, r19
     2d6:	22 0f       	add	r18, r18
     2d8:	33 1f       	adc	r19, r19
     2da:	22 0f       	add	r18, r18
     2dc:	33 1f       	adc	r19, r19
     2de:	cd 01       	movw	r24, r26
     2e0:	82 0f       	add	r24, r18
     2e2:	93 1f       	adc	r25, r19
     2e4:	8e 0f       	add	r24, r30
     2e6:	9f 1f       	adc	r25, r31
     2e8:	f8 01       	movw	r30, r16
     2ea:	c7 84       	ldd	r12, Z+15	; 0x0f
     2ec:	d0 88       	ldd	r13, Z+16	; 0x10
     2ee:	f0 e3       	ldi	r31, 0x30	; 48
     2f0:	cf 1a       	sub	r12, r31
     2f2:	d1 08       	sbc	r13, r1
     2f4:	c8 0e       	add	r12, r24
     2f6:	d9 1e       	adc	r13, r25

			if(motor_status.data[4] == '-'){
     2f8:	d8 01       	movw	r26, r16
     2fa:	19 96       	adiw	r26, 0x09	; 9
     2fc:	8d 91       	ld	r24, X+
     2fe:	9c 91       	ld	r25, X
     300:	1a 97       	sbiw	r26, 0x0a	; 10
     302:	8d 97       	sbiw	r24, 0x2d	; 45
     304:	19 f4       	brne	.+6      	; 0x30c <main+0x1a0>
				angle = angle * -1;
     306:	d1 94       	neg	r13
     308:	c1 94       	neg	r12
     30a:	d1 08       	sbc	r13, r1
			}
			switch(motor_status.motor_select){
     30c:	f8 01       	movw	r30, r16
     30e:	80 81       	ld	r24, Z
     310:	81 30       	cpi	r24, 0x01	; 1
     312:	a1 f0       	breq	.+40     	; 0x33c <main+0x1d0>
     314:	18 f0       	brcs	.+6      	; 0x31c <main+0x1b0>
     316:	82 30       	cpi	r24, 0x02	; 2
     318:	c9 f0       	breq	.+50     	; 0x34c <main+0x1e0>
     31a:	1f c0       	rjmp	.+62     	; 0x35a <main+0x1ee>
				case 0 : 
					//usart_send("hello");
					servo0.reset_summation();
     31c:	ce 01       	movw	r24, r28
     31e:	8f 5a       	subi	r24, 0xAF	; 175
     320:	9f 4f       	sbci	r25, 0xFF	; 255
     322:	0e 94 04 03 	call	0x608	; 0x608 <_ZN10ServoMotor15reset_summationEv>
					servo0.target_pos = angle; 
     326:	c6 01       	movw	r24, r12
     328:	dd 0c       	add	r13, r13
     32a:	aa 0b       	sbc	r26, r26
     32c:	bb 0b       	sbc	r27, r27
     32e:	a7 96       	adiw	r28, 0x27	; 39
     330:	8c af       	std	Y+60, r24	; 0x3c
     332:	9d af       	std	Y+61, r25	; 0x3d
     334:	ae af       	std	Y+62, r26	; 0x3e
     336:	bf af       	std	Y+63, r27	; 0x3f
     338:	a7 97       	sbiw	r28, 0x27	; 39
					break;
     33a:	0f c0       	rjmp	.+30     	; 0x35a <main+0x1ee>
				case 1 :
					stepper0.target_pos = angle; 
     33c:	dd 82       	std	Y+5, r13	; 0x05
     33e:	cc 82       	std	Y+4, r12	; 0x04
					stepper0.duration = duration;
     340:	5f 87       	std	Y+15, r21	; 0x0f
     342:	4e 87       	std	Y+14, r20	; 0x0e
					stepper0.acceleration = acceleration;
     344:	7d 87       	std	Y+13, r23	; 0x0d
     346:	6c 87       	std	Y+12, r22	; 0x0c
					stepper0.start = 1; 
     348:	e9 82       	std	Y+1, r14	; 0x01
					break; 
     34a:	07 c0       	rjmp	.+14     	; 0x35a <main+0x1ee>
				case 2 : 
					stepper1.target_pos = angle; 
     34c:	dd a6       	std	Y+45, r13	; 0x2d
     34e:	cc a6       	std	Y+44, r12	; 0x2c
					stepper1.duration = duration;
     350:	5f ab       	std	Y+55, r21	; 0x37
     352:	4e ab       	std	Y+54, r20	; 0x36
					stepper1.acceleration = acceleration;
     354:	7d ab       	std	Y+53, r23	; 0x35
     356:	6c ab       	std	Y+52, r22	; 0x34
					stepper1.start = 1;
     358:	e9 a6       	std	Y+41, r14	; 0x29
			
		}

			//usart_sendln(temp);	
		
		stepper0.rotate(timer_10k());
     35a:	0e 94 14 06 	call	0xc28	; 0xc28 <_Z9timer_10kv>
     35e:	ab 01       	movw	r20, r22
     360:	bc 01       	movw	r22, r24
     362:	ce 01       	movw	r24, r28
     364:	01 96       	adiw	r24, 0x01	; 1
     366:	0e 94 1a 04 	call	0x834	; 0x834 <_ZN12StepperMotor6rotateEm>
		stepper1.rotate(timer_10k());
     36a:	0e 94 14 06 	call	0xc28	; 0xc28 <_Z9timer_10kv>
     36e:	ab 01       	movw	r20, r22
     370:	bc 01       	movw	r22, r24
     372:	ce 01       	movw	r24, r28
     374:	89 96       	adiw	r24, 0x29	; 41
     376:	0e 94 1a 04 	call	0x834	; 0x834 <_ZN12StepperMotor6rotateEm>
		servo0.rotate(timer_10k());
     37a:	0e 94 14 06 	call	0xc28	; 0xc28 <_Z9timer_10kv>
     37e:	ab 01       	movw	r20, r22
     380:	bc 01       	movw	r22, r24
     382:	ce 01       	movw	r24, r28
     384:	8f 5a       	subi	r24, 0xAF	; 175
     386:	9f 4f       	sbci	r25, 0xFF	; 255
     388:	0e 94 90 02 	call	0x520	; 0x520 <_ZN10ServoMotor6rotateEm>
	
		tacho_values= PIND; 
     38c:	89 b1       	in	r24, 0x09	; 9
		servo0.tacho(PIND & SERVO_TACHO_0_P, PIND & SERVO_TACHO_0_M);
     38e:	49 b1       	in	r20, 0x09	; 9
     390:	69 b1       	in	r22, 0x09	; 9
     392:	40 72       	andi	r20, 0x20	; 32
     394:	64 70       	andi	r22, 0x04	; 4
     396:	ce 01       	movw	r24, r28
     398:	8f 5a       	subi	r24, 0xAF	; 175
     39a:	9f 4f       	sbci	r25, 0xFF	; 255
     39c:	0e 94 de 02 	call	0x5bc	; 0x5bc <_ZN10ServoMotor5tachoEhh>
		/*Check if any bits have toggled */
		if(tacho_values ^ old_tacho_values){
			old_tacho_values = tacho_values;
			
		}
		if(timer_10k()-temp > 100){
     3a0:	0e 94 14 06 	call	0xc28	; 0xc28 <_Z9timer_10kv>
	StepperMotor stepper1(0,0.2571426, M1_DIR,M1_STEP); 
	ServoMotor  servo0(&SERVO0_PWM,&SERVO_REGISTER,SERVO_0_DIR_A,SERVO_0_DIR_B);
	servo0.target_pos = 0;
	servo0.set_pid(20,1,0);
	uint32_t temp = 0 ;
	while (1) 
     3a4:	46 cf       	rjmp	.-372    	; 0x232 <main+0xc6>

000003a6 <_ZN10ServoMotorC1EPVhS1_hh>:

}

void ServoMotor::reset(){
	absolute_position = 0; 
	target_pos = 0; 
     3a6:	0f 93       	push	r16
     3a8:	fc 01       	movw	r30, r24
     3aa:	12 aa       	std	Z+50, r1	; 0x32
     3ac:	12 8a       	std	Z+18, r1	; 0x12
     3ae:	13 8a       	std	Z+19, r1	; 0x13
     3b0:	14 8a       	std	Z+20, r1	; 0x14
     3b2:	15 8a       	std	Z+21, r1	; 0x15
     3b4:	16 8e       	std	Z+30, r1	; 0x1e
     3b6:	17 8e       	std	Z+31, r1	; 0x1f
     3b8:	10 a2       	std	Z+32, r1	; 0x20
     3ba:	11 a2       	std	Z+33, r1	; 0x21
     3bc:	16 a2       	std	Z+38, r1	; 0x26
     3be:	17 a2       	std	Z+39, r1	; 0x27
     3c0:	10 a6       	std	Z+40, r1	; 0x28
     3c2:	11 a6       	std	Z+41, r1	; 0x29
     3c4:	23 ab       	std	Z+51, r18	; 0x33
     3c6:	04 ab       	std	Z+52, r16	; 0x34
     3c8:	57 a7       	std	Z+47, r21	; 0x2f
     3ca:	46 a7       	std	Z+46, r20	; 0x2e
     3cc:	71 ab       	std	Z+49, r23	; 0x31
     3ce:	60 ab       	std	Z+48, r22	; 0x30
     3d0:	16 82       	std	Z+6, r1	; 0x06
     3d2:	17 82       	std	Z+7, r1	; 0x07
     3d4:	10 86       	std	Z+8, r1	; 0x08
     3d6:	11 86       	std	Z+9, r1	; 0x09
     3d8:	0f 91       	pop	r16
     3da:	08 95       	ret

000003dc <_ZN10ServoMotor7set_pidEjjj>:
     3dc:	cf 93       	push	r28
     3de:	df 93       	push	r29
     3e0:	fc 01       	movw	r30, r24
     3e2:	ea 01       	movw	r28, r20
     3e4:	71 83       	std	Z+1, r23	; 0x01
     3e6:	60 83       	st	Z, r22
     3e8:	53 83       	std	Z+3, r21	; 0x03
     3ea:	42 83       	std	Z+2, r20	; 0x02
     3ec:	35 83       	std	Z+5, r19	; 0x05
     3ee:	24 83       	std	Z+4, r18	; 0x04
     3f0:	6f 5f       	subi	r22, 0xFF	; 255
     3f2:	7f 4f       	sbci	r23, 0xFF	; 255
     3f4:	84 e6       	ldi	r24, 0x64	; 100
     3f6:	90 e0       	ldi	r25, 0x00	; 0
     3f8:	0e 94 80 09 	call	0x1300	; 0x1300 <__udivmodhi4>
     3fc:	cb 01       	movw	r24, r22
     3fe:	a0 e0       	ldi	r26, 0x00	; 0
     400:	b0 e0       	ldi	r27, 0x00	; 0
     402:	86 87       	std	Z+14, r24	; 0x0e
     404:	97 87       	std	Z+15, r25	; 0x0f
     406:	a0 8b       	std	Z+16, r26	; 0x10
     408:	b1 8b       	std	Z+17, r27	; 0x11
     40a:	be 01       	movw	r22, r28
     40c:	6f 5f       	subi	r22, 0xFF	; 255
     40e:	7f 4f       	sbci	r23, 0xFF	; 255
     410:	85 e0       	ldi	r24, 0x05	; 5
     412:	90 e0       	ldi	r25, 0x00	; 0
     414:	0e 94 80 09 	call	0x1300	; 0x1300 <__udivmodhi4>
     418:	cb 01       	movw	r24, r22
     41a:	a0 e0       	ldi	r26, 0x00	; 0
     41c:	b0 e0       	ldi	r27, 0x00	; 0
     41e:	82 87       	std	Z+10, r24	; 0x0a
     420:	93 87       	std	Z+11, r25	; 0x0b
     422:	a4 87       	std	Z+12, r26	; 0x0c
     424:	b5 87       	std	Z+13, r27	; 0x0d
     426:	df 91       	pop	r29
     428:	cf 91       	pop	r28
     42a:	08 95       	ret

0000042c <_ZN10ServoMotor3pidEv>:
     42c:	cf 92       	push	r12
     42e:	df 92       	push	r13
     430:	ef 92       	push	r14
     432:	ff 92       	push	r15
     434:	0f 93       	push	r16
     436:	1f 93       	push	r17
     438:	cf 93       	push	r28
     43a:	df 93       	push	r29
     43c:	ec 01       	movw	r28, r24
     43e:	6a 89       	ldd	r22, Y+18	; 0x12
     440:	7b 89       	ldd	r23, Y+19	; 0x13
     442:	8c 89       	ldd	r24, Y+20	; 0x14
     444:	9d 89       	ldd	r25, Y+21	; 0x15
     446:	0e 94 2c 08 	call	0x1058	; 0x1058 <__floatsisf>
     44a:	6b 01       	movw	r12, r22
     44c:	7c 01       	movw	r14, r24
     44e:	6e 89       	ldd	r22, Y+22	; 0x16
     450:	7f 89       	ldd	r23, Y+23	; 0x17
     452:	88 8d       	ldd	r24, Y+24	; 0x18
     454:	99 8d       	ldd	r25, Y+25	; 0x19
     456:	0e 94 2c 08 	call	0x1058	; 0x1058 <__floatsisf>
     45a:	20 e0       	ldi	r18, 0x00	; 0
     45c:	30 e0       	ldi	r19, 0x00	; 0
     45e:	40 ea       	ldi	r20, 0xA0	; 160
     460:	50 e4       	ldi	r21, 0x40	; 64
     462:	0e 94 82 07 	call	0xf04	; 0xf04 <__divsf3>
     466:	9b 01       	movw	r18, r22
     468:	ac 01       	movw	r20, r24
     46a:	c7 01       	movw	r24, r14
     46c:	b6 01       	movw	r22, r12
     46e:	0e 94 15 07 	call	0xe2a	; 0xe2a <__subsf3>
     472:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <__fixsfsi>
     476:	6a a3       	std	Y+34, r22	; 0x22
     478:	7b a3       	std	Y+35, r23	; 0x23
     47a:	8c a3       	std	Y+36, r24	; 0x24
     47c:	9d a3       	std	Y+37, r25	; 0x25
     47e:	0e 85       	ldd	r16, Y+14	; 0x0e
     480:	1f 85       	ldd	r17, Y+15	; 0x0f
     482:	28 89       	ldd	r18, Y+16	; 0x10
     484:	39 89       	ldd	r19, Y+17	; 0x11
     486:	06 17       	cp	r16, r22
     488:	17 07       	cpc	r17, r23
     48a:	28 07       	cpc	r18, r24
     48c:	39 07       	cpc	r19, r25
     48e:	b4 f0       	brlt	.+44     	; 0x4bc <_ZN10ServoMotor3pidEv+0x90>
     490:	30 95       	com	r19
     492:	20 95       	com	r18
     494:	10 95       	com	r17
     496:	01 95       	neg	r16
     498:	1f 4f       	sbci	r17, 0xFF	; 255
     49a:	2f 4f       	sbci	r18, 0xFF	; 255
     49c:	3f 4f       	sbci	r19, 0xFF	; 255
     49e:	60 17       	cp	r22, r16
     4a0:	71 07       	cpc	r23, r17
     4a2:	82 07       	cpc	r24, r18
     4a4:	93 07       	cpc	r25, r19
     4a6:	6c f0       	brlt	.+26     	; 0x4c2 <_ZN10ServoMotor3pidEv+0x96>
     4a8:	28 81       	ld	r18, Y
     4aa:	39 81       	ldd	r19, Y+1	; 0x01
     4ac:	26 9f       	mul	r18, r22
     4ae:	f0 01       	movw	r30, r0
     4b0:	27 9f       	mul	r18, r23
     4b2:	f0 0d       	add	r31, r0
     4b4:	36 9f       	mul	r19, r22
     4b6:	f0 0d       	add	r31, r0
     4b8:	11 24       	eor	r1, r1
     4ba:	05 c0       	rjmp	.+10     	; 0x4c6 <_ZN10ServoMotor3pidEv+0x9a>
     4bc:	e4 e6       	ldi	r30, 0x64	; 100
     4be:	f0 e0       	ldi	r31, 0x00	; 0
     4c0:	02 c0       	rjmp	.+4      	; 0x4c6 <_ZN10ServoMotor3pidEv+0x9a>
     4c2:	ec e9       	ldi	r30, 0x9C	; 156
     4c4:	ff ef       	ldi	r31, 0xFF	; 255
     4c6:	0e 81       	ldd	r16, Y+6	; 0x06
     4c8:	1f 81       	ldd	r17, Y+7	; 0x07
     4ca:	28 85       	ldd	r18, Y+8	; 0x08
     4cc:	39 85       	ldd	r19, Y+9	; 0x09
     4ce:	dc 01       	movw	r26, r24
     4d0:	cb 01       	movw	r24, r22
     4d2:	80 0f       	add	r24, r16
     4d4:	91 1f       	adc	r25, r17
     4d6:	a2 1f       	adc	r26, r18
     4d8:	b3 1f       	adc	r27, r19
     4da:	0a 85       	ldd	r16, Y+10	; 0x0a
     4dc:	1b 85       	ldd	r17, Y+11	; 0x0b
     4de:	2c 85       	ldd	r18, Y+12	; 0x0c
     4e0:	3d 85       	ldd	r19, Y+13	; 0x0d
     4e2:	08 17       	cp	r16, r24
     4e4:	19 07       	cpc	r17, r25
     4e6:	2a 07       	cpc	r18, r26
     4e8:	3b 07       	cpc	r19, r27
     4ea:	84 f0       	brlt	.+32     	; 0x50c <_ZN10ServoMotor3pidEv+0xe0>
     4ec:	30 95       	com	r19
     4ee:	20 95       	com	r18
     4f0:	10 95       	com	r17
     4f2:	01 95       	neg	r16
     4f4:	1f 4f       	sbci	r17, 0xFF	; 255
     4f6:	2f 4f       	sbci	r18, 0xFF	; 255
     4f8:	3f 4f       	sbci	r19, 0xFF	; 255
     4fa:	80 17       	cp	r24, r16
     4fc:	91 07       	cpc	r25, r17
     4fe:	a2 07       	cpc	r26, r18
     500:	b3 07       	cpc	r27, r19
     502:	24 f0       	brlt	.+8      	; 0x50c <_ZN10ServoMotor3pidEv+0xe0>
     504:	8e 83       	std	Y+6, r24	; 0x06
     506:	9f 83       	std	Y+7, r25	; 0x07
     508:	a8 87       	std	Y+8, r26	; 0x08
     50a:	b9 87       	std	Y+9, r27	; 0x09
     50c:	cf 01       	movw	r24, r30
     50e:	df 91       	pop	r29
     510:	cf 91       	pop	r28
     512:	1f 91       	pop	r17
     514:	0f 91       	pop	r16
     516:	ff 90       	pop	r15
     518:	ef 90       	pop	r14
     51a:	df 90       	pop	r13
     51c:	cf 90       	pop	r12
     51e:	08 95       	ret

00000520 <_ZN10ServoMotor6rotateEm>:
     520:	cf 92       	push	r12
     522:	df 92       	push	r13
     524:	ef 92       	push	r14
     526:	ff 92       	push	r15
     528:	0f 93       	push	r16
     52a:	1f 93       	push	r17
     52c:	cf 93       	push	r28
     52e:	df 93       	push	r29
     530:	fc 01       	movw	r30, r24
     532:	02 a5       	ldd	r16, Z+42	; 0x2a
     534:	13 a5       	ldd	r17, Z+43	; 0x2b
     536:	24 a5       	ldd	r18, Z+44	; 0x2c
     538:	35 a5       	ldd	r19, Z+45	; 0x2d
     53a:	6a 01       	movw	r12, r20
     53c:	7b 01       	movw	r14, r22
     53e:	c0 1a       	sub	r12, r16
     540:	d1 0a       	sbc	r13, r17
     542:	e2 0a       	sbc	r14, r18
     544:	f3 0a       	sbc	r15, r19
     546:	97 01       	movw	r18, r14
     548:	86 01       	movw	r16, r12
     54a:	0b 30       	cpi	r16, 0x0B	; 11
     54c:	11 05       	cpc	r17, r1
     54e:	21 05       	cpc	r18, r1
     550:	31 05       	cpc	r19, r1
     552:	58 f1       	brcs	.+86     	; 0x5aa <_ZN10ServoMotor6rotateEm+0x8a>
     554:	ec 01       	movw	r28, r24
     556:	42 a7       	std	Z+42, r20	; 0x2a
     558:	53 a7       	std	Z+43, r21	; 0x2b
     55a:	64 a7       	std	Z+44, r22	; 0x2c
     55c:	75 a7       	std	Z+45, r23	; 0x2d
     55e:	0e 94 16 02 	call	0x42c	; 0x42c <_ZN10ServoMotor3pidEv>
     562:	18 16       	cp	r1, r24
     564:	19 06       	cpc	r1, r25
     566:	74 f4       	brge	.+28     	; 0x584 <_ZN10ServoMotor6rotateEm+0x64>
     568:	ee a5       	ldd	r30, Y+46	; 0x2e
     56a:	ff a5       	ldd	r31, Y+47	; 0x2f
     56c:	30 81       	ld	r19, Z
     56e:	2b a9       	ldd	r18, Y+51	; 0x33
     570:	23 2b       	or	r18, r19
     572:	20 83       	st	Z, r18
     574:	ee a5       	ldd	r30, Y+46	; 0x2e
     576:	ff a5       	ldd	r31, Y+47	; 0x2f
     578:	30 81       	ld	r19, Z
     57a:	2c a9       	ldd	r18, Y+52	; 0x34
     57c:	20 95       	com	r18
     57e:	23 23       	and	r18, r19
     580:	20 83       	st	Z, r18
     582:	10 c0       	rjmp	.+32     	; 0x5a4 <_ZN10ServoMotor6rotateEm+0x84>
     584:	ee a5       	ldd	r30, Y+46	; 0x2e
     586:	ff a5       	ldd	r31, Y+47	; 0x2f
     588:	30 81       	ld	r19, Z
     58a:	2b a9       	ldd	r18, Y+51	; 0x33
     58c:	20 95       	com	r18
     58e:	23 23       	and	r18, r19
     590:	20 83       	st	Z, r18
     592:	ee a5       	ldd	r30, Y+46	; 0x2e
     594:	ff a5       	ldd	r31, Y+47	; 0x2f
     596:	30 81       	ld	r19, Z
     598:	2c a9       	ldd	r18, Y+52	; 0x34
     59a:	23 2b       	or	r18, r19
     59c:	20 83       	st	Z, r18
     59e:	91 95       	neg	r25
     5a0:	81 95       	neg	r24
     5a2:	91 09       	sbc	r25, r1
     5a4:	e8 a9       	ldd	r30, Y+48	; 0x30
     5a6:	f9 a9       	ldd	r31, Y+49	; 0x31
     5a8:	80 83       	st	Z, r24
     5aa:	df 91       	pop	r29
     5ac:	cf 91       	pop	r28
     5ae:	1f 91       	pop	r17
     5b0:	0f 91       	pop	r16
     5b2:	ff 90       	pop	r15
     5b4:	ef 90       	pop	r14
     5b6:	df 90       	pop	r13
     5b8:	cf 90       	pop	r12
     5ba:	08 95       	ret

000005bc <_ZN10ServoMotor5tachoEhh>:
     5bc:	fc 01       	movw	r30, r24
     5be:	82 a9       	ldd	r24, Z+50	; 0x32
     5c0:	81 11       	cpse	r24, r1
     5c2:	1e c0       	rjmp	.+60     	; 0x600 <_ZN10ServoMotor5tachoEhh+0x44>
     5c4:	66 23       	and	r22, r22
     5c6:	f9 f0       	breq	.+62     	; 0x606 <_ZN10ServoMotor5tachoEhh+0x4a>
     5c8:	44 23       	and	r20, r20
     5ca:	61 f0       	breq	.+24     	; 0x5e4 <_ZN10ServoMotor5tachoEhh+0x28>
     5cc:	86 89       	ldd	r24, Z+22	; 0x16
     5ce:	97 89       	ldd	r25, Z+23	; 0x17
     5d0:	a0 8d       	ldd	r26, Z+24	; 0x18
     5d2:	b1 8d       	ldd	r27, Z+25	; 0x19
     5d4:	01 96       	adiw	r24, 0x01	; 1
     5d6:	a1 1d       	adc	r26, r1
     5d8:	b1 1d       	adc	r27, r1
     5da:	86 8b       	std	Z+22, r24	; 0x16
     5dc:	97 8b       	std	Z+23, r25	; 0x17
     5de:	a0 8f       	std	Z+24, r26	; 0x18
     5e0:	b1 8f       	std	Z+25, r27	; 0x19
     5e2:	0b c0       	rjmp	.+22     	; 0x5fa <_ZN10ServoMotor5tachoEhh+0x3e>
     5e4:	86 89       	ldd	r24, Z+22	; 0x16
     5e6:	97 89       	ldd	r25, Z+23	; 0x17
     5e8:	a0 8d       	ldd	r26, Z+24	; 0x18
     5ea:	b1 8d       	ldd	r27, Z+25	; 0x19
     5ec:	01 97       	sbiw	r24, 0x01	; 1
     5ee:	a1 09       	sbc	r26, r1
     5f0:	b1 09       	sbc	r27, r1
     5f2:	86 8b       	std	Z+22, r24	; 0x16
     5f4:	97 8b       	std	Z+23, r25	; 0x17
     5f6:	a0 8f       	std	Z+24, r26	; 0x18
     5f8:	b1 8f       	std	Z+25, r27	; 0x19
     5fa:	81 e0       	ldi	r24, 0x01	; 1
     5fc:	82 ab       	std	Z+50, r24	; 0x32
     5fe:	08 95       	ret
     600:	61 11       	cpse	r22, r1
     602:	01 c0       	rjmp	.+2      	; 0x606 <_ZN10ServoMotor5tachoEhh+0x4a>
     604:	12 aa       	std	Z+50, r1	; 0x32
     606:	08 95       	ret

00000608 <_ZN10ServoMotor15reset_summationEv>:
}

void ServoMotor::reset_summation(){
	summation = 0; 
     608:	fc 01       	movw	r30, r24
     60a:	16 82       	std	Z+6, r1	; 0x06
     60c:	17 82       	std	Z+7, r1	; 0x07
     60e:	10 86       	std	Z+8, r1	; 0x08
     610:	11 86       	std	Z+9, r1	; 0x09
     612:	08 95       	ret

00000614 <_ZN12StepperMotorC1Eifhh>:

#define DEBUG_
#define S_SCALER 1000UL

/* Iniatialize the stepper motor */
StepperMotor::StepperMotor(int16_t current_pos, float step_to_angle, uint8_t dir_pin, uint8_t step_pin)
     614:	ef 92       	push	r14
     616:	0f 93       	push	r16
     618:	cf 93       	push	r28
     61a:	df 93       	push	r29
     61c:	ec 01       	movw	r28, r24
{
	state = S_WAIT; 
     61e:	1f a2       	std	Y+39, r1	; 0x27
	this->current_pos	= current_pos;
     620:	7a 83       	std	Y+2, r23	; 0x02
     622:	69 83       	std	Y+1, r22	; 0x01
	/*this value should ideally be an integer */
	this->step_to_angle	= 1.0f/step_to_angle; 
     624:	60 e0       	ldi	r22, 0x00	; 0
     626:	70 e0       	ldi	r23, 0x00	; 0
     628:	80 e8       	ldi	r24, 0x80	; 128
     62a:	9f e3       	ldi	r25, 0x3F	; 63
     62c:	0e 94 82 07 	call	0xf04	; 0xf04 <__divsf3>
     630:	6b a3       	std	Y+35, r22	; 0x23
     632:	7c a3       	std	Y+36, r23	; 0x24
     634:	8d a3       	std	Y+37, r24	; 0x25
     636:	9e a3       	std	Y+38, r25	; 0x26
	this->dir_pin		= dir_pin;
     638:	09 a3       	std	Y+33, r16	; 0x21
	this->step_pin		= step_pin;		
     63a:	ea a2       	std	Y+34, r14	; 0x22
	stepper_time = 0;
     63c:	1d 8e       	std	Y+29, r1	; 0x1d
     63e:	1e 8e       	std	Y+30, r1	; 0x1e
     640:	1f 8e       	std	Y+31, r1	; 0x1f
     642:	18 a2       	std	Y+32, r1	; 0x20
	long_pulse_width = 0;
     644:	1f 86       	std	Y+15, r1	; 0x0f
     646:	18 8a       	std	Y+16, r1	; 0x10
     648:	19 8a       	std	Y+17, r1	; 0x11
     64a:	1a 8a       	std	Y+18, r1	; 0x12
} 
     64c:	df 91       	pop	r29
     64e:	cf 91       	pop	r28
     650:	0f 91       	pop	r16
     652:	ef 90       	pop	r14
     654:	08 95       	ret

00000656 <_ZN12StepperMotor3fsmEm>:
		fsm(current_time); 
	}

}
stepper_fsm StepperMotor::fsm(uint32_t current_time)
{
     656:	cf 92       	push	r12
     658:	df 92       	push	r13
     65a:	ef 92       	push	r14
     65c:	ff 92       	push	r15
     65e:	0f 93       	push	r16
     660:	1f 93       	push	r17
     662:	cf 93       	push	r28
     664:	df 93       	push	r29
     666:	ec 01       	movw	r28, r24
	STEPPER_REGISTER |= step_pin;
     668:	95 b1       	in	r25, 0x05	; 5
     66a:	8a a1       	ldd	r24, Y+34	; 0x22
     66c:	89 2b       	or	r24, r25
     66e:	85 b9       	out	0x05, r24	; 5
	/*Generate pulses at a frequency of step time*/
	if((current_time - stepper_time) > pulse_width){
     670:	8d 8d       	ldd	r24, Y+29	; 0x1d
     672:	9e 8d       	ldd	r25, Y+30	; 0x1e
     674:	af 8d       	ldd	r26, Y+31	; 0x1f
     676:	b8 a1       	ldd	r27, Y+32	; 0x20
     678:	8a 01       	movw	r16, r20
     67a:	9b 01       	movw	r18, r22
     67c:	08 1b       	sub	r16, r24
     67e:	19 0b       	sbc	r17, r25
     680:	2a 0b       	sbc	r18, r26
     682:	3b 0b       	sbc	r19, r27
     684:	8b 89       	ldd	r24, Y+19	; 0x13
     686:	9c 89       	ldd	r25, Y+20	; 0x14
     688:	ad 89       	ldd	r26, Y+21	; 0x15
     68a:	be 89       	ldd	r27, Y+22	; 0x16
     68c:	80 17       	cp	r24, r16
     68e:	91 07       	cpc	r25, r17
     690:	a2 07       	cpc	r26, r18
     692:	b3 07       	cpc	r27, r19
     694:	08 f0       	brcs	.+2      	; 0x698 <_ZN12StepperMotor3fsmEm+0x42>
     696:	c4 c0       	rjmp	.+392    	; 0x820 <_ZN12StepperMotor3fsmEm+0x1ca>
		stepper_time = current_time;
     698:	4d 8f       	std	Y+29, r20	; 0x1d
     69a:	5e 8f       	std	Y+30, r21	; 0x1e
     69c:	6f 8f       	std	Y+31, r22	; 0x1f
     69e:	78 a3       	std	Y+32, r23	; 0x20
		switch(state){
     6a0:	8f a1       	ldd	r24, Y+39	; 0x27
     6a2:	83 30       	cpi	r24, 0x03	; 3
     6a4:	09 f4       	brne	.+2      	; 0x6a8 <_ZN12StepperMotor3fsmEm+0x52>
     6a6:	53 c0       	rjmp	.+166    	; 0x74e <_ZN12StepperMotor3fsmEm+0xf8>
     6a8:	84 30       	cpi	r24, 0x04	; 4
     6aa:	09 f4       	brne	.+2      	; 0x6ae <_ZN12StepperMotor3fsmEm+0x58>
     6ac:	6c c0       	rjmp	.+216    	; 0x786 <_ZN12StepperMotor3fsmEm+0x130>
     6ae:	82 30       	cpi	r24, 0x02	; 2
     6b0:	09 f0       	breq	.+2      	; 0x6b4 <_ZN12StepperMotor3fsmEm+0x5e>
     6b2:	ac c0       	rjmp	.+344    	; 0x80c <_ZN12StepperMotor3fsmEm+0x1b6>
			/*Linearly accelerate */
			case S_ACCEL:
				long_pulse_width=(long_pulse_width-(2UL*long_pulse_width)/(4UL*pulse_width_counter  +1UL));	
     6b4:	cf 84       	ldd	r12, Y+15	; 0x0f
     6b6:	d8 88       	ldd	r13, Y+16	; 0x10
     6b8:	e9 88       	ldd	r14, Y+17	; 0x11
     6ba:	fa 88       	ldd	r15, Y+18	; 0x12
     6bc:	c7 01       	movw	r24, r14
     6be:	b6 01       	movw	r22, r12
     6c0:	66 0f       	add	r22, r22
     6c2:	77 1f       	adc	r23, r23
     6c4:	88 1f       	adc	r24, r24
     6c6:	99 1f       	adc	r25, r25
     6c8:	2f 89       	ldd	r18, Y+23	; 0x17
     6ca:	38 8d       	ldd	r19, Y+24	; 0x18
     6cc:	89 01       	movw	r16, r18
     6ce:	33 0f       	add	r19, r19
     6d0:	22 0b       	sbc	r18, r18
     6d2:	33 0b       	sbc	r19, r19
     6d4:	00 0f       	add	r16, r16
     6d6:	11 1f       	adc	r17, r17
     6d8:	22 1f       	adc	r18, r18
     6da:	33 1f       	adc	r19, r19
     6dc:	00 0f       	add	r16, r16
     6de:	11 1f       	adc	r17, r17
     6e0:	22 1f       	adc	r18, r18
     6e2:	33 1f       	adc	r19, r19
     6e4:	a9 01       	movw	r20, r18
     6e6:	98 01       	movw	r18, r16
     6e8:	2f 5f       	subi	r18, 0xFF	; 255
     6ea:	3f 4f       	sbci	r19, 0xFF	; 255
     6ec:	4f 4f       	sbci	r20, 0xFF	; 255
     6ee:	5f 4f       	sbci	r21, 0xFF	; 255
     6f0:	0e 94 94 09 	call	0x1328	; 0x1328 <__udivmodsi4>
     6f4:	c7 01       	movw	r24, r14
     6f6:	b6 01       	movw	r22, r12
     6f8:	62 1b       	sub	r22, r18
     6fa:	73 0b       	sbc	r23, r19
     6fc:	84 0b       	sbc	r24, r20
     6fe:	95 0b       	sbc	r25, r21
     700:	6f 87       	std	Y+15, r22	; 0x0f
     702:	78 8b       	std	Y+16, r23	; 0x10
     704:	89 8b       	std	Y+17, r24	; 0x11
     706:	9a 8b       	std	Y+18, r25	; 0x12
				pulse_width = long_pulse_width / S_SCALER;
     708:	28 ee       	ldi	r18, 0xE8	; 232
     70a:	33 e0       	ldi	r19, 0x03	; 3
     70c:	40 e0       	ldi	r20, 0x00	; 0
     70e:	50 e0       	ldi	r21, 0x00	; 0
     710:	0e 94 94 09 	call	0x1328	; 0x1328 <__udivmodsi4>
     714:	2b 8b       	std	Y+19, r18	; 0x13
     716:	3c 8b       	std	Y+20, r19	; 0x14
     718:	4d 8b       	std	Y+21, r20	; 0x15
     71a:	5e 8b       	std	Y+22, r21	; 0x16
			//	usart_sendln(step_counter);	
			
				if( step_counter >=  t0){
     71c:	29 8d       	ldd	r18, Y+25	; 0x19
     71e:	3a 8d       	ldd	r19, Y+26	; 0x1a
     720:	8f 81       	ldd	r24, Y+7	; 0x07
     722:	98 85       	ldd	r25, Y+8	; 0x08
     724:	28 17       	cp	r18, r24
     726:	39 07       	cpc	r19, r25
     728:	60 f0       	brcs	.+24     	; 0x742 <_ZN12StepperMotor3fsmEm+0xec>
					#ifdef DEBUG_
						usart_send("S_ACCEL");
     72a:	80 e0       	ldi	r24, 0x00	; 0
     72c:	91 e0       	ldi	r25, 0x01	; 1
     72e:	0e 94 f2 06 	call	0xde4	; 0xde4 <_Z10usart_sendPc>
						usart_sendln(pulse_width);
     732:	6b 89       	ldd	r22, Y+19	; 0x13
     734:	7c 89       	ldd	r23, Y+20	; 0x14
     736:	8d 89       	ldd	r24, Y+21	; 0x15
     738:	9e 89       	ldd	r25, Y+22	; 0x16
     73a:	0e 94 0b 07 	call	0xe16	; 0xe16 <_Z12usart_sendlnm>
					#endif
					state = S_CONSTANT;
     73e:	83 e0       	ldi	r24, 0x03	; 3
     740:	8f a3       	std	Y+39, r24	; 0x27
				}	
				pulse_width_counter ++;
     742:	8f 89       	ldd	r24, Y+23	; 0x17
     744:	98 8d       	ldd	r25, Y+24	; 0x18
     746:	01 96       	adiw	r24, 0x01	; 1
     748:	98 8f       	std	Y+24, r25	; 0x18
     74a:	8f 8b       	std	Y+23, r24	; 0x17
				break; 
     74c:	5f c0       	rjmp	.+190    	; 0x80c <_ZN12StepperMotor3fsmEm+0x1b6>
			/*Rotate at a constant velocity */
			case S_CONSTANT:
				if(step_counter >= t1){
     74e:	29 8d       	ldd	r18, Y+25	; 0x19
     750:	3a 8d       	ldd	r19, Y+26	; 0x1a
     752:	89 85       	ldd	r24, Y+9	; 0x09
     754:	9a 85       	ldd	r25, Y+10	; 0x0a
     756:	28 17       	cp	r18, r24
     758:	39 07       	cpc	r19, r25
     75a:	08 f4       	brcc	.+2      	; 0x75e <_ZN12StepperMotor3fsmEm+0x108>
     75c:	57 c0       	rjmp	.+174    	; 0x80c <_ZN12StepperMotor3fsmEm+0x1b6>
					state = S_DECEL;
     75e:	84 e0       	ldi	r24, 0x04	; 4
     760:	8f a3       	std	Y+39, r24	; 0x27
					pulse_width_counter =pulse_width_counter *-1; 
     762:	8f 89       	ldd	r24, Y+23	; 0x17
     764:	98 8d       	ldd	r25, Y+24	; 0x18
     766:	91 95       	neg	r25
     768:	81 95       	neg	r24
     76a:	91 09       	sbc	r25, r1
     76c:	98 8f       	std	Y+24, r25	; 0x18
     76e:	8f 8b       	std	Y+23, r24	; 0x17
					#ifdef DEBUG_
						usart_send("S_CONSTANT ");
     770:	88 e0       	ldi	r24, 0x08	; 8
     772:	91 e0       	ldi	r25, 0x01	; 1
     774:	0e 94 f2 06 	call	0xde4	; 0xde4 <_Z10usart_sendPc>
						usart_sendln(pulse_width);
     778:	6b 89       	ldd	r22, Y+19	; 0x13
     77a:	7c 89       	ldd	r23, Y+20	; 0x14
     77c:	8d 89       	ldd	r24, Y+21	; 0x15
     77e:	9e 89       	ldd	r25, Y+22	; 0x16
     780:	0e 94 0b 07 	call	0xe16	; 0xe16 <_Z12usart_sendlnm>
     784:	43 c0       	rjmp	.+134    	; 0x80c <_ZN12StepperMotor3fsmEm+0x1b6>
					#endif
					}
				break;
			/*Linearly decelerate */
			case S_DECEL:
				long_pulse_width=(long_pulse_width-(2*long_pulse_width)/(4*pulse_width_counter  +1));		
     786:	cf 84       	ldd	r12, Y+15	; 0x0f
     788:	d8 88       	ldd	r13, Y+16	; 0x10
     78a:	e9 88       	ldd	r14, Y+17	; 0x11
     78c:	fa 88       	ldd	r15, Y+18	; 0x12
     78e:	c7 01       	movw	r24, r14
     790:	b6 01       	movw	r22, r12
     792:	66 0f       	add	r22, r22
     794:	77 1f       	adc	r23, r23
     796:	88 1f       	adc	r24, r24
     798:	99 1f       	adc	r25, r25
     79a:	2f 89       	ldd	r18, Y+23	; 0x17
     79c:	38 8d       	ldd	r19, Y+24	; 0x18
     79e:	22 0f       	add	r18, r18
     7a0:	33 1f       	adc	r19, r19
     7a2:	22 0f       	add	r18, r18
     7a4:	33 1f       	adc	r19, r19
     7a6:	2f 5f       	subi	r18, 0xFF	; 255
     7a8:	3f 4f       	sbci	r19, 0xFF	; 255
     7aa:	03 2e       	mov	r0, r19
     7ac:	00 0c       	add	r0, r0
     7ae:	44 0b       	sbc	r20, r20
     7b0:	55 0b       	sbc	r21, r21
     7b2:	0e 94 b6 09 	call	0x136c	; 0x136c <__divmodsi4>
     7b6:	c7 01       	movw	r24, r14
     7b8:	b6 01       	movw	r22, r12
     7ba:	62 1b       	sub	r22, r18
     7bc:	73 0b       	sbc	r23, r19
     7be:	84 0b       	sbc	r24, r20
     7c0:	95 0b       	sbc	r25, r21
     7c2:	6f 87       	std	Y+15, r22	; 0x0f
     7c4:	78 8b       	std	Y+16, r23	; 0x10
     7c6:	89 8b       	std	Y+17, r24	; 0x11
     7c8:	9a 8b       	std	Y+18, r25	; 0x12
				pulse_width = long_pulse_width / S_SCALER;
     7ca:	28 ee       	ldi	r18, 0xE8	; 232
     7cc:	33 e0       	ldi	r19, 0x03	; 3
     7ce:	40 e0       	ldi	r20, 0x00	; 0
     7d0:	50 e0       	ldi	r21, 0x00	; 0
     7d2:	0e 94 94 09 	call	0x1328	; 0x1328 <__udivmodsi4>
     7d6:	2b 8b       	std	Y+19, r18	; 0x13
     7d8:	3c 8b       	std	Y+20, r19	; 0x14
     7da:	4d 8b       	std	Y+21, r20	; 0x15
     7dc:	5e 8b       	std	Y+22, r21	; 0x16
			//	usart_sendln(step_counter);	
				if(step_counter >= num_steps){
     7de:	29 8d       	ldd	r18, Y+25	; 0x19
     7e0:	3a 8d       	ldd	r19, Y+26	; 0x1a
     7e2:	8d 81       	ldd	r24, Y+5	; 0x05
     7e4:	9e 81       	ldd	r25, Y+6	; 0x06
     7e6:	28 17       	cp	r18, r24
     7e8:	39 07       	cpc	r19, r25
     7ea:	58 f0       	brcs	.+22     	; 0x802 <_ZN12StepperMotor3fsmEm+0x1ac>
							start = 0; 
     7ec:	18 82       	st	Y, r1
					#ifdef DEBUG_
						usart_send("S_DECEL ");
     7ee:	84 e1       	ldi	r24, 0x14	; 20
     7f0:	91 e0       	ldi	r25, 0x01	; 1
     7f2:	0e 94 f2 06 	call	0xde4	; 0xde4 <_Z10usart_sendPc>
						usart_sendln(pulse_width);
     7f6:	6b 89       	ldd	r22, Y+19	; 0x13
     7f8:	7c 89       	ldd	r23, Y+20	; 0x14
     7fa:	8d 89       	ldd	r24, Y+21	; 0x15
     7fc:	9e 89       	ldd	r25, Y+22	; 0x16
     7fe:	0e 94 0b 07 	call	0xe16	; 0xe16 <_Z12usart_sendlnm>
					#endif
				}
				pulse_width_counter ++;
     802:	8f 89       	ldd	r24, Y+23	; 0x17
     804:	98 8d       	ldd	r25, Y+24	; 0x18
     806:	01 96       	adiw	r24, 0x01	; 1
     808:	98 8f       	std	Y+24, r25	; 0x18
     80a:	8f 8b       	std	Y+23, r24	; 0x17
				break;
		}	
		STEPPER_REGISTER &= ~step_pin;
     80c:	95 b1       	in	r25, 0x05	; 5
     80e:	8a a1       	ldd	r24, Y+34	; 0x22
     810:	80 95       	com	r24
     812:	89 23       	and	r24, r25
     814:	85 b9       	out	0x05, r24	; 5
		step_counter++; 
     816:	89 8d       	ldd	r24, Y+25	; 0x19
     818:	9a 8d       	ldd	r25, Y+26	; 0x1a
     81a:	01 96       	adiw	r24, 0x01	; 1
     81c:	9a 8f       	std	Y+26, r25	; 0x1a
     81e:	89 8f       	std	Y+25, r24	; 0x19
	}
	
	
	return state;
}
     820:	8f a1       	ldd	r24, Y+39	; 0x27
     822:	df 91       	pop	r29
     824:	cf 91       	pop	r28
     826:	1f 91       	pop	r17
     828:	0f 91       	pop	r16
     82a:	ff 90       	pop	r15
     82c:	ef 90       	pop	r14
     82e:	df 90       	pop	r13
     830:	cf 90       	pop	r12
     832:	08 95       	ret

00000834 <_ZN12StepperMotor6rotateEm>:
} 




int StepperMotor::rotate(uint32_t current_time){
     834:	2f 92       	push	r2
     836:	3f 92       	push	r3
     838:	4f 92       	push	r4
     83a:	5f 92       	push	r5
     83c:	6f 92       	push	r6
     83e:	7f 92       	push	r7
     840:	8f 92       	push	r8
     842:	9f 92       	push	r9
     844:	af 92       	push	r10
     846:	bf 92       	push	r11
     848:	cf 92       	push	r12
     84a:	df 92       	push	r13
     84c:	ef 92       	push	r14
     84e:	ff 92       	push	r15
     850:	0f 93       	push	r16
     852:	1f 93       	push	r17
     854:	cf 93       	push	r28
     856:	df 93       	push	r29
     858:	cd b7       	in	r28, 0x3d	; 61
     85a:	de b7       	in	r29, 0x3e	; 62
     85c:	60 97       	sbiw	r28, 0x10	; 16
     85e:	0f b6       	in	r0, 0x3f	; 63
     860:	f8 94       	cli
     862:	de bf       	out	0x3e, r29	; 62
     864:	0f be       	out	0x3f, r0	; 63
     866:	cd bf       	out	0x3d, r28	; 61
     868:	98 8b       	std	Y+16, r25	; 0x10
     86a:	8f 87       	std	Y+15, r24	; 0x0f
     86c:	2a 01       	movw	r4, r20
     86e:	3b 01       	movw	r6, r22
	if(start == 1){
     870:	dc 01       	movw	r26, r24
     872:	8c 91       	ld	r24, X
     874:	81 30       	cpi	r24, 0x01	; 1
     876:	09 f0       	breq	.+2      	; 0x87a <_ZN12StepperMotor6rotateEm+0x46>
     878:	95 c1       	rjmp	.+810    	; 0xba4 <__stack+0x2a5>
		state = S_ACCEL;
     87a:	82 e0       	ldi	r24, 0x02	; 2
     87c:	97 96       	adiw	r26, 0x27	; 39
     87e:	8c 93       	st	X, r24
     880:	97 97       	sbiw	r26, 0x27	; 39
		int16_t angle=(target_pos - current_pos);
     882:	13 96       	adiw	r26, 0x03	; 3
     884:	8d 91       	ld	r24, X+
     886:	9c 91       	ld	r25, X
     888:	14 97       	sbiw	r26, 0x04	; 4
     88a:	11 96       	adiw	r26, 0x01	; 1
     88c:	2d 91       	ld	r18, X+
     88e:	3c 91       	ld	r19, X
     890:	12 97       	sbiw	r26, 0x02	; 2
     892:	8c 01       	movw	r16, r24
     894:	02 1b       	sub	r16, r18
     896:	13 0b       	sbc	r17, r19
		current_pos = target_pos;
     898:	12 96       	adiw	r26, 0x02	; 2
     89a:	9c 93       	st	X, r25
     89c:	8e 93       	st	-X, r24
     89e:	11 97       	sbiw	r26, 0x01	; 1
		if(angle> 0){
     8a0:	10 16       	cp	r1, r16
     8a2:	11 06       	cpc	r1, r17
     8a4:	34 f4       	brge	.+12     	; 0x8b2 <_ZN12StepperMotor6rotateEm+0x7e>
			STEPPER_REGISTER |= dir_pin; 
     8a6:	95 b1       	in	r25, 0x05	; 5
     8a8:	91 96       	adiw	r26, 0x21	; 33
     8aa:	8c 91       	ld	r24, X
     8ac:	89 2b       	or	r24, r25
     8ae:	85 b9       	out	0x05, r24	; 5
     8b0:	14 c0       	rjmp	.+40     	; 0x8da <_ZN12StepperMotor6rotateEm+0xa6>
		}else if(angle <0){
     8b2:	11 23       	and	r17, r17
     8b4:	5c f4       	brge	.+22     	; 0x8cc <_ZN12StepperMotor6rotateEm+0x98>
			STEPPER_REGISTER &= ~dir_pin; 
     8b6:	95 b1       	in	r25, 0x05	; 5
     8b8:	ef 85       	ldd	r30, Y+15	; 0x0f
     8ba:	f8 89       	ldd	r31, Y+16	; 0x10
     8bc:	81 a1       	ldd	r24, Z+33	; 0x21
     8be:	80 95       	com	r24
     8c0:	89 23       	and	r24, r25
     8c2:	85 b9       	out	0x05, r24	; 5
			angle = angle * -1;
     8c4:	11 95       	neg	r17
     8c6:	01 95       	neg	r16
     8c8:	11 09       	sbc	r17, r1
     8ca:	07 c0       	rjmp	.+14     	; 0x8da <_ZN12StepperMotor6rotateEm+0xa6>
		}else if(angle == 0){
     8cc:	01 15       	cp	r16, r1
     8ce:	11 05       	cpc	r17, r1
     8d0:	21 f4       	brne	.+8      	; 0x8da <_ZN12StepperMotor6rotateEm+0xa6>
			state = S_WAIT;
     8d2:	af 85       	ldd	r26, Y+15	; 0x0f
     8d4:	b8 89       	ldd	r27, Y+16	; 0x10
     8d6:	97 96       	adiw	r26, 0x27	; 39
     8d8:	1c 92       	st	X, r1
			start = 0; 
		}

		/* Compute parameters */
		num_steps = angle*step_to_angle;
     8da:	af 85       	ldd	r26, Y+15	; 0x0f
     8dc:	b8 89       	ldd	r27, Y+16	; 0x10
     8de:	93 96       	adiw	r26, 0x23	; 35
     8e0:	8d 91       	ld	r24, X+
     8e2:	9d 91       	ld	r25, X+
     8e4:	0d 90       	ld	r0, X+
     8e6:	bc 91       	ld	r27, X
     8e8:	a0 2d       	mov	r26, r0
     8ea:	89 87       	std	Y+9, r24	; 0x09
     8ec:	9a 87       	std	Y+10, r25	; 0x0a
     8ee:	ab 87       	std	Y+11, r26	; 0x0b
     8f0:	bc 87       	std	Y+12, r27	; 0x0c
     8f2:	b8 01       	movw	r22, r16
     8f4:	01 2e       	mov	r0, r17
     8f6:	00 0c       	add	r0, r0
     8f8:	88 0b       	sbc	r24, r24
     8fa:	99 0b       	sbc	r25, r25
     8fc:	0e 94 2c 08 	call	0x1058	; 0x1058 <__floatsisf>
     900:	29 85       	ldd	r18, Y+9	; 0x09
     902:	3a 85       	ldd	r19, Y+10	; 0x0a
     904:	4b 85       	ldd	r20, Y+11	; 0x0b
     906:	5c 85       	ldd	r21, Y+12	; 0x0c
     908:	0e 94 b8 08 	call	0x1170	; 0x1170 <__mulsf3>
     90c:	0e 94 fb 07 	call	0xff6	; 0xff6 <__fixunssfsi>
     910:	6b 01       	movw	r12, r22
     912:	7c 01       	movw	r14, r24
     914:	ef 85       	ldd	r30, Y+15	; 0x0f
     916:	f8 89       	ldd	r31, Y+16	; 0x10
     918:	76 83       	std	Z+6, r23	; 0x06
     91a:	65 83       	std	Z+5, r22	; 0x05
		uint16_t vmax= 0.5*(acceleration*duration-sqrt(pow(acceleration*duration,2)-(angle*acceleration*4)));
     91c:	23 84       	ldd	r2, Z+11	; 0x0b
     91e:	34 84       	ldd	r3, Z+12	; 0x0c
     920:	85 85       	ldd	r24, Z+13	; 0x0d
     922:	96 85       	ldd	r25, Z+14	; 0x0e
     924:	28 9e       	mul	r2, r24
     926:	b0 01       	movw	r22, r0
     928:	29 9e       	mul	r2, r25
     92a:	70 0d       	add	r23, r0
     92c:	38 9e       	mul	r3, r24
     92e:	70 0d       	add	r23, r0
     930:	11 24       	eor	r1, r1
     932:	80 e0       	ldi	r24, 0x00	; 0
     934:	90 e0       	ldi	r25, 0x00	; 0
     936:	0e 94 2a 08 	call	0x1054	; 0x1054 <__floatunsisf>
     93a:	69 83       	std	Y+1, r22	; 0x01
     93c:	7a 83       	std	Y+2, r23	; 0x02
     93e:	8b 83       	std	Y+3, r24	; 0x03
     940:	9c 83       	std	Y+4, r25	; 0x04
     942:	02 9d       	mul	r16, r2
     944:	c0 01       	movw	r24, r0
     946:	03 9d       	mul	r16, r3
     948:	90 0d       	add	r25, r0
     94a:	12 9d       	mul	r17, r2
     94c:	90 0d       	add	r25, r0
     94e:	11 24       	eor	r1, r1
     950:	9e 87       	std	Y+14, r25	; 0x0e
     952:	8d 87       	std	Y+13, r24	; 0x0d
     954:	29 81       	ldd	r18, Y+1	; 0x01
     956:	3a 81       	ldd	r19, Y+2	; 0x02
     958:	4b 81       	ldd	r20, Y+3	; 0x03
     95a:	5c 81       	ldd	r21, Y+4	; 0x04
     95c:	ca 01       	movw	r24, r20
     95e:	b9 01       	movw	r22, r18
     960:	0e 94 b8 08 	call	0x1170	; 0x1170 <__mulsf3>
     964:	6d 83       	std	Y+5, r22	; 0x05
     966:	7e 83       	std	Y+6, r23	; 0x06
     968:	8f 83       	std	Y+7, r24	; 0x07
     96a:	98 87       	std	Y+8, r25	; 0x08
     96c:	8d 84       	ldd	r8, Y+13	; 0x0d
     96e:	9e 84       	ldd	r9, Y+14	; 0x0e
     970:	88 0c       	add	r8, r8
     972:	99 1c       	adc	r9, r9
     974:	88 0c       	add	r8, r8
     976:	99 1c       	adc	r9, r9
     978:	a1 2c       	mov	r10, r1
     97a:	b1 2c       	mov	r11, r1
     97c:	c5 01       	movw	r24, r10
     97e:	b4 01       	movw	r22, r8
     980:	0e 94 2a 08 	call	0x1054	; 0x1054 <__floatunsisf>
     984:	9b 01       	movw	r18, r22
     986:	ac 01       	movw	r20, r24
     988:	6d 81       	ldd	r22, Y+5	; 0x05
     98a:	7e 81       	ldd	r23, Y+6	; 0x06
     98c:	8f 81       	ldd	r24, Y+7	; 0x07
     98e:	98 85       	ldd	r25, Y+8	; 0x08
     990:	0e 94 15 07 	call	0xe2a	; 0xe2a <__subsf3>
     994:	0e 94 2b 09 	call	0x1256	; 0x1256 <sqrt>
     998:	9b 01       	movw	r18, r22
     99a:	ac 01       	movw	r20, r24
     99c:	69 81       	ldd	r22, Y+1	; 0x01
     99e:	7a 81       	ldd	r23, Y+2	; 0x02
     9a0:	8b 81       	ldd	r24, Y+3	; 0x03
     9a2:	9c 81       	ldd	r25, Y+4	; 0x04
     9a4:	0e 94 15 07 	call	0xe2a	; 0xe2a <__subsf3>
     9a8:	20 e0       	ldi	r18, 0x00	; 0
     9aa:	30 e0       	ldi	r19, 0x00	; 0
     9ac:	40 e0       	ldi	r20, 0x00	; 0
     9ae:	5f e3       	ldi	r21, 0x3F	; 63
     9b0:	0e 94 b8 08 	call	0x1170	; 0x1170 <__mulsf3>
     9b4:	0e 94 fb 07 	call	0xff6	; 0xff6 <__fixunssfsi>
     9b8:	4b 01       	movw	r8, r22
     9ba:	5c 01       	movw	r10, r24
		t0=(pow(vmax,2)*num_steps)/(2*angle*acceleration);
     9bc:	80 e0       	ldi	r24, 0x00	; 0
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	0e 94 2a 08 	call	0x1054	; 0x1054 <__floatunsisf>
     9c4:	69 83       	std	Y+1, r22	; 0x01
     9c6:	7a 83       	std	Y+2, r23	; 0x02
     9c8:	8b 83       	std	Y+3, r24	; 0x03
     9ca:	9c 83       	std	Y+4, r25	; 0x04
     9cc:	b6 01       	movw	r22, r12
     9ce:	80 e0       	ldi	r24, 0x00	; 0
     9d0:	90 e0       	ldi	r25, 0x00	; 0
     9d2:	0e 94 2a 08 	call	0x1054	; 0x1054 <__floatunsisf>
     9d6:	6d 83       	std	Y+5, r22	; 0x05
     9d8:	7e 83       	std	Y+6, r23	; 0x06
     9da:	8f 83       	std	Y+7, r24	; 0x07
     9dc:	98 87       	std	Y+8, r25	; 0x08
     9de:	29 81       	ldd	r18, Y+1	; 0x01
     9e0:	3a 81       	ldd	r19, Y+2	; 0x02
     9e2:	4b 81       	ldd	r20, Y+3	; 0x03
     9e4:	5c 81       	ldd	r21, Y+4	; 0x04
     9e6:	ca 01       	movw	r24, r20
     9e8:	b9 01       	movw	r22, r18
     9ea:	0e 94 b8 08 	call	0x1170	; 0x1170 <__mulsf3>
     9ee:	9b 01       	movw	r18, r22
     9f0:	ac 01       	movw	r20, r24
     9f2:	6d 81       	ldd	r22, Y+5	; 0x05
     9f4:	7e 81       	ldd	r23, Y+6	; 0x06
     9f6:	8f 81       	ldd	r24, Y+7	; 0x07
     9f8:	98 85       	ldd	r25, Y+8	; 0x08
     9fa:	0e 94 b8 08 	call	0x1170	; 0x1170 <__mulsf3>
     9fe:	69 83       	std	Y+1, r22	; 0x01
     a00:	7a 83       	std	Y+2, r23	; 0x02
     a02:	8b 83       	std	Y+3, r24	; 0x03
     a04:	9c 83       	std	Y+4, r25	; 0x04
     a06:	6d 85       	ldd	r22, Y+13	; 0x0d
     a08:	7e 85       	ldd	r23, Y+14	; 0x0e
     a0a:	66 0f       	add	r22, r22
     a0c:	77 1f       	adc	r23, r23
     a0e:	80 e0       	ldi	r24, 0x00	; 0
     a10:	90 e0       	ldi	r25, 0x00	; 0
     a12:	0e 94 2a 08 	call	0x1054	; 0x1054 <__floatunsisf>
     a16:	9b 01       	movw	r18, r22
     a18:	ac 01       	movw	r20, r24
     a1a:	69 81       	ldd	r22, Y+1	; 0x01
     a1c:	7a 81       	ldd	r23, Y+2	; 0x02
     a1e:	8b 81       	ldd	r24, Y+3	; 0x03
     a20:	9c 81       	ldd	r25, Y+4	; 0x04
     a22:	0e 94 82 07 	call	0xf04	; 0xf04 <__divsf3>
     a26:	0e 94 fb 07 	call	0xff6	; 0xff6 <__fixunssfsi>
     a2a:	af 85       	ldd	r26, Y+15	; 0x0f
     a2c:	b8 89       	ldd	r27, Y+16	; 0x10
     a2e:	18 96       	adiw	r26, 0x08	; 8
     a30:	7c 93       	st	X, r23
     a32:	6e 93       	st	-X, r22
     a34:	17 97       	sbiw	r26, 0x07	; 7
		t1 =num_steps-t0;
     a36:	c6 01       	movw	r24, r12
     a38:	86 1b       	sub	r24, r22
     a3a:	97 0b       	sbc	r25, r23
     a3c:	1a 96       	adiw	r26, 0x0a	; 10
     a3e:	9c 93       	st	X, r25
     a40:	8e 93       	st	-X, r24
     a42:	19 97       	sbiw	r26, 0x09	; 9
		long_pulse_width =10000* sqrt(2/(acceleration*step_to_angle)) * S_SCALER;
     a44:	61 01       	movw	r12, r2
     a46:	e1 2c       	mov	r14, r1
     a48:	f1 2c       	mov	r15, r1
     a4a:	c7 01       	movw	r24, r14
     a4c:	b6 01       	movw	r22, r12
     a4e:	0e 94 2a 08 	call	0x1054	; 0x1054 <__floatunsisf>
     a52:	29 85       	ldd	r18, Y+9	; 0x09
     a54:	3a 85       	ldd	r19, Y+10	; 0x0a
     a56:	4b 85       	ldd	r20, Y+11	; 0x0b
     a58:	5c 85       	ldd	r21, Y+12	; 0x0c
     a5a:	0e 94 b8 08 	call	0x1170	; 0x1170 <__mulsf3>
     a5e:	9b 01       	movw	r18, r22
     a60:	ac 01       	movw	r20, r24
     a62:	60 e0       	ldi	r22, 0x00	; 0
     a64:	70 e0       	ldi	r23, 0x00	; 0
     a66:	80 e0       	ldi	r24, 0x00	; 0
     a68:	90 e4       	ldi	r25, 0x40	; 64
     a6a:	0e 94 82 07 	call	0xf04	; 0xf04 <__divsf3>
     a6e:	0e 94 2b 09 	call	0x1256	; 0x1256 <sqrt>
     a72:	20 e0       	ldi	r18, 0x00	; 0
     a74:	30 e4       	ldi	r19, 0x40	; 64
     a76:	4c e1       	ldi	r20, 0x1C	; 28
     a78:	56 e4       	ldi	r21, 0x46	; 70
     a7a:	0e 94 b8 08 	call	0x1170	; 0x1170 <__mulsf3>
     a7e:	20 e0       	ldi	r18, 0x00	; 0
     a80:	30 e0       	ldi	r19, 0x00	; 0
     a82:	4a e7       	ldi	r20, 0x7A	; 122
     a84:	54 e4       	ldi	r21, 0x44	; 68
     a86:	0e 94 b8 08 	call	0x1170	; 0x1170 <__mulsf3>
     a8a:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <__fixsfsi>
     a8e:	ef 85       	ldd	r30, Y+15	; 0x0f
     a90:	f8 89       	ldd	r31, Y+16	; 0x10
     a92:	67 87       	std	Z+15, r22	; 0x0f
     a94:	70 8b       	std	Z+16, r23	; 0x10
     a96:	81 8b       	std	Z+17, r24	; 0x11
     a98:	92 8b       	std	Z+18, r25	; 0x12
		/* End  computations */

		step_counter  = 0;
     a9a:	12 8e       	std	Z+26, r1	; 0x1a
     a9c:	11 8e       	std	Z+25, r1	; 0x19
		pulse_width_counter  = 1; 
     a9e:	21 e0       	ldi	r18, 0x01	; 1
     aa0:	30 e0       	ldi	r19, 0x00	; 0
     aa2:	30 8f       	std	Z+24, r19	; 0x18
     aa4:	27 8b       	std	Z+23, r18	; 0x17
		pulse_width = long_pulse_width / S_SCALER;
     aa6:	28 ee       	ldi	r18, 0xE8	; 232
     aa8:	33 e0       	ldi	r19, 0x03	; 3
     aaa:	40 e0       	ldi	r20, 0x00	; 0
     aac:	50 e0       	ldi	r21, 0x00	; 0
     aae:	0e 94 94 09 	call	0x1328	; 0x1328 <__udivmodsi4>
     ab2:	af 85       	ldd	r26, Y+15	; 0x0f
     ab4:	b8 89       	ldd	r27, Y+16	; 0x10
     ab6:	53 96       	adiw	r26, 0x13	; 19
     ab8:	2d 93       	st	X+, r18
     aba:	3d 93       	st	X+, r19
     abc:	4d 93       	st	X+, r20
     abe:	5c 93       	st	X, r21
     ac0:	56 97       	sbiw	r26, 0x16	; 22
		start = 2; 
     ac2:	82 e0       	ldi	r24, 0x02	; 2
     ac4:	8c 93       	st	X, r24
		#ifdef DEBUG_
		
		usart_sendln("####################"); 
     ac6:	8d e1       	ldi	r24, 0x1D	; 29
     ac8:	91 e0       	ldi	r25, 0x01	; 1
     aca:	0e 94 06 07 	call	0xe0c	; 0xe0c <_Z12usart_sendlnPc>
		usart_send("Angle ");usart_sendln((int)angle);  
     ace:	82 e3       	ldi	r24, 0x32	; 50
     ad0:	91 e0       	ldi	r25, 0x01	; 1
     ad2:	0e 94 f2 06 	call	0xde4	; 0xde4 <_Z10usart_sendPc>
     ad6:	c8 01       	movw	r24, r16
     ad8:	0e 94 01 07 	call	0xe02	; 0xe02 <_Z12usart_sendlni>
		usart_send("duration ");usart_sendln((int)duration);
     adc:	89 e3       	ldi	r24, 0x39	; 57
     ade:	91 e0       	ldi	r25, 0x01	; 1
     ae0:	0e 94 f2 06 	call	0xde4	; 0xde4 <_Z10usart_sendPc>
     ae4:	ef 85       	ldd	r30, Y+15	; 0x0f
     ae6:	f8 89       	ldd	r31, Y+16	; 0x10
     ae8:	85 85       	ldd	r24, Z+13	; 0x0d
     aea:	96 85       	ldd	r25, Z+14	; 0x0e
     aec:	0e 94 01 07 	call	0xe02	; 0xe02 <_Z12usart_sendlni>
		usart_send("Acceleration ");usart_sendln((int)acceleration);
     af0:	83 e4       	ldi	r24, 0x43	; 67
     af2:	91 e0       	ldi	r25, 0x01	; 1
     af4:	0e 94 f2 06 	call	0xde4	; 0xde4 <_Z10usart_sendPc>
     af8:	af 85       	ldd	r26, Y+15	; 0x0f
     afa:	b8 89       	ldd	r27, Y+16	; 0x10
     afc:	1b 96       	adiw	r26, 0x0b	; 11
     afe:	8d 91       	ld	r24, X+
     b00:	9c 91       	ld	r25, X
     b02:	1c 97       	sbiw	r26, 0x0c	; 12
     b04:	0e 94 01 07 	call	0xe02	; 0xe02 <_Z12usart_sendlni>
		usart_send("vmax ");usart_sendln((int)vmax); 			
     b08:	81 e5       	ldi	r24, 0x51	; 81
     b0a:	91 e0       	ldi	r25, 0x01	; 1
     b0c:	0e 94 f2 06 	call	0xde4	; 0xde4 <_Z10usart_sendPc>
     b10:	c4 01       	movw	r24, r8
     b12:	0e 94 01 07 	call	0xe02	; 0xe02 <_Z12usart_sendlni>
		usart_send("#n ");usart_sendln((int)num_steps); 			
     b16:	87 e5       	ldi	r24, 0x57	; 87
     b18:	91 e0       	ldi	r25, 0x01	; 1
     b1a:	0e 94 f2 06 	call	0xde4	; 0xde4 <_Z10usart_sendPc>
     b1e:	ef 85       	ldd	r30, Y+15	; 0x0f
     b20:	f8 89       	ldd	r31, Y+16	; 0x10
     b22:	85 81       	ldd	r24, Z+5	; 0x05
     b24:	96 81       	ldd	r25, Z+6	; 0x06
     b26:	0e 94 01 07 	call	0xe02	; 0xe02 <_Z12usart_sendlni>
		usart_send("t0 ");usart_sendln((int)t0); 			
     b2a:	8b e5       	ldi	r24, 0x5B	; 91
     b2c:	91 e0       	ldi	r25, 0x01	; 1
     b2e:	0e 94 f2 06 	call	0xde4	; 0xde4 <_Z10usart_sendPc>
     b32:	af 85       	ldd	r26, Y+15	; 0x0f
     b34:	b8 89       	ldd	r27, Y+16	; 0x10
     b36:	17 96       	adiw	r26, 0x07	; 7
     b38:	8d 91       	ld	r24, X+
     b3a:	9c 91       	ld	r25, X
     b3c:	18 97       	sbiw	r26, 0x08	; 8
     b3e:	0e 94 01 07 	call	0xe02	; 0xe02 <_Z12usart_sendlni>
		usart_send("t1 ");usart_sendln((int)t1); 			
     b42:	8f e5       	ldi	r24, 0x5F	; 95
     b44:	91 e0       	ldi	r25, 0x01	; 1
     b46:	0e 94 f2 06 	call	0xde4	; 0xde4 <_Z10usart_sendPc>
     b4a:	ef 85       	ldd	r30, Y+15	; 0x0f
     b4c:	f8 89       	ldd	r31, Y+16	; 0x10
     b4e:	81 85       	ldd	r24, Z+9	; 0x09
     b50:	92 85       	ldd	r25, Z+10	; 0x0a
     b52:	0e 94 01 07 	call	0xe02	; 0xe02 <_Z12usart_sendlni>
		usart_send("Long Step time ");usart_sendln(long_pulse_width);
     b56:	83 e6       	ldi	r24, 0x63	; 99
     b58:	91 e0       	ldi	r25, 0x01	; 1
     b5a:	0e 94 f2 06 	call	0xde4	; 0xde4 <_Z10usart_sendPc>
     b5e:	af 85       	ldd	r26, Y+15	; 0x0f
     b60:	b8 89       	ldd	r27, Y+16	; 0x10
     b62:	1f 96       	adiw	r26, 0x0f	; 15
     b64:	6d 91       	ld	r22, X+
     b66:	7d 91       	ld	r23, X+
     b68:	8d 91       	ld	r24, X+
     b6a:	9c 91       	ld	r25, X
     b6c:	52 97       	sbiw	r26, 0x12	; 18
     b6e:	0e 94 10 07 	call	0xe20	; 0xe20 <_Z12usart_sendlnl>
		usart_send("Step time ");usart_sendln(pulse_width);
     b72:	88 e6       	ldi	r24, 0x68	; 104
     b74:	91 e0       	ldi	r25, 0x01	; 1
     b76:	0e 94 f2 06 	call	0xde4	; 0xde4 <_Z10usart_sendPc>
     b7a:	ef 85       	ldd	r30, Y+15	; 0x0f
     b7c:	f8 89       	ldd	r31, Y+16	; 0x10
     b7e:	63 89       	ldd	r22, Z+19	; 0x13
     b80:	74 89       	ldd	r23, Z+20	; 0x14
     b82:	85 89       	ldd	r24, Z+21	; 0x15
     b84:	96 89       	ldd	r25, Z+22	; 0x16
     b86:	0e 94 0b 07 	call	0xe16	; 0xe16 <_Z12usart_sendlnm>
		usart_sendln("####################"); 		
     b8a:	8d e1       	ldi	r24, 0x1D	; 29
     b8c:	91 e0       	ldi	r25, 0x01	; 1
     b8e:	0e 94 06 07 	call	0xe0c	; 0xe0c <_Z12usart_sendlnPc>
		#endif // DEBUG
		stepper_time = current_time; 
     b92:	af 85       	ldd	r26, Y+15	; 0x0f
     b94:	b8 89       	ldd	r27, Y+16	; 0x10
     b96:	5d 96       	adiw	r26, 0x1d	; 29
     b98:	4d 92       	st	X+, r4
     b9a:	5d 92       	st	X+, r5
     b9c:	6d 92       	st	X+, r6
     b9e:	7c 92       	st	X, r7
     ba0:	90 97       	sbiw	r26, 0x20	; 32
     ba2:	06 c0       	rjmp	.+12     	; 0xbb0 <__stack+0x2b1>
	}else if(start == 2){
     ba4:	82 30       	cpi	r24, 0x02	; 2
     ba6:	21 f4       	brne	.+8      	; 0xbb0 <__stack+0x2b1>
		fsm(current_time); 
     ba8:	8f 85       	ldd	r24, Y+15	; 0x0f
     baa:	98 89       	ldd	r25, Y+16	; 0x10
     bac:	0e 94 2b 03 	call	0x656	; 0x656 <_ZN12StepperMotor3fsmEm>
	}

}
     bb0:	60 96       	adiw	r28, 0x10	; 16
     bb2:	0f b6       	in	r0, 0x3f	; 63
     bb4:	f8 94       	cli
     bb6:	de bf       	out	0x3e, r29	; 62
     bb8:	0f be       	out	0x3f, r0	; 63
     bba:	cd bf       	out	0x3d, r28	; 61
     bbc:	df 91       	pop	r29
     bbe:	cf 91       	pop	r28
     bc0:	1f 91       	pop	r17
     bc2:	0f 91       	pop	r16
     bc4:	ff 90       	pop	r15
     bc6:	ef 90       	pop	r14
     bc8:	df 90       	pop	r13
     bca:	cf 90       	pop	r12
     bcc:	bf 90       	pop	r11
     bce:	af 90       	pop	r10
     bd0:	9f 90       	pop	r9
     bd2:	8f 90       	pop	r8
     bd4:	7f 90       	pop	r7
     bd6:	6f 90       	pop	r6
     bd8:	5f 90       	pop	r5
     bda:	4f 90       	pop	r4
     bdc:	3f 90       	pop	r3
     bde:	2f 90       	pop	r2
     be0:	08 95       	ret

00000be2 <_Z12timer_enablev>:
	timer_counter = 0; 
}

//Reset the counter
void timer_reset(){
	timer_counter = 0; 
     be2:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
     be6:	e1 e8       	ldi	r30, 0x81	; 129
     be8:	f0 e0       	ldi	r31, 0x00	; 0
     bea:	10 82       	st	Z, r1
     bec:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     bf0:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     bf4:	88 e1       	ldi	r24, 0x18	; 24
     bf6:	90 e0       	ldi	r25, 0x00	; 0
     bf8:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
     bfc:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
     c00:	80 81       	ld	r24, Z
     c02:	88 60       	ori	r24, 0x08	; 8
     c04:	80 83       	st	Z, r24
     c06:	80 81       	ld	r24, Z
     c08:	83 60       	ori	r24, 0x03	; 3
     c0a:	80 83       	st	Z, r24
     c0c:	ef e6       	ldi	r30, 0x6F	; 111
     c0e:	f0 e0       	ldi	r31, 0x00	; 0
     c10:	80 81       	ld	r24, Z
     c12:	82 60       	ori	r24, 0x02	; 2
     c14:	80 83       	st	Z, r24
     c16:	10 92 8a 01 	sts	0x018A, r1	; 0x80018a <timer_counter>
     c1a:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <timer_counter+0x1>
     c1e:	10 92 8c 01 	sts	0x018C, r1	; 0x80018c <timer_counter+0x2>
     c22:	10 92 8d 01 	sts	0x018D, r1	; 0x80018d <timer_counter+0x3>
     c26:	08 95       	ret

00000c28 <_Z9timer_10kv>:
}

//Return the elapsed time since the counter was enable 
uint32_t timer_10k(){
	return timer_counter;
     c28:	60 91 8a 01 	lds	r22, 0x018A	; 0x80018a <timer_counter>
     c2c:	70 91 8b 01 	lds	r23, 0x018B	; 0x80018b <timer_counter+0x1>
     c30:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <timer_counter+0x2>
     c34:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <timer_counter+0x3>
}
     c38:	08 95       	ret

00000c3a <__vector_11>:

//interrupt vector 
ISR (TIMER1_COMPA_vect) {
     c3a:	1f 92       	push	r1
     c3c:	0f 92       	push	r0
     c3e:	0f b6       	in	r0, 0x3f	; 63
     c40:	0f 92       	push	r0
     c42:	11 24       	eor	r1, r1
     c44:	8f 93       	push	r24
     c46:	9f 93       	push	r25
     c48:	af 93       	push	r26
     c4a:	bf 93       	push	r27
	timer_counter++;
     c4c:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <timer_counter>
     c50:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <timer_counter+0x1>
     c54:	a0 91 8c 01 	lds	r26, 0x018C	; 0x80018c <timer_counter+0x2>
     c58:	b0 91 8d 01 	lds	r27, 0x018D	; 0x80018d <timer_counter+0x3>
     c5c:	01 96       	adiw	r24, 0x01	; 1
     c5e:	a1 1d       	adc	r26, r1
     c60:	b1 1d       	adc	r27, r1
     c62:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <timer_counter>
     c66:	90 93 8b 01 	sts	0x018B, r25	; 0x80018b <timer_counter+0x1>
     c6a:	a0 93 8c 01 	sts	0x018C, r26	; 0x80018c <timer_counter+0x2>
     c6e:	b0 93 8d 01 	sts	0x018D, r27	; 0x80018d <timer_counter+0x3>
     c72:	bf 91       	pop	r27
     c74:	af 91       	pop	r26
     c76:	9f 91       	pop	r25
     c78:	8f 91       	pop	r24
     c7a:	0f 90       	pop	r0
     c7c:	0f be       	out	0x3f, r0	; 63
     c7e:	0f 90       	pop	r0
     c80:	1f 90       	pop	r1
     c82:	18 95       	reti

00000c84 <_Z12usart_enablej>:
	usart_newline();
}

void usart_sendln(uint16_t number){
	usart_send(number);
	usart_newline();
     c84:	28 e9       	ldi	r18, 0x98	; 152
     c86:	20 93 c1 00 	sts	0x00C1, r18	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     c8a:	26 e0       	ldi	r18, 0x06	; 6
     c8c:	20 93 c2 00 	sts	0x00C2, r18	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
     c90:	bc 01       	movw	r22, r24
     c92:	80 e0       	ldi	r24, 0x00	; 0
     c94:	90 e0       	ldi	r25, 0x00	; 0
     c96:	0e 94 2a 08 	call	0x1054	; 0x1054 <__floatunsisf>
     c9a:	20 e0       	ldi	r18, 0x00	; 0
     c9c:	30 e0       	ldi	r19, 0x00	; 0
     c9e:	40 e8       	ldi	r20, 0x80	; 128
     ca0:	51 e4       	ldi	r21, 0x41	; 65
     ca2:	0e 94 b8 08 	call	0x1170	; 0x1170 <__mulsf3>
     ca6:	9b 01       	movw	r18, r22
     ca8:	ac 01       	movw	r20, r24
     caa:	60 e0       	ldi	r22, 0x00	; 0
     cac:	74 e2       	ldi	r23, 0x24	; 36
     cae:	84 e7       	ldi	r24, 0x74	; 116
     cb0:	9b e4       	ldi	r25, 0x4B	; 75
     cb2:	0e 94 82 07 	call	0xf04	; 0xf04 <__divsf3>
     cb6:	20 e0       	ldi	r18, 0x00	; 0
     cb8:	30 e0       	ldi	r19, 0x00	; 0
     cba:	40 e8       	ldi	r20, 0x80	; 128
     cbc:	5f e3       	ldi	r21, 0x3F	; 63
     cbe:	0e 94 15 07 	call	0xe2a	; 0xe2a <__subsf3>
     cc2:	0e 94 fb 07 	call	0xff6	; 0xff6 <__fixunssfsi>
     cc6:	70 93 c5 00 	sts	0x00C5, r23	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     cca:	60 93 c4 00 	sts	0x00C4, r22	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     cce:	08 95       	ret

00000cd0 <_Z10usart_sendc>:
     cd0:	e0 ec       	ldi	r30, 0xC0	; 192
     cd2:	f0 e0       	ldi	r31, 0x00	; 0
     cd4:	90 81       	ld	r25, Z
     cd6:	95 ff       	sbrs	r25, 5
     cd8:	fd cf       	rjmp	.-6      	; 0xcd4 <_Z10usart_sendc+0x4>
     cda:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     cde:	08 95       	ret

00000ce0 <_Z13usart_newlinev>:
     ce0:	8a e0       	ldi	r24, 0x0A	; 10
     ce2:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_Z10usart_sendc>
     ce6:	08 95       	ret

00000ce8 <_Z10usart_sendi>:
     ce8:	0f 93       	push	r16
     cea:	1f 93       	push	r17
     cec:	cf 93       	push	r28
     cee:	df 93       	push	r29
     cf0:	cd b7       	in	r28, 0x3d	; 61
     cf2:	de b7       	in	r29, 0x3e	; 62
     cf4:	2a 97       	sbiw	r28, 0x0a	; 10
     cf6:	0f b6       	in	r0, 0x3f	; 63
     cf8:	f8 94       	cli
     cfa:	de bf       	out	0x3e, r29	; 62
     cfc:	0f be       	out	0x3f, r0	; 63
     cfe:	cd bf       	out	0x3d, r28	; 61
     d00:	4a e0       	ldi	r20, 0x0A	; 10
     d02:	be 01       	movw	r22, r28
     d04:	6f 5f       	subi	r22, 0xFF	; 255
     d06:	7f 4f       	sbci	r23, 0xFF	; 255
     d08:	0e 94 d5 09 	call	0x13aa	; 0x13aa <__itoa_ncheck>
     d0c:	89 81       	ldd	r24, Y+1	; 0x01
     d0e:	88 23       	and	r24, r24
     d10:	51 f0       	breq	.+20     	; 0xd26 <_Z10usart_sendi+0x3e>
     d12:	8e 01       	movw	r16, r28
     d14:	0e 5f       	subi	r16, 0xFE	; 254
     d16:	1f 4f       	sbci	r17, 0xFF	; 255
     d18:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_Z10usart_sendc>
     d1c:	f8 01       	movw	r30, r16
     d1e:	81 91       	ld	r24, Z+
     d20:	8f 01       	movw	r16, r30
     d22:	81 11       	cpse	r24, r1
     d24:	f9 cf       	rjmp	.-14     	; 0xd18 <_Z10usart_sendi+0x30>
     d26:	2a 96       	adiw	r28, 0x0a	; 10
     d28:	0f b6       	in	r0, 0x3f	; 63
     d2a:	f8 94       	cli
     d2c:	de bf       	out	0x3e, r29	; 62
     d2e:	0f be       	out	0x3f, r0	; 63
     d30:	cd bf       	out	0x3d, r28	; 61
     d32:	df 91       	pop	r29
     d34:	cf 91       	pop	r28
     d36:	1f 91       	pop	r17
     d38:	0f 91       	pop	r16
     d3a:	08 95       	ret

00000d3c <_Z10usart_sendl>:
     d3c:	0f 93       	push	r16
     d3e:	1f 93       	push	r17
     d40:	cf 93       	push	r28
     d42:	df 93       	push	r29
     d44:	cd b7       	in	r28, 0x3d	; 61
     d46:	de b7       	in	r29, 0x3e	; 62
     d48:	2b 97       	sbiw	r28, 0x0b	; 11
     d4a:	0f b6       	in	r0, 0x3f	; 63
     d4c:	f8 94       	cli
     d4e:	de bf       	out	0x3e, r29	; 62
     d50:	0f be       	out	0x3f, r0	; 63
     d52:	cd bf       	out	0x3d, r28	; 61
     d54:	2a e0       	ldi	r18, 0x0A	; 10
     d56:	ae 01       	movw	r20, r28
     d58:	4f 5f       	subi	r20, 0xFF	; 255
     d5a:	5f 4f       	sbci	r21, 0xFF	; 255
     d5c:	0e 94 e0 09 	call	0x13c0	; 0x13c0 <__ltoa_ncheck>
     d60:	89 81       	ldd	r24, Y+1	; 0x01
     d62:	88 23       	and	r24, r24
     d64:	51 f0       	breq	.+20     	; 0xd7a <_Z10usart_sendl+0x3e>
     d66:	8e 01       	movw	r16, r28
     d68:	0e 5f       	subi	r16, 0xFE	; 254
     d6a:	1f 4f       	sbci	r17, 0xFF	; 255
     d6c:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_Z10usart_sendc>
     d70:	f8 01       	movw	r30, r16
     d72:	81 91       	ld	r24, Z+
     d74:	8f 01       	movw	r16, r30
     d76:	81 11       	cpse	r24, r1
     d78:	f9 cf       	rjmp	.-14     	; 0xd6c <_Z10usart_sendl+0x30>
     d7a:	2b 96       	adiw	r28, 0x0b	; 11
     d7c:	0f b6       	in	r0, 0x3f	; 63
     d7e:	f8 94       	cli
     d80:	de bf       	out	0x3e, r29	; 62
     d82:	0f be       	out	0x3f, r0	; 63
     d84:	cd bf       	out	0x3d, r28	; 61
     d86:	df 91       	pop	r29
     d88:	cf 91       	pop	r28
     d8a:	1f 91       	pop	r17
     d8c:	0f 91       	pop	r16
     d8e:	08 95       	ret

00000d90 <_Z10usart_sendm>:
     d90:	0f 93       	push	r16
     d92:	1f 93       	push	r17
     d94:	cf 93       	push	r28
     d96:	df 93       	push	r29
     d98:	cd b7       	in	r28, 0x3d	; 61
     d9a:	de b7       	in	r29, 0x3e	; 62
     d9c:	2b 97       	sbiw	r28, 0x0b	; 11
     d9e:	0f b6       	in	r0, 0x3f	; 63
     da0:	f8 94       	cli
     da2:	de bf       	out	0x3e, r29	; 62
     da4:	0f be       	out	0x3f, r0	; 63
     da6:	cd bf       	out	0x3d, r28	; 61
     da8:	2a e0       	ldi	r18, 0x0A	; 10
     daa:	ae 01       	movw	r20, r28
     dac:	4f 5f       	subi	r20, 0xFF	; 255
     dae:	5f 4f       	sbci	r21, 0xFF	; 255
     db0:	0e 94 ef 09 	call	0x13de	; 0x13de <__ultoa_ncheck>
     db4:	89 81       	ldd	r24, Y+1	; 0x01
     db6:	88 23       	and	r24, r24
     db8:	51 f0       	breq	.+20     	; 0xdce <_Z10usart_sendm+0x3e>
     dba:	8e 01       	movw	r16, r28
     dbc:	0e 5f       	subi	r16, 0xFE	; 254
     dbe:	1f 4f       	sbci	r17, 0xFF	; 255
     dc0:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_Z10usart_sendc>
     dc4:	f8 01       	movw	r30, r16
     dc6:	81 91       	ld	r24, Z+
     dc8:	8f 01       	movw	r16, r30
     dca:	81 11       	cpse	r24, r1
     dcc:	f9 cf       	rjmp	.-14     	; 0xdc0 <_Z10usart_sendm+0x30>
     dce:	2b 96       	adiw	r28, 0x0b	; 11
     dd0:	0f b6       	in	r0, 0x3f	; 63
     dd2:	f8 94       	cli
     dd4:	de bf       	out	0x3e, r29	; 62
     dd6:	0f be       	out	0x3f, r0	; 63
     dd8:	cd bf       	out	0x3d, r28	; 61
     dda:	df 91       	pop	r29
     ddc:	cf 91       	pop	r28
     dde:	1f 91       	pop	r17
     de0:	0f 91       	pop	r16
     de2:	08 95       	ret

00000de4 <_Z10usart_sendPc>:
     de4:	cf 93       	push	r28
     de6:	df 93       	push	r29
     de8:	ec 01       	movw	r28, r24
     dea:	88 81       	ld	r24, Y
     dec:	88 23       	and	r24, r24
     dee:	31 f0       	breq	.+12     	; 0xdfc <_Z10usart_sendPc+0x18>
     df0:	21 96       	adiw	r28, 0x01	; 1
     df2:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_Z10usart_sendc>
     df6:	89 91       	ld	r24, Y+
     df8:	81 11       	cpse	r24, r1
     dfa:	fb cf       	rjmp	.-10     	; 0xdf2 <_Z10usart_sendPc+0xe>
     dfc:	df 91       	pop	r29
     dfe:	cf 91       	pop	r28
     e00:	08 95       	ret

00000e02 <_Z12usart_sendlni>:
     e02:	0e 94 74 06 	call	0xce8	; 0xce8 <_Z10usart_sendi>
     e06:	0e 94 70 06 	call	0xce0	; 0xce0 <_Z13usart_newlinev>
     e0a:	08 95       	ret

00000e0c <_Z12usart_sendlnPc>:
     e0c:	0e 94 f2 06 	call	0xde4	; 0xde4 <_Z10usart_sendPc>
     e10:	0e 94 70 06 	call	0xce0	; 0xce0 <_Z13usart_newlinev>
     e14:	08 95       	ret

00000e16 <_Z12usart_sendlnm>:
     e16:	0e 94 c8 06 	call	0xd90	; 0xd90 <_Z10usart_sendm>
     e1a:	0e 94 70 06 	call	0xce0	; 0xce0 <_Z13usart_newlinev>
     e1e:	08 95       	ret

00000e20 <_Z12usart_sendlnl>:
}

void usart_sendln(int32_t number){
	usart_send(number);
     e20:	0e 94 9e 06 	call	0xd3c	; 0xd3c <_Z10usart_sendl>
	usart_newline();
     e24:	0e 94 70 06 	call	0xce0	; 0xce0 <_Z13usart_newlinev>
     e28:	08 95       	ret

00000e2a <__subsf3>:
     e2a:	50 58       	subi	r21, 0x80	; 128

00000e2c <__addsf3>:
     e2c:	bb 27       	eor	r27, r27
     e2e:	aa 27       	eor	r26, r26
     e30:	0e 94 2d 07 	call	0xe5a	; 0xe5a <__addsf3x>
     e34:	0c 94 7e 08 	jmp	0x10fc	; 0x10fc <__fp_round>
     e38:	0e 94 70 08 	call	0x10e0	; 0x10e0 <__fp_pscA>
     e3c:	38 f0       	brcs	.+14     	; 0xe4c <__addsf3+0x20>
     e3e:	0e 94 77 08 	call	0x10ee	; 0x10ee <__fp_pscB>
     e42:	20 f0       	brcs	.+8      	; 0xe4c <__addsf3+0x20>
     e44:	39 f4       	brne	.+14     	; 0xe54 <__addsf3+0x28>
     e46:	9f 3f       	cpi	r25, 0xFF	; 255
     e48:	19 f4       	brne	.+6      	; 0xe50 <__addsf3+0x24>
     e4a:	26 f4       	brtc	.+8      	; 0xe54 <__addsf3+0x28>
     e4c:	0c 94 6d 08 	jmp	0x10da	; 0x10da <__fp_nan>
     e50:	0e f4       	brtc	.+2      	; 0xe54 <__addsf3+0x28>
     e52:	e0 95       	com	r30
     e54:	e7 fb       	bst	r30, 7
     e56:	0c 94 67 08 	jmp	0x10ce	; 0x10ce <__fp_inf>

00000e5a <__addsf3x>:
     e5a:	e9 2f       	mov	r30, r25
     e5c:	0e 94 8f 08 	call	0x111e	; 0x111e <__fp_split3>
     e60:	58 f3       	brcs	.-42     	; 0xe38 <__addsf3+0xc>
     e62:	ba 17       	cp	r27, r26
     e64:	62 07       	cpc	r22, r18
     e66:	73 07       	cpc	r23, r19
     e68:	84 07       	cpc	r24, r20
     e6a:	95 07       	cpc	r25, r21
     e6c:	20 f0       	brcs	.+8      	; 0xe76 <__addsf3x+0x1c>
     e6e:	79 f4       	brne	.+30     	; 0xe8e <__addsf3x+0x34>
     e70:	a6 f5       	brtc	.+104    	; 0xeda <__addsf3x+0x80>
     e72:	0c 94 b1 08 	jmp	0x1162	; 0x1162 <__fp_zero>
     e76:	0e f4       	brtc	.+2      	; 0xe7a <__addsf3x+0x20>
     e78:	e0 95       	com	r30
     e7a:	0b 2e       	mov	r0, r27
     e7c:	ba 2f       	mov	r27, r26
     e7e:	a0 2d       	mov	r26, r0
     e80:	0b 01       	movw	r0, r22
     e82:	b9 01       	movw	r22, r18
     e84:	90 01       	movw	r18, r0
     e86:	0c 01       	movw	r0, r24
     e88:	ca 01       	movw	r24, r20
     e8a:	a0 01       	movw	r20, r0
     e8c:	11 24       	eor	r1, r1
     e8e:	ff 27       	eor	r31, r31
     e90:	59 1b       	sub	r21, r25
     e92:	99 f0       	breq	.+38     	; 0xeba <__addsf3x+0x60>
     e94:	59 3f       	cpi	r21, 0xF9	; 249
     e96:	50 f4       	brcc	.+20     	; 0xeac <__addsf3x+0x52>
     e98:	50 3e       	cpi	r21, 0xE0	; 224
     e9a:	68 f1       	brcs	.+90     	; 0xef6 <__addsf3x+0x9c>
     e9c:	1a 16       	cp	r1, r26
     e9e:	f0 40       	sbci	r31, 0x00	; 0
     ea0:	a2 2f       	mov	r26, r18
     ea2:	23 2f       	mov	r18, r19
     ea4:	34 2f       	mov	r19, r20
     ea6:	44 27       	eor	r20, r20
     ea8:	58 5f       	subi	r21, 0xF8	; 248
     eaa:	f3 cf       	rjmp	.-26     	; 0xe92 <__addsf3x+0x38>
     eac:	46 95       	lsr	r20
     eae:	37 95       	ror	r19
     eb0:	27 95       	ror	r18
     eb2:	a7 95       	ror	r26
     eb4:	f0 40       	sbci	r31, 0x00	; 0
     eb6:	53 95       	inc	r21
     eb8:	c9 f7       	brne	.-14     	; 0xeac <__addsf3x+0x52>
     eba:	7e f4       	brtc	.+30     	; 0xeda <__addsf3x+0x80>
     ebc:	1f 16       	cp	r1, r31
     ebe:	ba 0b       	sbc	r27, r26
     ec0:	62 0b       	sbc	r22, r18
     ec2:	73 0b       	sbc	r23, r19
     ec4:	84 0b       	sbc	r24, r20
     ec6:	ba f0       	brmi	.+46     	; 0xef6 <__addsf3x+0x9c>
     ec8:	91 50       	subi	r25, 0x01	; 1
     eca:	a1 f0       	breq	.+40     	; 0xef4 <__addsf3x+0x9a>
     ecc:	ff 0f       	add	r31, r31
     ece:	bb 1f       	adc	r27, r27
     ed0:	66 1f       	adc	r22, r22
     ed2:	77 1f       	adc	r23, r23
     ed4:	88 1f       	adc	r24, r24
     ed6:	c2 f7       	brpl	.-16     	; 0xec8 <__addsf3x+0x6e>
     ed8:	0e c0       	rjmp	.+28     	; 0xef6 <__addsf3x+0x9c>
     eda:	ba 0f       	add	r27, r26
     edc:	62 1f       	adc	r22, r18
     ede:	73 1f       	adc	r23, r19
     ee0:	84 1f       	adc	r24, r20
     ee2:	48 f4       	brcc	.+18     	; 0xef6 <__addsf3x+0x9c>
     ee4:	87 95       	ror	r24
     ee6:	77 95       	ror	r23
     ee8:	67 95       	ror	r22
     eea:	b7 95       	ror	r27
     eec:	f7 95       	ror	r31
     eee:	9e 3f       	cpi	r25, 0xFE	; 254
     ef0:	08 f0       	brcs	.+2      	; 0xef4 <__addsf3x+0x9a>
     ef2:	b0 cf       	rjmp	.-160    	; 0xe54 <__addsf3+0x28>
     ef4:	93 95       	inc	r25
     ef6:	88 0f       	add	r24, r24
     ef8:	08 f0       	brcs	.+2      	; 0xefc <__addsf3x+0xa2>
     efa:	99 27       	eor	r25, r25
     efc:	ee 0f       	add	r30, r30
     efe:	97 95       	ror	r25
     f00:	87 95       	ror	r24
     f02:	08 95       	ret

00000f04 <__divsf3>:
     f04:	0e 94 96 07 	call	0xf2c	; 0xf2c <__divsf3x>
     f08:	0c 94 7e 08 	jmp	0x10fc	; 0x10fc <__fp_round>
     f0c:	0e 94 77 08 	call	0x10ee	; 0x10ee <__fp_pscB>
     f10:	58 f0       	brcs	.+22     	; 0xf28 <__divsf3+0x24>
     f12:	0e 94 70 08 	call	0x10e0	; 0x10e0 <__fp_pscA>
     f16:	40 f0       	brcs	.+16     	; 0xf28 <__divsf3+0x24>
     f18:	29 f4       	brne	.+10     	; 0xf24 <__divsf3+0x20>
     f1a:	5f 3f       	cpi	r21, 0xFF	; 255
     f1c:	29 f0       	breq	.+10     	; 0xf28 <__divsf3+0x24>
     f1e:	0c 94 67 08 	jmp	0x10ce	; 0x10ce <__fp_inf>
     f22:	51 11       	cpse	r21, r1
     f24:	0c 94 b2 08 	jmp	0x1164	; 0x1164 <__fp_szero>
     f28:	0c 94 6d 08 	jmp	0x10da	; 0x10da <__fp_nan>

00000f2c <__divsf3x>:
     f2c:	0e 94 8f 08 	call	0x111e	; 0x111e <__fp_split3>
     f30:	68 f3       	brcs	.-38     	; 0xf0c <__divsf3+0x8>

00000f32 <__divsf3_pse>:
     f32:	99 23       	and	r25, r25
     f34:	b1 f3       	breq	.-20     	; 0xf22 <__divsf3+0x1e>
     f36:	55 23       	and	r21, r21
     f38:	91 f3       	breq	.-28     	; 0xf1e <__divsf3+0x1a>
     f3a:	95 1b       	sub	r25, r21
     f3c:	55 0b       	sbc	r21, r21
     f3e:	bb 27       	eor	r27, r27
     f40:	aa 27       	eor	r26, r26
     f42:	62 17       	cp	r22, r18
     f44:	73 07       	cpc	r23, r19
     f46:	84 07       	cpc	r24, r20
     f48:	38 f0       	brcs	.+14     	; 0xf58 <__divsf3_pse+0x26>
     f4a:	9f 5f       	subi	r25, 0xFF	; 255
     f4c:	5f 4f       	sbci	r21, 0xFF	; 255
     f4e:	22 0f       	add	r18, r18
     f50:	33 1f       	adc	r19, r19
     f52:	44 1f       	adc	r20, r20
     f54:	aa 1f       	adc	r26, r26
     f56:	a9 f3       	breq	.-22     	; 0xf42 <__divsf3_pse+0x10>
     f58:	35 d0       	rcall	.+106    	; 0xfc4 <__divsf3_pse+0x92>
     f5a:	0e 2e       	mov	r0, r30
     f5c:	3a f0       	brmi	.+14     	; 0xf6c <__divsf3_pse+0x3a>
     f5e:	e0 e8       	ldi	r30, 0x80	; 128
     f60:	32 d0       	rcall	.+100    	; 0xfc6 <__divsf3_pse+0x94>
     f62:	91 50       	subi	r25, 0x01	; 1
     f64:	50 40       	sbci	r21, 0x00	; 0
     f66:	e6 95       	lsr	r30
     f68:	00 1c       	adc	r0, r0
     f6a:	ca f7       	brpl	.-14     	; 0xf5e <__divsf3_pse+0x2c>
     f6c:	2b d0       	rcall	.+86     	; 0xfc4 <__divsf3_pse+0x92>
     f6e:	fe 2f       	mov	r31, r30
     f70:	29 d0       	rcall	.+82     	; 0xfc4 <__divsf3_pse+0x92>
     f72:	66 0f       	add	r22, r22
     f74:	77 1f       	adc	r23, r23
     f76:	88 1f       	adc	r24, r24
     f78:	bb 1f       	adc	r27, r27
     f7a:	26 17       	cp	r18, r22
     f7c:	37 07       	cpc	r19, r23
     f7e:	48 07       	cpc	r20, r24
     f80:	ab 07       	cpc	r26, r27
     f82:	b0 e8       	ldi	r27, 0x80	; 128
     f84:	09 f0       	breq	.+2      	; 0xf88 <__divsf3_pse+0x56>
     f86:	bb 0b       	sbc	r27, r27
     f88:	80 2d       	mov	r24, r0
     f8a:	bf 01       	movw	r22, r30
     f8c:	ff 27       	eor	r31, r31
     f8e:	93 58       	subi	r25, 0x83	; 131
     f90:	5f 4f       	sbci	r21, 0xFF	; 255
     f92:	3a f0       	brmi	.+14     	; 0xfa2 <__divsf3_pse+0x70>
     f94:	9e 3f       	cpi	r25, 0xFE	; 254
     f96:	51 05       	cpc	r21, r1
     f98:	78 f0       	brcs	.+30     	; 0xfb8 <__divsf3_pse+0x86>
     f9a:	0c 94 67 08 	jmp	0x10ce	; 0x10ce <__fp_inf>
     f9e:	0c 94 b2 08 	jmp	0x1164	; 0x1164 <__fp_szero>
     fa2:	5f 3f       	cpi	r21, 0xFF	; 255
     fa4:	e4 f3       	brlt	.-8      	; 0xf9e <__divsf3_pse+0x6c>
     fa6:	98 3e       	cpi	r25, 0xE8	; 232
     fa8:	d4 f3       	brlt	.-12     	; 0xf9e <__divsf3_pse+0x6c>
     faa:	86 95       	lsr	r24
     fac:	77 95       	ror	r23
     fae:	67 95       	ror	r22
     fb0:	b7 95       	ror	r27
     fb2:	f7 95       	ror	r31
     fb4:	9f 5f       	subi	r25, 0xFF	; 255
     fb6:	c9 f7       	brne	.-14     	; 0xfaa <__divsf3_pse+0x78>
     fb8:	88 0f       	add	r24, r24
     fba:	91 1d       	adc	r25, r1
     fbc:	96 95       	lsr	r25
     fbe:	87 95       	ror	r24
     fc0:	97 f9       	bld	r25, 7
     fc2:	08 95       	ret
     fc4:	e1 e0       	ldi	r30, 0x01	; 1
     fc6:	66 0f       	add	r22, r22
     fc8:	77 1f       	adc	r23, r23
     fca:	88 1f       	adc	r24, r24
     fcc:	bb 1f       	adc	r27, r27
     fce:	62 17       	cp	r22, r18
     fd0:	73 07       	cpc	r23, r19
     fd2:	84 07       	cpc	r24, r20
     fd4:	ba 07       	cpc	r27, r26
     fd6:	20 f0       	brcs	.+8      	; 0xfe0 <__divsf3_pse+0xae>
     fd8:	62 1b       	sub	r22, r18
     fda:	73 0b       	sbc	r23, r19
     fdc:	84 0b       	sbc	r24, r20
     fde:	ba 0b       	sbc	r27, r26
     fe0:	ee 1f       	adc	r30, r30
     fe2:	88 f7       	brcc	.-30     	; 0xfc6 <__divsf3_pse+0x94>
     fe4:	e0 95       	com	r30
     fe6:	08 95       	ret

00000fe8 <__fixsfsi>:
     fe8:	0e 94 fb 07 	call	0xff6	; 0xff6 <__fixunssfsi>
     fec:	68 94       	set
     fee:	b1 11       	cpse	r27, r1
     ff0:	0c 94 b2 08 	jmp	0x1164	; 0x1164 <__fp_szero>
     ff4:	08 95       	ret

00000ff6 <__fixunssfsi>:
     ff6:	0e 94 97 08 	call	0x112e	; 0x112e <__fp_splitA>
     ffa:	88 f0       	brcs	.+34     	; 0x101e <__fixunssfsi+0x28>
     ffc:	9f 57       	subi	r25, 0x7F	; 127
     ffe:	98 f0       	brcs	.+38     	; 0x1026 <__fixunssfsi+0x30>
    1000:	b9 2f       	mov	r27, r25
    1002:	99 27       	eor	r25, r25
    1004:	b7 51       	subi	r27, 0x17	; 23
    1006:	b0 f0       	brcs	.+44     	; 0x1034 <__fixunssfsi+0x3e>
    1008:	e1 f0       	breq	.+56     	; 0x1042 <__fixunssfsi+0x4c>
    100a:	66 0f       	add	r22, r22
    100c:	77 1f       	adc	r23, r23
    100e:	88 1f       	adc	r24, r24
    1010:	99 1f       	adc	r25, r25
    1012:	1a f0       	brmi	.+6      	; 0x101a <__fixunssfsi+0x24>
    1014:	ba 95       	dec	r27
    1016:	c9 f7       	brne	.-14     	; 0x100a <__fixunssfsi+0x14>
    1018:	14 c0       	rjmp	.+40     	; 0x1042 <__fixunssfsi+0x4c>
    101a:	b1 30       	cpi	r27, 0x01	; 1
    101c:	91 f0       	breq	.+36     	; 0x1042 <__fixunssfsi+0x4c>
    101e:	0e 94 b1 08 	call	0x1162	; 0x1162 <__fp_zero>
    1022:	b1 e0       	ldi	r27, 0x01	; 1
    1024:	08 95       	ret
    1026:	0c 94 b1 08 	jmp	0x1162	; 0x1162 <__fp_zero>
    102a:	67 2f       	mov	r22, r23
    102c:	78 2f       	mov	r23, r24
    102e:	88 27       	eor	r24, r24
    1030:	b8 5f       	subi	r27, 0xF8	; 248
    1032:	39 f0       	breq	.+14     	; 0x1042 <__fixunssfsi+0x4c>
    1034:	b9 3f       	cpi	r27, 0xF9	; 249
    1036:	cc f3       	brlt	.-14     	; 0x102a <__fixunssfsi+0x34>
    1038:	86 95       	lsr	r24
    103a:	77 95       	ror	r23
    103c:	67 95       	ror	r22
    103e:	b3 95       	inc	r27
    1040:	d9 f7       	brne	.-10     	; 0x1038 <__fixunssfsi+0x42>
    1042:	3e f4       	brtc	.+14     	; 0x1052 <__fixunssfsi+0x5c>
    1044:	90 95       	com	r25
    1046:	80 95       	com	r24
    1048:	70 95       	com	r23
    104a:	61 95       	neg	r22
    104c:	7f 4f       	sbci	r23, 0xFF	; 255
    104e:	8f 4f       	sbci	r24, 0xFF	; 255
    1050:	9f 4f       	sbci	r25, 0xFF	; 255
    1052:	08 95       	ret

00001054 <__floatunsisf>:
    1054:	e8 94       	clt
    1056:	09 c0       	rjmp	.+18     	; 0x106a <__floatsisf+0x12>

00001058 <__floatsisf>:
    1058:	97 fb       	bst	r25, 7
    105a:	3e f4       	brtc	.+14     	; 0x106a <__floatsisf+0x12>
    105c:	90 95       	com	r25
    105e:	80 95       	com	r24
    1060:	70 95       	com	r23
    1062:	61 95       	neg	r22
    1064:	7f 4f       	sbci	r23, 0xFF	; 255
    1066:	8f 4f       	sbci	r24, 0xFF	; 255
    1068:	9f 4f       	sbci	r25, 0xFF	; 255
    106a:	99 23       	and	r25, r25
    106c:	a9 f0       	breq	.+42     	; 0x1098 <__floatsisf+0x40>
    106e:	f9 2f       	mov	r31, r25
    1070:	96 e9       	ldi	r25, 0x96	; 150
    1072:	bb 27       	eor	r27, r27
    1074:	93 95       	inc	r25
    1076:	f6 95       	lsr	r31
    1078:	87 95       	ror	r24
    107a:	77 95       	ror	r23
    107c:	67 95       	ror	r22
    107e:	b7 95       	ror	r27
    1080:	f1 11       	cpse	r31, r1
    1082:	f8 cf       	rjmp	.-16     	; 0x1074 <__floatsisf+0x1c>
    1084:	fa f4       	brpl	.+62     	; 0x10c4 <__floatsisf+0x6c>
    1086:	bb 0f       	add	r27, r27
    1088:	11 f4       	brne	.+4      	; 0x108e <__floatsisf+0x36>
    108a:	60 ff       	sbrs	r22, 0
    108c:	1b c0       	rjmp	.+54     	; 0x10c4 <__floatsisf+0x6c>
    108e:	6f 5f       	subi	r22, 0xFF	; 255
    1090:	7f 4f       	sbci	r23, 0xFF	; 255
    1092:	8f 4f       	sbci	r24, 0xFF	; 255
    1094:	9f 4f       	sbci	r25, 0xFF	; 255
    1096:	16 c0       	rjmp	.+44     	; 0x10c4 <__floatsisf+0x6c>
    1098:	88 23       	and	r24, r24
    109a:	11 f0       	breq	.+4      	; 0x10a0 <__floatsisf+0x48>
    109c:	96 e9       	ldi	r25, 0x96	; 150
    109e:	11 c0       	rjmp	.+34     	; 0x10c2 <__floatsisf+0x6a>
    10a0:	77 23       	and	r23, r23
    10a2:	21 f0       	breq	.+8      	; 0x10ac <__floatsisf+0x54>
    10a4:	9e e8       	ldi	r25, 0x8E	; 142
    10a6:	87 2f       	mov	r24, r23
    10a8:	76 2f       	mov	r23, r22
    10aa:	05 c0       	rjmp	.+10     	; 0x10b6 <__floatsisf+0x5e>
    10ac:	66 23       	and	r22, r22
    10ae:	71 f0       	breq	.+28     	; 0x10cc <__floatsisf+0x74>
    10b0:	96 e8       	ldi	r25, 0x86	; 134
    10b2:	86 2f       	mov	r24, r22
    10b4:	70 e0       	ldi	r23, 0x00	; 0
    10b6:	60 e0       	ldi	r22, 0x00	; 0
    10b8:	2a f0       	brmi	.+10     	; 0x10c4 <__floatsisf+0x6c>
    10ba:	9a 95       	dec	r25
    10bc:	66 0f       	add	r22, r22
    10be:	77 1f       	adc	r23, r23
    10c0:	88 1f       	adc	r24, r24
    10c2:	da f7       	brpl	.-10     	; 0x10ba <__floatsisf+0x62>
    10c4:	88 0f       	add	r24, r24
    10c6:	96 95       	lsr	r25
    10c8:	87 95       	ror	r24
    10ca:	97 f9       	bld	r25, 7
    10cc:	08 95       	ret

000010ce <__fp_inf>:
    10ce:	97 f9       	bld	r25, 7
    10d0:	9f 67       	ori	r25, 0x7F	; 127
    10d2:	80 e8       	ldi	r24, 0x80	; 128
    10d4:	70 e0       	ldi	r23, 0x00	; 0
    10d6:	60 e0       	ldi	r22, 0x00	; 0
    10d8:	08 95       	ret

000010da <__fp_nan>:
    10da:	9f ef       	ldi	r25, 0xFF	; 255
    10dc:	80 ec       	ldi	r24, 0xC0	; 192
    10de:	08 95       	ret

000010e0 <__fp_pscA>:
    10e0:	00 24       	eor	r0, r0
    10e2:	0a 94       	dec	r0
    10e4:	16 16       	cp	r1, r22
    10e6:	17 06       	cpc	r1, r23
    10e8:	18 06       	cpc	r1, r24
    10ea:	09 06       	cpc	r0, r25
    10ec:	08 95       	ret

000010ee <__fp_pscB>:
    10ee:	00 24       	eor	r0, r0
    10f0:	0a 94       	dec	r0
    10f2:	12 16       	cp	r1, r18
    10f4:	13 06       	cpc	r1, r19
    10f6:	14 06       	cpc	r1, r20
    10f8:	05 06       	cpc	r0, r21
    10fa:	08 95       	ret

000010fc <__fp_round>:
    10fc:	09 2e       	mov	r0, r25
    10fe:	03 94       	inc	r0
    1100:	00 0c       	add	r0, r0
    1102:	11 f4       	brne	.+4      	; 0x1108 <__fp_round+0xc>
    1104:	88 23       	and	r24, r24
    1106:	52 f0       	brmi	.+20     	; 0x111c <__fp_round+0x20>
    1108:	bb 0f       	add	r27, r27
    110a:	40 f4       	brcc	.+16     	; 0x111c <__fp_round+0x20>
    110c:	bf 2b       	or	r27, r31
    110e:	11 f4       	brne	.+4      	; 0x1114 <__fp_round+0x18>
    1110:	60 ff       	sbrs	r22, 0
    1112:	04 c0       	rjmp	.+8      	; 0x111c <__fp_round+0x20>
    1114:	6f 5f       	subi	r22, 0xFF	; 255
    1116:	7f 4f       	sbci	r23, 0xFF	; 255
    1118:	8f 4f       	sbci	r24, 0xFF	; 255
    111a:	9f 4f       	sbci	r25, 0xFF	; 255
    111c:	08 95       	ret

0000111e <__fp_split3>:
    111e:	57 fd       	sbrc	r21, 7
    1120:	90 58       	subi	r25, 0x80	; 128
    1122:	44 0f       	add	r20, r20
    1124:	55 1f       	adc	r21, r21
    1126:	59 f0       	breq	.+22     	; 0x113e <__fp_splitA+0x10>
    1128:	5f 3f       	cpi	r21, 0xFF	; 255
    112a:	71 f0       	breq	.+28     	; 0x1148 <__fp_splitA+0x1a>
    112c:	47 95       	ror	r20

0000112e <__fp_splitA>:
    112e:	88 0f       	add	r24, r24
    1130:	97 fb       	bst	r25, 7
    1132:	99 1f       	adc	r25, r25
    1134:	61 f0       	breq	.+24     	; 0x114e <__fp_splitA+0x20>
    1136:	9f 3f       	cpi	r25, 0xFF	; 255
    1138:	79 f0       	breq	.+30     	; 0x1158 <__fp_splitA+0x2a>
    113a:	87 95       	ror	r24
    113c:	08 95       	ret
    113e:	12 16       	cp	r1, r18
    1140:	13 06       	cpc	r1, r19
    1142:	14 06       	cpc	r1, r20
    1144:	55 1f       	adc	r21, r21
    1146:	f2 cf       	rjmp	.-28     	; 0x112c <__fp_split3+0xe>
    1148:	46 95       	lsr	r20
    114a:	f1 df       	rcall	.-30     	; 0x112e <__fp_splitA>
    114c:	08 c0       	rjmp	.+16     	; 0x115e <__fp_splitA+0x30>
    114e:	16 16       	cp	r1, r22
    1150:	17 06       	cpc	r1, r23
    1152:	18 06       	cpc	r1, r24
    1154:	99 1f       	adc	r25, r25
    1156:	f1 cf       	rjmp	.-30     	; 0x113a <__fp_splitA+0xc>
    1158:	86 95       	lsr	r24
    115a:	71 05       	cpc	r23, r1
    115c:	61 05       	cpc	r22, r1
    115e:	08 94       	sec
    1160:	08 95       	ret

00001162 <__fp_zero>:
    1162:	e8 94       	clt

00001164 <__fp_szero>:
    1164:	bb 27       	eor	r27, r27
    1166:	66 27       	eor	r22, r22
    1168:	77 27       	eor	r23, r23
    116a:	cb 01       	movw	r24, r22
    116c:	97 f9       	bld	r25, 7
    116e:	08 95       	ret

00001170 <__mulsf3>:
    1170:	0e 94 cb 08 	call	0x1196	; 0x1196 <__mulsf3x>
    1174:	0c 94 7e 08 	jmp	0x10fc	; 0x10fc <__fp_round>
    1178:	0e 94 70 08 	call	0x10e0	; 0x10e0 <__fp_pscA>
    117c:	38 f0       	brcs	.+14     	; 0x118c <__mulsf3+0x1c>
    117e:	0e 94 77 08 	call	0x10ee	; 0x10ee <__fp_pscB>
    1182:	20 f0       	brcs	.+8      	; 0x118c <__mulsf3+0x1c>
    1184:	95 23       	and	r25, r21
    1186:	11 f0       	breq	.+4      	; 0x118c <__mulsf3+0x1c>
    1188:	0c 94 67 08 	jmp	0x10ce	; 0x10ce <__fp_inf>
    118c:	0c 94 6d 08 	jmp	0x10da	; 0x10da <__fp_nan>
    1190:	11 24       	eor	r1, r1
    1192:	0c 94 b2 08 	jmp	0x1164	; 0x1164 <__fp_szero>

00001196 <__mulsf3x>:
    1196:	0e 94 8f 08 	call	0x111e	; 0x111e <__fp_split3>
    119a:	70 f3       	brcs	.-36     	; 0x1178 <__mulsf3+0x8>

0000119c <__mulsf3_pse>:
    119c:	95 9f       	mul	r25, r21
    119e:	c1 f3       	breq	.-16     	; 0x1190 <__mulsf3+0x20>
    11a0:	95 0f       	add	r25, r21
    11a2:	50 e0       	ldi	r21, 0x00	; 0
    11a4:	55 1f       	adc	r21, r21
    11a6:	62 9f       	mul	r22, r18
    11a8:	f0 01       	movw	r30, r0
    11aa:	72 9f       	mul	r23, r18
    11ac:	bb 27       	eor	r27, r27
    11ae:	f0 0d       	add	r31, r0
    11b0:	b1 1d       	adc	r27, r1
    11b2:	63 9f       	mul	r22, r19
    11b4:	aa 27       	eor	r26, r26
    11b6:	f0 0d       	add	r31, r0
    11b8:	b1 1d       	adc	r27, r1
    11ba:	aa 1f       	adc	r26, r26
    11bc:	64 9f       	mul	r22, r20
    11be:	66 27       	eor	r22, r22
    11c0:	b0 0d       	add	r27, r0
    11c2:	a1 1d       	adc	r26, r1
    11c4:	66 1f       	adc	r22, r22
    11c6:	82 9f       	mul	r24, r18
    11c8:	22 27       	eor	r18, r18
    11ca:	b0 0d       	add	r27, r0
    11cc:	a1 1d       	adc	r26, r1
    11ce:	62 1f       	adc	r22, r18
    11d0:	73 9f       	mul	r23, r19
    11d2:	b0 0d       	add	r27, r0
    11d4:	a1 1d       	adc	r26, r1
    11d6:	62 1f       	adc	r22, r18
    11d8:	83 9f       	mul	r24, r19
    11da:	a0 0d       	add	r26, r0
    11dc:	61 1d       	adc	r22, r1
    11de:	22 1f       	adc	r18, r18
    11e0:	74 9f       	mul	r23, r20
    11e2:	33 27       	eor	r19, r19
    11e4:	a0 0d       	add	r26, r0
    11e6:	61 1d       	adc	r22, r1
    11e8:	23 1f       	adc	r18, r19
    11ea:	84 9f       	mul	r24, r20
    11ec:	60 0d       	add	r22, r0
    11ee:	21 1d       	adc	r18, r1
    11f0:	82 2f       	mov	r24, r18
    11f2:	76 2f       	mov	r23, r22
    11f4:	6a 2f       	mov	r22, r26
    11f6:	11 24       	eor	r1, r1
    11f8:	9f 57       	subi	r25, 0x7F	; 127
    11fa:	50 40       	sbci	r21, 0x00	; 0
    11fc:	9a f0       	brmi	.+38     	; 0x1224 <__mulsf3_pse+0x88>
    11fe:	f1 f0       	breq	.+60     	; 0x123c <__mulsf3_pse+0xa0>
    1200:	88 23       	and	r24, r24
    1202:	4a f0       	brmi	.+18     	; 0x1216 <__mulsf3_pse+0x7a>
    1204:	ee 0f       	add	r30, r30
    1206:	ff 1f       	adc	r31, r31
    1208:	bb 1f       	adc	r27, r27
    120a:	66 1f       	adc	r22, r22
    120c:	77 1f       	adc	r23, r23
    120e:	88 1f       	adc	r24, r24
    1210:	91 50       	subi	r25, 0x01	; 1
    1212:	50 40       	sbci	r21, 0x00	; 0
    1214:	a9 f7       	brne	.-22     	; 0x1200 <__mulsf3_pse+0x64>
    1216:	9e 3f       	cpi	r25, 0xFE	; 254
    1218:	51 05       	cpc	r21, r1
    121a:	80 f0       	brcs	.+32     	; 0x123c <__mulsf3_pse+0xa0>
    121c:	0c 94 67 08 	jmp	0x10ce	; 0x10ce <__fp_inf>
    1220:	0c 94 b2 08 	jmp	0x1164	; 0x1164 <__fp_szero>
    1224:	5f 3f       	cpi	r21, 0xFF	; 255
    1226:	e4 f3       	brlt	.-8      	; 0x1220 <__mulsf3_pse+0x84>
    1228:	98 3e       	cpi	r25, 0xE8	; 232
    122a:	d4 f3       	brlt	.-12     	; 0x1220 <__mulsf3_pse+0x84>
    122c:	86 95       	lsr	r24
    122e:	77 95       	ror	r23
    1230:	67 95       	ror	r22
    1232:	b7 95       	ror	r27
    1234:	f7 95       	ror	r31
    1236:	e7 95       	ror	r30
    1238:	9f 5f       	subi	r25, 0xFF	; 255
    123a:	c1 f7       	brne	.-16     	; 0x122c <__mulsf3_pse+0x90>
    123c:	fe 2b       	or	r31, r30
    123e:	88 0f       	add	r24, r24
    1240:	91 1d       	adc	r25, r1
    1242:	96 95       	lsr	r25
    1244:	87 95       	ror	r24
    1246:	97 f9       	bld	r25, 7
    1248:	08 95       	ret
    124a:	19 f4       	brne	.+6      	; 0x1252 <__mulsf3_pse+0xb6>
    124c:	16 f4       	brtc	.+4      	; 0x1252 <__mulsf3_pse+0xb6>
    124e:	0c 94 6d 08 	jmp	0x10da	; 0x10da <__fp_nan>
    1252:	0c 94 6b 09 	jmp	0x12d6	; 0x12d6 <__fp_mpack>

00001256 <sqrt>:
    1256:	0e 94 97 08 	call	0x112e	; 0x112e <__fp_splitA>
    125a:	b8 f3       	brcs	.-18     	; 0x124a <__mulsf3_pse+0xae>
    125c:	99 23       	and	r25, r25
    125e:	c9 f3       	breq	.-14     	; 0x1252 <__mulsf3_pse+0xb6>
    1260:	b6 f3       	brts	.-20     	; 0x124e <__mulsf3_pse+0xb2>
    1262:	9f 57       	subi	r25, 0x7F	; 127
    1264:	55 0b       	sbc	r21, r21
    1266:	87 ff       	sbrs	r24, 7
    1268:	0e 94 79 09 	call	0x12f2	; 0x12f2 <__fp_norm2>
    126c:	00 24       	eor	r0, r0
    126e:	a0 e6       	ldi	r26, 0x60	; 96
    1270:	40 ea       	ldi	r20, 0xA0	; 160
    1272:	90 01       	movw	r18, r0
    1274:	80 58       	subi	r24, 0x80	; 128
    1276:	56 95       	lsr	r21
    1278:	97 95       	ror	r25
    127a:	28 f4       	brcc	.+10     	; 0x1286 <sqrt+0x30>
    127c:	80 5c       	subi	r24, 0xC0	; 192
    127e:	66 0f       	add	r22, r22
    1280:	77 1f       	adc	r23, r23
    1282:	88 1f       	adc	r24, r24
    1284:	20 f0       	brcs	.+8      	; 0x128e <sqrt+0x38>
    1286:	26 17       	cp	r18, r22
    1288:	37 07       	cpc	r19, r23
    128a:	48 07       	cpc	r20, r24
    128c:	30 f4       	brcc	.+12     	; 0x129a <sqrt+0x44>
    128e:	62 1b       	sub	r22, r18
    1290:	73 0b       	sbc	r23, r19
    1292:	84 0b       	sbc	r24, r20
    1294:	20 29       	or	r18, r0
    1296:	31 29       	or	r19, r1
    1298:	4a 2b       	or	r20, r26
    129a:	a6 95       	lsr	r26
    129c:	17 94       	ror	r1
    129e:	07 94       	ror	r0
    12a0:	20 25       	eor	r18, r0
    12a2:	31 25       	eor	r19, r1
    12a4:	4a 27       	eor	r20, r26
    12a6:	58 f7       	brcc	.-42     	; 0x127e <sqrt+0x28>
    12a8:	66 0f       	add	r22, r22
    12aa:	77 1f       	adc	r23, r23
    12ac:	88 1f       	adc	r24, r24
    12ae:	20 f0       	brcs	.+8      	; 0x12b8 <sqrt+0x62>
    12b0:	26 17       	cp	r18, r22
    12b2:	37 07       	cpc	r19, r23
    12b4:	48 07       	cpc	r20, r24
    12b6:	30 f4       	brcc	.+12     	; 0x12c4 <sqrt+0x6e>
    12b8:	62 0b       	sbc	r22, r18
    12ba:	73 0b       	sbc	r23, r19
    12bc:	84 0b       	sbc	r24, r20
    12be:	20 0d       	add	r18, r0
    12c0:	31 1d       	adc	r19, r1
    12c2:	41 1d       	adc	r20, r1
    12c4:	a0 95       	com	r26
    12c6:	81 f7       	brne	.-32     	; 0x12a8 <sqrt+0x52>
    12c8:	b9 01       	movw	r22, r18
    12ca:	84 2f       	mov	r24, r20
    12cc:	91 58       	subi	r25, 0x81	; 129
    12ce:	88 0f       	add	r24, r24
    12d0:	96 95       	lsr	r25
    12d2:	87 95       	ror	r24
    12d4:	08 95       	ret

000012d6 <__fp_mpack>:
    12d6:	9f 3f       	cpi	r25, 0xFF	; 255
    12d8:	31 f0       	breq	.+12     	; 0x12e6 <__fp_mpack_finite+0xc>

000012da <__fp_mpack_finite>:
    12da:	91 50       	subi	r25, 0x01	; 1
    12dc:	20 f4       	brcc	.+8      	; 0x12e6 <__fp_mpack_finite+0xc>
    12de:	87 95       	ror	r24
    12e0:	77 95       	ror	r23
    12e2:	67 95       	ror	r22
    12e4:	b7 95       	ror	r27
    12e6:	88 0f       	add	r24, r24
    12e8:	91 1d       	adc	r25, r1
    12ea:	96 95       	lsr	r25
    12ec:	87 95       	ror	r24
    12ee:	97 f9       	bld	r25, 7
    12f0:	08 95       	ret

000012f2 <__fp_norm2>:
    12f2:	91 50       	subi	r25, 0x01	; 1
    12f4:	50 40       	sbci	r21, 0x00	; 0
    12f6:	66 0f       	add	r22, r22
    12f8:	77 1f       	adc	r23, r23
    12fa:	88 1f       	adc	r24, r24
    12fc:	d2 f7       	brpl	.-12     	; 0x12f2 <__fp_norm2>
    12fe:	08 95       	ret

00001300 <__udivmodhi4>:
    1300:	aa 1b       	sub	r26, r26
    1302:	bb 1b       	sub	r27, r27
    1304:	51 e1       	ldi	r21, 0x11	; 17
    1306:	07 c0       	rjmp	.+14     	; 0x1316 <__udivmodhi4_ep>

00001308 <__udivmodhi4_loop>:
    1308:	aa 1f       	adc	r26, r26
    130a:	bb 1f       	adc	r27, r27
    130c:	a6 17       	cp	r26, r22
    130e:	b7 07       	cpc	r27, r23
    1310:	10 f0       	brcs	.+4      	; 0x1316 <__udivmodhi4_ep>
    1312:	a6 1b       	sub	r26, r22
    1314:	b7 0b       	sbc	r27, r23

00001316 <__udivmodhi4_ep>:
    1316:	88 1f       	adc	r24, r24
    1318:	99 1f       	adc	r25, r25
    131a:	5a 95       	dec	r21
    131c:	a9 f7       	brne	.-22     	; 0x1308 <__udivmodhi4_loop>
    131e:	80 95       	com	r24
    1320:	90 95       	com	r25
    1322:	bc 01       	movw	r22, r24
    1324:	cd 01       	movw	r24, r26
    1326:	08 95       	ret

00001328 <__udivmodsi4>:
    1328:	a1 e2       	ldi	r26, 0x21	; 33
    132a:	1a 2e       	mov	r1, r26
    132c:	aa 1b       	sub	r26, r26
    132e:	bb 1b       	sub	r27, r27
    1330:	fd 01       	movw	r30, r26
    1332:	0d c0       	rjmp	.+26     	; 0x134e <__udivmodsi4_ep>

00001334 <__udivmodsi4_loop>:
    1334:	aa 1f       	adc	r26, r26
    1336:	bb 1f       	adc	r27, r27
    1338:	ee 1f       	adc	r30, r30
    133a:	ff 1f       	adc	r31, r31
    133c:	a2 17       	cp	r26, r18
    133e:	b3 07       	cpc	r27, r19
    1340:	e4 07       	cpc	r30, r20
    1342:	f5 07       	cpc	r31, r21
    1344:	20 f0       	brcs	.+8      	; 0x134e <__udivmodsi4_ep>
    1346:	a2 1b       	sub	r26, r18
    1348:	b3 0b       	sbc	r27, r19
    134a:	e4 0b       	sbc	r30, r20
    134c:	f5 0b       	sbc	r31, r21

0000134e <__udivmodsi4_ep>:
    134e:	66 1f       	adc	r22, r22
    1350:	77 1f       	adc	r23, r23
    1352:	88 1f       	adc	r24, r24
    1354:	99 1f       	adc	r25, r25
    1356:	1a 94       	dec	r1
    1358:	69 f7       	brne	.-38     	; 0x1334 <__udivmodsi4_loop>
    135a:	60 95       	com	r22
    135c:	70 95       	com	r23
    135e:	80 95       	com	r24
    1360:	90 95       	com	r25
    1362:	9b 01       	movw	r18, r22
    1364:	ac 01       	movw	r20, r24
    1366:	bd 01       	movw	r22, r26
    1368:	cf 01       	movw	r24, r30
    136a:	08 95       	ret

0000136c <__divmodsi4>:
    136c:	05 2e       	mov	r0, r21
    136e:	97 fb       	bst	r25, 7
    1370:	1e f4       	brtc	.+6      	; 0x1378 <__divmodsi4+0xc>
    1372:	00 94       	com	r0
    1374:	0e 94 cd 09 	call	0x139a	; 0x139a <__negsi2>
    1378:	57 fd       	sbrc	r21, 7
    137a:	07 d0       	rcall	.+14     	; 0x138a <__divmodsi4_neg2>
    137c:	0e 94 94 09 	call	0x1328	; 0x1328 <__udivmodsi4>
    1380:	07 fc       	sbrc	r0, 7
    1382:	03 d0       	rcall	.+6      	; 0x138a <__divmodsi4_neg2>
    1384:	4e f4       	brtc	.+18     	; 0x1398 <__divmodsi4_exit>
    1386:	0c 94 cd 09 	jmp	0x139a	; 0x139a <__negsi2>

0000138a <__divmodsi4_neg2>:
    138a:	50 95       	com	r21
    138c:	40 95       	com	r20
    138e:	30 95       	com	r19
    1390:	21 95       	neg	r18
    1392:	3f 4f       	sbci	r19, 0xFF	; 255
    1394:	4f 4f       	sbci	r20, 0xFF	; 255
    1396:	5f 4f       	sbci	r21, 0xFF	; 255

00001398 <__divmodsi4_exit>:
    1398:	08 95       	ret

0000139a <__negsi2>:
    139a:	90 95       	com	r25
    139c:	80 95       	com	r24
    139e:	70 95       	com	r23
    13a0:	61 95       	neg	r22
    13a2:	7f 4f       	sbci	r23, 0xFF	; 255
    13a4:	8f 4f       	sbci	r24, 0xFF	; 255
    13a6:	9f 4f       	sbci	r25, 0xFF	; 255
    13a8:	08 95       	ret

000013aa <__itoa_ncheck>:
    13aa:	bb 27       	eor	r27, r27
    13ac:	4a 30       	cpi	r20, 0x0A	; 10
    13ae:	31 f4       	brne	.+12     	; 0x13bc <__itoa_ncheck+0x12>
    13b0:	99 23       	and	r25, r25
    13b2:	22 f4       	brpl	.+8      	; 0x13bc <__itoa_ncheck+0x12>
    13b4:	bd e2       	ldi	r27, 0x2D	; 45
    13b6:	90 95       	com	r25
    13b8:	81 95       	neg	r24
    13ba:	9f 4f       	sbci	r25, 0xFF	; 255
    13bc:	0c 94 12 0a 	jmp	0x1424	; 0x1424 <__utoa_common>

000013c0 <__ltoa_ncheck>:
    13c0:	bb 27       	eor	r27, r27
    13c2:	2a 30       	cpi	r18, 0x0A	; 10
    13c4:	51 f4       	brne	.+20     	; 0x13da <__ltoa_ncheck+0x1a>
    13c6:	99 23       	and	r25, r25
    13c8:	42 f4       	brpl	.+16     	; 0x13da <__ltoa_ncheck+0x1a>
    13ca:	bd e2       	ldi	r27, 0x2D	; 45
    13cc:	90 95       	com	r25
    13ce:	80 95       	com	r24
    13d0:	70 95       	com	r23
    13d2:	61 95       	neg	r22
    13d4:	7f 4f       	sbci	r23, 0xFF	; 255
    13d6:	8f 4f       	sbci	r24, 0xFF	; 255
    13d8:	9f 4f       	sbci	r25, 0xFF	; 255
    13da:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__ultoa_common>

000013de <__ultoa_ncheck>:
    13de:	bb 27       	eor	r27, r27

000013e0 <__ultoa_common>:
    13e0:	fa 01       	movw	r30, r20
    13e2:	a6 2f       	mov	r26, r22
    13e4:	62 17       	cp	r22, r18
    13e6:	71 05       	cpc	r23, r1
    13e8:	81 05       	cpc	r24, r1
    13ea:	91 05       	cpc	r25, r1
    13ec:	33 0b       	sbc	r19, r19
    13ee:	30 fb       	bst	r19, 0
    13f0:	66 f0       	brts	.+24     	; 0x140a <__ultoa_common+0x2a>
    13f2:	aa 27       	eor	r26, r26
    13f4:	66 0f       	add	r22, r22
    13f6:	77 1f       	adc	r23, r23
    13f8:	88 1f       	adc	r24, r24
    13fa:	99 1f       	adc	r25, r25
    13fc:	aa 1f       	adc	r26, r26
    13fe:	a2 17       	cp	r26, r18
    1400:	10 f0       	brcs	.+4      	; 0x1406 <__ultoa_common+0x26>
    1402:	a2 1b       	sub	r26, r18
    1404:	63 95       	inc	r22
    1406:	38 50       	subi	r19, 0x08	; 8
    1408:	a9 f7       	brne	.-22     	; 0x13f4 <__ultoa_common+0x14>
    140a:	a0 5d       	subi	r26, 0xD0	; 208
    140c:	aa 33       	cpi	r26, 0x3A	; 58
    140e:	08 f0       	brcs	.+2      	; 0x1412 <__ultoa_common+0x32>
    1410:	a9 5d       	subi	r26, 0xD9	; 217
    1412:	a1 93       	st	Z+, r26
    1414:	36 f7       	brtc	.-52     	; 0x13e2 <__ultoa_common+0x2>
    1416:	b1 11       	cpse	r27, r1
    1418:	b1 93       	st	Z+, r27
    141a:	10 82       	st	Z, r1
    141c:	ca 01       	movw	r24, r20
    141e:	0c 94 2b 0a 	jmp	0x1456	; 0x1456 <strrev>

00001422 <__utoa_ncheck>:
    1422:	bb 27       	eor	r27, r27

00001424 <__utoa_common>:
    1424:	fb 01       	movw	r30, r22
    1426:	55 27       	eor	r21, r21
    1428:	aa 27       	eor	r26, r26
    142a:	88 0f       	add	r24, r24
    142c:	99 1f       	adc	r25, r25
    142e:	aa 1f       	adc	r26, r26
    1430:	a4 17       	cp	r26, r20
    1432:	10 f0       	brcs	.+4      	; 0x1438 <__utoa_common+0x14>
    1434:	a4 1b       	sub	r26, r20
    1436:	83 95       	inc	r24
    1438:	50 51       	subi	r21, 0x10	; 16
    143a:	b9 f7       	brne	.-18     	; 0x142a <__utoa_common+0x6>
    143c:	a0 5d       	subi	r26, 0xD0	; 208
    143e:	aa 33       	cpi	r26, 0x3A	; 58
    1440:	08 f0       	brcs	.+2      	; 0x1444 <__utoa_common+0x20>
    1442:	a9 5d       	subi	r26, 0xD9	; 217
    1444:	a1 93       	st	Z+, r26
    1446:	00 97       	sbiw	r24, 0x00	; 0
    1448:	79 f7       	brne	.-34     	; 0x1428 <__utoa_common+0x4>
    144a:	b1 11       	cpse	r27, r1
    144c:	b1 93       	st	Z+, r27
    144e:	11 92       	st	Z+, r1
    1450:	cb 01       	movw	r24, r22
    1452:	0c 94 2b 0a 	jmp	0x1456	; 0x1456 <strrev>

00001456 <strrev>:
    1456:	dc 01       	movw	r26, r24
    1458:	fc 01       	movw	r30, r24
    145a:	67 2f       	mov	r22, r23
    145c:	71 91       	ld	r23, Z+
    145e:	77 23       	and	r23, r23
    1460:	e1 f7       	brne	.-8      	; 0x145a <strrev+0x4>
    1462:	32 97       	sbiw	r30, 0x02	; 2
    1464:	04 c0       	rjmp	.+8      	; 0x146e <strrev+0x18>
    1466:	7c 91       	ld	r23, X
    1468:	6d 93       	st	X+, r22
    146a:	70 83       	st	Z, r23
    146c:	62 91       	ld	r22, -Z
    146e:	ae 17       	cp	r26, r30
    1470:	bf 07       	cpc	r27, r31
    1472:	c8 f3       	brcs	.-14     	; 0x1466 <strrev+0x10>
    1474:	08 95       	ret

00001476 <_exit>:
    1476:	f8 94       	cli

00001478 <__stop_program>:
    1478:	ff cf       	rjmp	.-2      	; 0x1478 <__stop_program>
