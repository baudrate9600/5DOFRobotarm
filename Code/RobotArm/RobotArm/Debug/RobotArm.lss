
RobotArm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800100  00001616  000016aa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001616  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000011  00800118  00800118  000016c2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000016c2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001720  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  00001760  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000130c  00000000  00000000  00001870  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a8b  00000000  00000000  00002b7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008ef  00000000  00000000  00003607  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000308  00000000  00000000  00003ef8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008c6  00000000  00000000  00004200  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009c1  00000000  00000000  00004ac6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  00005487  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 75 00 	jmp	0xea	; 0xea <__ctors_end>
       4:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
       8:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
       c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      10:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      14:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      18:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      1c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      20:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      24:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      28:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      2c:	0c 94 cf 03 	jmp	0x79e	; 0x79e <__vector_11>
      30:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      34:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      38:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      3c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      40:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      44:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      48:	0c 94 9e 00 	jmp	0x13c	; 0x13c <__vector_18>
      4c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      50:	0c 94 94 00 	jmp	0x128	; 0x128 <__vector_20>
      54:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      58:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      5c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      60:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      64:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      68:	07 63       	ori	r16, 0x37	; 55
      6a:	42 36       	cpi	r20, 0x62	; 98
      6c:	b7 9b       	sbis	0x16, 7	; 22
      6e:	d8 a7       	std	Y+40, r29	; 0x28
      70:	1a 39       	cpi	r17, 0x9A	; 154
      72:	68 56       	subi	r22, 0x68	; 104
      74:	18 ae       	std	Y+56, r1	; 0x38
      76:	ba ab       	std	Y+50, r27	; 0x32
      78:	55 8c       	ldd	r5, Z+29	; 0x1d
      7a:	1d 3c       	cpi	r17, 0xCD	; 205
      7c:	b7 cc       	rjmp	.-1682   	; 0xfffff9ec <__eeprom_end+0xff7ef9ec>
      7e:	57 63       	ori	r21, 0x37	; 55
      80:	bd 6d       	ori	r27, 0xDD	; 221
      82:	ed fd       	.word	0xfded	; ????
      84:	75 3e       	cpi	r23, 0xE5	; 229
      86:	f6 17       	cp	r31, r22
      88:	72 31       	cpi	r23, 0x12	; 18
      8a:	bf 00       	.word	0x00bf	; ????
      8c:	00 00       	nop
      8e:	80 3f       	cpi	r24, 0xF0	; 240
      90:	08 00       	.word	0x0008	; ????
      92:	00 00       	nop
      94:	be 92       	st	-X, r11
      96:	24 49       	sbci	r18, 0x94	; 148
      98:	12 3e       	cpi	r17, 0xE2	; 226
      9a:	ab aa       	std	Y+51, r10	; 0x33
      9c:	aa 2a       	or	r10, r26
      9e:	be cd       	rjmp	.-1156   	; 0xfffffc1c <__eeprom_end+0xff7efc1c>
      a0:	cc cc       	rjmp	.-1640   	; 0xfffffa3a <__eeprom_end+0xff7efa3a>
      a2:	4c 3e       	cpi	r20, 0xEC	; 236
      a4:	00 00       	nop
      a6:	00 80       	ld	r0, Z
      a8:	be ab       	std	Y+54, r27	; 0x36
      aa:	aa aa       	std	Y+50, r10	; 0x32
      ac:	aa 3e       	cpi	r26, 0xEA	; 234
      ae:	00 00       	nop
      b0:	00 00       	nop
      b2:	bf 00       	.word	0x00bf	; ????
      b4:	00 00       	nop
      b6:	80 3f       	cpi	r24, 0xF0	; 240
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	00 08       	sbc	r0, r0
      be:	41 78       	andi	r20, 0x81	; 129
      c0:	d3 bb       	out	0x13, r29	; 19
      c2:	43 87       	std	Z+11, r20	; 0x0b
      c4:	d1 13       	cpse	r29, r17
      c6:	3d 19       	sub	r19, r13
      c8:	0e 3c       	cpi	r16, 0xCE	; 206
      ca:	c3 bd       	out	0x23, r28	; 35
      cc:	42 82       	std	Z+2, r4	; 0x02
      ce:	ad 2b       	or	r26, r29
      d0:	3e 68       	ori	r19, 0x8E	; 142
      d2:	ec 82       	std	Y+4, r14	; 0x04
      d4:	76 be       	out	0x36, r7	; 54
      d6:	d9 8f       	std	Y+25, r29	; 0x19
      d8:	e1 a9       	ldd	r30, Z+49	; 0x31
      da:	3e 4c       	sbci	r19, 0xCE	; 206
      dc:	80 ef       	ldi	r24, 0xF0	; 240
      de:	ff be       	out	0x3f, r15	; 63
      e0:	01 c4       	rjmp	.+2050   	; 0x8e4 <__addsf3x+0xa>
      e2:	ff 7f       	andi	r31, 0xFF	; 255
      e4:	3f 00       	.word	0x003f	; ????
      e6:	00 00       	nop
	...

000000ea <__ctors_end>:
      ea:	11 24       	eor	r1, r1
      ec:	1f be       	out	0x3f, r1	; 63
      ee:	cf ef       	ldi	r28, 0xFF	; 255
      f0:	d8 e0       	ldi	r29, 0x08	; 8
      f2:	de bf       	out	0x3e, r29	; 62
      f4:	cd bf       	out	0x3d, r28	; 61

000000f6 <__do_copy_data>:
      f6:	11 e0       	ldi	r17, 0x01	; 1
      f8:	a0 e0       	ldi	r26, 0x00	; 0
      fa:	b1 e0       	ldi	r27, 0x01	; 1
      fc:	e6 e1       	ldi	r30, 0x16	; 22
      fe:	f6 e1       	ldi	r31, 0x16	; 22
     100:	02 c0       	rjmp	.+4      	; 0x106 <__do_copy_data+0x10>
     102:	05 90       	lpm	r0, Z+
     104:	0d 92       	st	X+, r0
     106:	a8 31       	cpi	r26, 0x18	; 24
     108:	b1 07       	cpc	r27, r17
     10a:	d9 f7       	brne	.-10     	; 0x102 <__do_copy_data+0xc>

0000010c <__do_clear_bss>:
     10c:	21 e0       	ldi	r18, 0x01	; 1
     10e:	a8 e1       	ldi	r26, 0x18	; 24
     110:	b1 e0       	ldi	r27, 0x01	; 1
     112:	01 c0       	rjmp	.+2      	; 0x116 <.do_clear_bss_start>

00000114 <.do_clear_bss_loop>:
     114:	1d 92       	st	X+, r1

00000116 <.do_clear_bss_start>:
     116:	a9 32       	cpi	r26, 0x29	; 41
     118:	b2 07       	cpc	r27, r18
     11a:	e1 f7       	brne	.-8      	; 0x114 <.do_clear_bss_loop>
     11c:	0e 94 9e 02 	call	0x53c	; 0x53c <main>
     120:	0c 94 09 0b 	jmp	0x1612	; 0x1612 <_exit>

00000124 <__bad_interrupt>:
     124:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000128 <__vector_20>:
	return c;
}



ISR(USART_TX_vect){
     128:	1f 92       	push	r1
     12a:	0f 92       	push	r0
     12c:	0f b6       	in	r0, 0x3f	; 63
     12e:	0f 92       	push	r0
     130:	11 24       	eor	r1, r1
	//if(usart_fifo_counter > 0){
	//	UDR0 = usart_	
	//}	
}
     132:	0f 90       	pop	r0
     134:	0f be       	out	0x3f, r0	; 63
     136:	0f 90       	pop	r0
     138:	1f 90       	pop	r1
     13a:	18 95       	reti

0000013c <__vector_18>:
	uint8_t motor_select; 
	int angle;
	uint8_t done; 
	};
Motor_status motor_status; 
ISR(USART_RX_vect){
     13c:	1f 92       	push	r1
     13e:	0f 92       	push	r0
     140:	0f b6       	in	r0, 0x3f	; 63
     142:	0f 92       	push	r0
     144:	11 24       	eor	r1, r1
     146:	cf 92       	push	r12
     148:	df 92       	push	r13
     14a:	ef 92       	push	r14
     14c:	ff 92       	push	r15
     14e:	1f 93       	push	r17
     150:	2f 93       	push	r18
     152:	3f 93       	push	r19
     154:	4f 93       	push	r20
     156:	5f 93       	push	r21
     158:	6f 93       	push	r22
     15a:	7f 93       	push	r23
     15c:	8f 93       	push	r24
     15e:	9f 93       	push	r25
     160:	af 93       	push	r26
     162:	bf 93       	push	r27
     164:	cf 93       	push	r28
     166:	df 93       	push	r29
     168:	ef 93       	push	r30
     16a:	ff 93       	push	r31
	motor_status.done = 0; 
     16c:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <motor_status+0x3>
	char c = UDR0;
     170:	10 91 c6 00 	lds	r17, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	static int counter = 0; 
	static int sign;
	static float angle; 
	/*finit state machine for recieving data frame */
	switch(parse_state){
     174:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <parse_state>
     178:	81 30       	cpi	r24, 0x01	; 1
     17a:	a9 f0       	breq	.+42     	; 0x1a6 <__vector_18+0x6a>
     17c:	28 f0       	brcs	.+10     	; 0x188 <__vector_18+0x4c>
     17e:	82 30       	cpi	r24, 0x02	; 2
     180:	d1 f0       	breq	.+52     	; 0x1b6 <__vector_18+0x7a>
     182:	83 30       	cpi	r24, 0x03	; 3
     184:	b1 f1       	breq	.+108    	; 0x1f2 <__vector_18+0xb6>
     186:	8b c0       	rjmp	.+278    	; 0x29e <__vector_18+0x162>
				case WAIT: 
					if(c == 'M'){
     188:	1d 34       	cpi	r17, 0x4D	; 77
     18a:	09 f0       	breq	.+2      	; 0x18e <__vector_18+0x52>
     18c:	88 c0       	rjmp	.+272    	; 0x29e <__vector_18+0x162>
						parse_state =MOTOR;
     18e:	81 e0       	ldi	r24, 0x01	; 1
     190:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <parse_state>
						angle = 0; 
     194:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <_ZZ11__vector_18E5angle>
     198:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <_ZZ11__vector_18E5angle+0x1>
     19c:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <_ZZ11__vector_18E5angle+0x2>
     1a0:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <_ZZ11__vector_18E5angle+0x3>
     1a4:	7c c0       	rjmp	.+248    	; 0x29e <__vector_18+0x162>
					}
					break;
				case MOTOR: 
					motor_status.motor_select = c-48; 
     1a6:	60 ed       	ldi	r22, 0xD0	; 208
     1a8:	61 0f       	add	r22, r17
     1aa:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <motor_status>
					parse_state = SIGN;
     1ae:	82 e0       	ldi	r24, 0x02	; 2
     1b0:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <parse_state>
					break; 
     1b4:	74 c0       	rjmp	.+232    	; 0x29e <__vector_18+0x162>
				case SIGN:
					parse_state = ANGLE;
     1b6:	83 e0       	ldi	r24, 0x03	; 3
     1b8:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <parse_state>
					if(c == '-'){
     1bc:	1d 32       	cpi	r17, 0x2D	; 45
     1be:	39 f4       	brne	.+14     	; 0x1ce <__vector_18+0x92>
						sign = -1; 	
     1c0:	8f ef       	ldi	r24, 0xFF	; 255
     1c2:	9f ef       	ldi	r25, 0xFF	; 255
     1c4:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <_ZZ11__vector_18E4sign+0x1>
     1c8:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <_ZZ11__vector_18E4sign>
     1cc:	0b c0       	rjmp	.+22     	; 0x1e4 <__vector_18+0xa8>
					}else if(c == '+'){
     1ce:	1b 32       	cpi	r17, 0x2B	; 43
     1d0:	39 f4       	brne	.+14     	; 0x1e0 <__vector_18+0xa4>
						sign = 1; 		
     1d2:	81 e0       	ldi	r24, 0x01	; 1
     1d4:	90 e0       	ldi	r25, 0x00	; 0
     1d6:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <_ZZ11__vector_18E4sign+0x1>
     1da:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <_ZZ11__vector_18E4sign>
     1de:	02 c0       	rjmp	.+4      	; 0x1e4 <__vector_18+0xa8>
					}else{
						parse_state = WAIT;
     1e0:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <parse_state>
					}
					counter = 3;
     1e4:	83 e0       	ldi	r24, 0x03	; 3
     1e6:	90 e0       	ldi	r25, 0x00	; 0
     1e8:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <__data_end+0x1>
     1ec:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
					break; 
     1f0:	56 c0       	rjmp	.+172    	; 0x29e <__vector_18+0x162>
				case ANGLE: 
					/*5328 is the conversion from ascii to int: 48*100+48*10+48=5328*/
					/*Todo instead of sending the numbers in ascii send it in raw binary*/
					counter--;
     1f2:	c0 91 18 01 	lds	r28, 0x0118	; 0x800118 <__data_end>
     1f6:	d0 91 19 01 	lds	r29, 0x0119	; 0x800119 <__data_end+0x1>
     1fa:	21 97       	sbiw	r28, 0x01	; 1
     1fc:	d0 93 19 01 	sts	0x0119, r29	; 0x800119 <__data_end+0x1>
     200:	c0 93 18 01 	sts	0x0118, r28	; 0x800118 <__data_end>
					angle += (c-48)*pow(10,counter);  
     204:	be 01       	movw	r22, r28
     206:	0d 2e       	mov	r0, r29
     208:	00 0c       	add	r0, r0
     20a:	88 0b       	sbc	r24, r24
     20c:	99 0b       	sbc	r25, r25
     20e:	0e 94 6c 05 	call	0xad8	; 0xad8 <__floatsisf>
     212:	9b 01       	movw	r18, r22
     214:	ac 01       	movw	r20, r24
     216:	60 e0       	ldi	r22, 0x00	; 0
     218:	70 e0       	ldi	r23, 0x00	; 0
     21a:	80 e2       	ldi	r24, 0x20	; 32
     21c:	91 e4       	ldi	r25, 0x41	; 65
     21e:	0e 94 65 06 	call	0xcca	; 0xcca <pow>
     222:	6b 01       	movw	r12, r22
     224:	7c 01       	movw	r14, r24
     226:	61 2f       	mov	r22, r17
     228:	70 e0       	ldi	r23, 0x00	; 0
     22a:	60 53       	subi	r22, 0x30	; 48
     22c:	71 09       	sbc	r23, r1
     22e:	07 2e       	mov	r0, r23
     230:	00 0c       	add	r0, r0
     232:	88 0b       	sbc	r24, r24
     234:	99 0b       	sbc	r25, r25
     236:	0e 94 6c 05 	call	0xad8	; 0xad8 <__floatsisf>
     23a:	a7 01       	movw	r20, r14
     23c:	96 01       	movw	r18, r12
     23e:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <__mulsf3>
     242:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <_ZZ11__vector_18E5angle>
     246:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <_ZZ11__vector_18E5angle+0x1>
     24a:	40 91 1e 01 	lds	r20, 0x011E	; 0x80011e <_ZZ11__vector_18E5angle+0x2>
     24e:	50 91 1f 01 	lds	r21, 0x011F	; 0x80011f <_ZZ11__vector_18E5angle+0x3>
     252:	0e 94 56 04 	call	0x8ac	; 0x8ac <__addsf3>
     256:	6b 01       	movw	r12, r22
     258:	7c 01       	movw	r14, r24
     25a:	60 93 1c 01 	sts	0x011C, r22	; 0x80011c <_ZZ11__vector_18E5angle>
     25e:	70 93 1d 01 	sts	0x011D, r23	; 0x80011d <_ZZ11__vector_18E5angle+0x1>
     262:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <_ZZ11__vector_18E5angle+0x2>
     266:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <_ZZ11__vector_18E5angle+0x3>
					if(counter == 0){
     26a:	cd 2b       	or	r28, r29
     26c:	c1 f4       	brne	.+48     	; 0x29e <__vector_18+0x162>
						motor_status.angle = angle * sign;
     26e:	c0 e2       	ldi	r28, 0x20	; 32
     270:	d1 e0       	ldi	r29, 0x01	; 1
     272:	60 91 1a 01 	lds	r22, 0x011A	; 0x80011a <_ZZ11__vector_18E4sign>
     276:	70 91 1b 01 	lds	r23, 0x011B	; 0x80011b <_ZZ11__vector_18E4sign+0x1>
     27a:	07 2e       	mov	r0, r23
     27c:	00 0c       	add	r0, r0
     27e:	88 0b       	sbc	r24, r24
     280:	99 0b       	sbc	r25, r25
     282:	0e 94 6c 05 	call	0xad8	; 0xad8 <__floatsisf>
     286:	a7 01       	movw	r20, r14
     288:	96 01       	movw	r18, r12
     28a:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <__mulsf3>
     28e:	0e 94 34 05 	call	0xa68	; 0xa68 <__fixsfsi>
     292:	7a 83       	std	Y+2, r23	; 0x02
     294:	69 83       	std	Y+1, r22	; 0x01
						parse_state = WAIT; 
     296:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <parse_state>
						motor_status.done = 1; 
     29a:	81 e0       	ldi	r24, 0x01	; 1
     29c:	8b 83       	std	Y+3, r24	; 0x03
					}
					break; 
		}	
		

}
     29e:	ff 91       	pop	r31
     2a0:	ef 91       	pop	r30
     2a2:	df 91       	pop	r29
     2a4:	cf 91       	pop	r28
     2a6:	bf 91       	pop	r27
     2a8:	af 91       	pop	r26
     2aa:	9f 91       	pop	r25
     2ac:	8f 91       	pop	r24
     2ae:	7f 91       	pop	r23
     2b0:	6f 91       	pop	r22
     2b2:	5f 91       	pop	r21
     2b4:	4f 91       	pop	r20
     2b6:	3f 91       	pop	r19
     2b8:	2f 91       	pop	r18
     2ba:	1f 91       	pop	r17
     2bc:	ff 90       	pop	r15
     2be:	ef 90       	pop	r14
     2c0:	df 90       	pop	r13
     2c2:	cf 90       	pop	r12
     2c4:	0f 90       	pop	r0
     2c6:	0f be       	out	0x3f, r0	; 63
     2c8:	0f 90       	pop	r0
     2ca:	1f 90       	pop	r1
     2cc:	18 95       	reti

000002ce <_Z9servo_pidP11Servo_motor>:
	uint8_t dir;
	float f_pos;
	int state; 
	float gear_train;
	};
float servo_pid(Servo_motor * motor){
     2ce:	cf 92       	push	r12
     2d0:	df 92       	push	r13
     2d2:	ef 92       	push	r14
     2d4:	ff 92       	push	r15
     2d6:	cf 93       	push	r28
     2d8:	df 93       	push	r29
     2da:	ec 01       	movw	r28, r24
		float error = (motor->target_pos- 0.2f*motor->current_pos);
     2dc:	6b 81       	ldd	r22, Y+3	; 0x03
     2de:	7c 81       	ldd	r23, Y+4	; 0x04
     2e0:	07 2e       	mov	r0, r23
     2e2:	00 0c       	add	r0, r0
     2e4:	88 0b       	sbc	r24, r24
     2e6:	99 0b       	sbc	r25, r25
     2e8:	0e 94 6c 05 	call	0xad8	; 0xad8 <__floatsisf>
     2ec:	6b 01       	movw	r12, r22
     2ee:	7c 01       	movw	r14, r24
     2f0:	69 81       	ldd	r22, Y+1	; 0x01
     2f2:	7a 81       	ldd	r23, Y+2	; 0x02
     2f4:	07 2e       	mov	r0, r23
     2f6:	00 0c       	add	r0, r0
     2f8:	88 0b       	sbc	r24, r24
     2fa:	99 0b       	sbc	r25, r25
     2fc:	0e 94 6c 05 	call	0xad8	; 0xad8 <__floatsisf>
     300:	2d ec       	ldi	r18, 0xCD	; 205
     302:	3c ec       	ldi	r19, 0xCC	; 204
     304:	4c e4       	ldi	r20, 0x4C	; 76
     306:	5e e3       	ldi	r21, 0x3E	; 62
     308:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <__mulsf3>
     30c:	9b 01       	movw	r18, r22
     30e:	ac 01       	movw	r20, r24
     310:	c7 01       	movw	r24, r14
     312:	b6 01       	movw	r22, r12
     314:	0e 94 55 04 	call	0x8aa	; 0x8aa <__subsf3>
     318:	6b 01       	movw	r12, r22
     31a:	7c 01       	movw	r14, r24


		int16_t derivative =  (int)(error - motor->derror);
		motor->derror = error;
     31c:	6b 87       	std	Y+11, r22	; 0x0b
     31e:	7c 87       	std	Y+12, r23	; 0x0c
     320:	8d 87       	std	Y+13, r24	; 0x0d
     322:	9e 87       	std	Y+14, r25	; 0x0e
		int32_t temp = motor->integral;
		temp+= error; 
     324:	6f 81       	ldd	r22, Y+7	; 0x07
     326:	78 85       	ldd	r23, Y+8	; 0x08
     328:	89 85       	ldd	r24, Y+9	; 0x09
     32a:	9a 85       	ldd	r25, Y+10	; 0x0a
     32c:	0e 94 6c 05 	call	0xad8	; 0xad8 <__floatsisf>
     330:	a7 01       	movw	r20, r14
     332:	96 01       	movw	r18, r12
     334:	0e 94 56 04 	call	0x8ac	; 0x8ac <__addsf3>
     338:	0e 94 34 05 	call	0xa68	; 0xa68 <__fixsfsi>
		if(abs(temp)<motor->max_integral){
     33c:	ab 01       	movw	r20, r22
     33e:	77 23       	and	r23, r23
     340:	24 f4       	brge	.+8      	; 0x34a <_Z9servo_pidP11Servo_motor+0x7c>
     342:	44 27       	eor	r20, r20
     344:	55 27       	eor	r21, r21
     346:	46 1b       	sub	r20, r22
     348:	57 0b       	sbc	r21, r23
     34a:	2d 81       	ldd	r18, Y+5	; 0x05
     34c:	3e 81       	ldd	r19, Y+6	; 0x06
     34e:	42 17       	cp	r20, r18
     350:	53 07       	cpc	r21, r19
     352:	24 f4       	brge	.+8      	; 0x35c <_Z9servo_pidP11Servo_motor+0x8e>
			motor->integral = temp; 
     354:	6f 83       	std	Y+7, r22	; 0x07
     356:	78 87       	std	Y+8, r23	; 0x08
     358:	89 87       	std	Y+9, r24	; 0x09
     35a:	9a 87       	std	Y+10, r25	; 0x0a
		}
		motor->proportional = motor->P*error;
     35c:	69 89       	ldd	r22, Y+17	; 0x11
     35e:	7a 89       	ldd	r23, Y+18	; 0x12
     360:	07 2e       	mov	r0, r23
     362:	00 0c       	add	r0, r0
     364:	88 0b       	sbc	r24, r24
     366:	99 0b       	sbc	r25, r25
     368:	0e 94 6c 05 	call	0xad8	; 0xad8 <__floatsisf>
     36c:	a7 01       	movw	r20, r14
     36e:	96 01       	movw	r18, r12
     370:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <__mulsf3>
     374:	6b 01       	movw	r12, r22
     376:	7c 01       	movw	r14, r24
     378:	0e 94 34 05 	call	0xa68	; 0xa68 <__fixsfsi>
     37c:	78 8b       	std	Y+16, r23	; 0x10
     37e:	6f 87       	std	Y+15, r22	; 0x0f
		
		return motor->P*error +motor->I*motor->integral;
     380:	6f 81       	ldd	r22, Y+7	; 0x07
     382:	78 85       	ldd	r23, Y+8	; 0x08
     384:	89 85       	ldd	r24, Y+9	; 0x09
     386:	9a 85       	ldd	r25, Y+10	; 0x0a
     388:	0e 94 6c 05 	call	0xad8	; 0xad8 <__floatsisf>
     38c:	2b 89       	ldd	r18, Y+19	; 0x13
     38e:	3c 89       	ldd	r19, Y+20	; 0x14
     390:	4d 89       	ldd	r20, Y+21	; 0x15
     392:	5e 89       	ldd	r21, Y+22	; 0x16
     394:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <__mulsf3>
     398:	a7 01       	movw	r20, r14
     39a:	96 01       	movw	r18, r12
     39c:	0e 94 56 04 	call	0x8ac	; 0x8ac <__addsf3>
}
     3a0:	df 91       	pop	r29
     3a2:	cf 91       	pop	r28
     3a4:	ff 90       	pop	r15
     3a6:	ef 90       	pop	r14
     3a8:	df 90       	pop	r13
     3aa:	cf 90       	pop	r12
     3ac:	08 95       	ret

000003ae <_Z12servo_rotatefPVhhh>:
/*Servo Control */
void servo_rotate(float val,volatile uint8_t * pwm, uint8_t dir_a,uint8_t dir_b){
     3ae:	ef 92       	push	r14
     3b0:	ff 92       	push	r15
     3b2:	0f 93       	push	r16
     3b4:	cf 93       	push	r28
     3b6:	7a 01       	movw	r14, r20
     3b8:	c2 2f       	mov	r28, r18
	int speed = (float)val;
     3ba:	0e 94 34 05 	call	0xa68	; 0xa68 <__fixsfsi>
     3be:	ab 01       	movw	r20, r22
	if (speed > 0){
     3c0:	16 16       	cp	r1, r22
     3c2:	17 06       	cpc	r1, r23
     3c4:	44 f4       	brge	.+16     	; 0x3d6 <_Z12servo_rotatefPVhhh+0x28>
		SERVO_REGISTER |= dir_a  ;
     3c6:	2b b1       	in	r18, 0x0b	; 11
     3c8:	c2 2b       	or	r28, r18
     3ca:	cb b9       	out	0x0b, r28	; 11
		SERVO_REGISTER &= ~dir_b;
     3cc:	2b b1       	in	r18, 0x0b	; 11
     3ce:	00 95       	com	r16
     3d0:	02 23       	and	r16, r18
     3d2:	0b b9       	out	0x0b, r16	; 11
     3d4:	0b c0       	rjmp	.+22     	; 0x3ec <_Z12servo_rotatefPVhhh+0x3e>
		}else{
		SERVO_REGISTER &= ~dir_a;
     3d6:	2b b1       	in	r18, 0x0b	; 11
     3d8:	c0 95       	com	r28
     3da:	c2 23       	and	r28, r18
     3dc:	cb b9       	out	0x0b, r28	; 11
		SERVO_REGISTER |= dir_b;
     3de:	2b b1       	in	r18, 0x0b	; 11
     3e0:	02 2b       	or	r16, r18
     3e2:	0b b9       	out	0x0b, r16	; 11
		speed *= -1;
     3e4:	44 27       	eor	r20, r20
     3e6:	55 27       	eor	r21, r21
     3e8:	46 1b       	sub	r20, r22
     3ea:	57 0b       	sbc	r21, r23
	}
	*pwm = speed;
     3ec:	f7 01       	movw	r30, r14
     3ee:	40 83       	st	Z, r20
}
     3f0:	cf 91       	pop	r28
     3f2:	0f 91       	pop	r16
     3f4:	ff 90       	pop	r15
     3f6:	ef 90       	pop	r14
     3f8:	08 95       	ret

000003fa <_Z14stepper_rotateP13Stepper_motorhh>:
void stepper_rotate(Stepper_motor *motor,uint8_t dir, uint8_t step){
     3fa:	ef 92       	push	r14
     3fc:	ff 92       	push	r15
     3fe:	0f 93       	push	r16
     400:	1f 93       	push	r17
     402:	cf 93       	push	r28
     404:	df 93       	push	r29
     406:	ec 01       	movw	r28, r24
     408:	06 2f       	mov	r16, r22
     40a:	14 2f       	mov	r17, r20
	switch (motor->state){
     40c:	8c 85       	ldd	r24, Y+12	; 0x0c
     40e:	9d 85       	ldd	r25, Y+13	; 0x0d
     410:	81 30       	cpi	r24, 0x01	; 1
     412:	91 05       	cpc	r25, r1
     414:	81 f0       	breq	.+32     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
     416:	82 30       	cpi	r24, 0x02	; 2
     418:	91 05       	cpc	r25, r1
     41a:	09 f4       	brne	.+2      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
     41c:	58 c0       	rjmp	.+176    	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
     41e:	89 2b       	or	r24, r25
     420:	09 f0       	breq	.+2      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
     422:	85 c0       	rjmp	.+266    	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
		case 0:
			if(motor->start == 1){
     424:	88 81       	ld	r24, Y
     426:	81 30       	cpi	r24, 0x01	; 1
     428:	09 f0       	breq	.+2      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
     42a:	81 c0       	rjmp	.+258    	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
				motor->state = 1; 
     42c:	81 e0       	ldi	r24, 0x01	; 1
     42e:	90 e0       	ldi	r25, 0x00	; 0
     430:	9d 87       	std	Y+13, r25	; 0x0d
     432:	8c 87       	std	Y+12, r24	; 0x0c
     434:	7c c0       	rjmp	.+248    	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
			}	
			break;
		case 1:
			motor->diff = (motor->target_pos - motor->pos)/motor->gear_train;
     436:	6b 81       	ldd	r22, Y+3	; 0x03
     438:	7c 81       	ldd	r23, Y+4	; 0x04
     43a:	89 81       	ldd	r24, Y+1	; 0x01
     43c:	9a 81       	ldd	r25, Y+2	; 0x02
     43e:	68 1b       	sub	r22, r24
     440:	79 0b       	sbc	r23, r25
     442:	07 2e       	mov	r0, r23
     444:	00 0c       	add	r0, r0
     446:	88 0b       	sbc	r24, r24
     448:	99 0b       	sbc	r25, r25
     44a:	0e 94 6c 05 	call	0xad8	; 0xad8 <__floatsisf>
     44e:	2e 85       	ldd	r18, Y+14	; 0x0e
     450:	3f 85       	ldd	r19, Y+15	; 0x0f
     452:	48 89       	ldd	r20, Y+16	; 0x10
     454:	59 89       	ldd	r21, Y+17	; 0x11
     456:	0e 94 c2 04 	call	0x984	; 0x984 <__divsf3>
     45a:	0e 94 34 05 	call	0xa68	; 0xa68 <__fixsfsi>
     45e:	9b 01       	movw	r18, r22
     460:	7e 83       	std	Y+6, r23	; 0x06
     462:	6d 83       	std	Y+5, r22	; 0x05
			motor->state = 2; 
     464:	82 e0       	ldi	r24, 0x02	; 2
     466:	90 e0       	ldi	r25, 0x00	; 0
     468:	9d 87       	std	Y+13, r25	; 0x0d
     46a:	8c 87       	std	Y+12, r24	; 0x0c
			if(motor->diff > 0){
     46c:	12 16       	cp	r1, r18
     46e:	13 06       	cpc	r1, r19
     470:	34 f4       	brge	.+12     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
				STEPPER_REGISTER |= dir;
     472:	85 b1       	in	r24, 0x05	; 5
     474:	08 2b       	or	r16, r24
     476:	05 b9       	out	0x05, r16	; 5
				motor->dir = 1;
     478:	81 e0       	ldi	r24, 0x01	; 1
     47a:	8f 83       	std	Y+7, r24	; 0x07
     47c:	08 c0       	rjmp	.+16     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
			}else if(motor->diff < 0){
     47e:	33 23       	and	r19, r19
     480:	34 f4       	brge	.+12     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
				STEPPER_REGISTER &= ~dir; 
     482:	85 b1       	in	r24, 0x05	; 5
     484:	00 95       	com	r16
     486:	08 23       	and	r16, r24
     488:	05 b9       	out	0x05, r16	; 5
				motor->dir = -1; 
     48a:	8f ef       	ldi	r24, 0xFF	; 255
     48c:	8f 83       	std	Y+7, r24	; 0x07
			}
			STEPPER_REGISTER &= ~step; 
     48e:	85 b1       	in	r24, 0x05	; 5
     490:	10 95       	com	r17
     492:	18 23       	and	r17, r24
     494:	15 b9       	out	0x05, r17	; 5
			motor->diff = abs(motor->diff); 
     496:	8d 81       	ldd	r24, Y+5	; 0x05
     498:	9e 81       	ldd	r25, Y+6	; 0x06
     49a:	99 23       	and	r25, r25
     49c:	1c f4       	brge	.+6      	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
     49e:	91 95       	neg	r25
     4a0:	81 95       	neg	r24
     4a2:	91 09       	sbc	r25, r1
     4a4:	9e 83       	std	Y+6, r25	; 0x06
     4a6:	8d 83       	std	Y+5, r24	; 0x05
			usart_sendln(motor->diff);
     4a8:	0e 94 50 04 	call	0x8a0	; 0x8a0 <_Z12usart_sendlni>
			usart_sendln(motor->pos);
     4ac:	89 81       	ldd	r24, Y+1	; 0x01
     4ae:	9a 81       	ldd	r25, Y+2	; 0x02
     4b0:	0e 94 50 04 	call	0x8a0	; 0x8a0 <_Z12usart_sendlni>
			motor->f_pos = motor->pos;
     4b4:	69 81       	ldd	r22, Y+1	; 0x01
     4b6:	7a 81       	ldd	r23, Y+2	; 0x02
     4b8:	07 2e       	mov	r0, r23
     4ba:	00 0c       	add	r0, r0
     4bc:	88 0b       	sbc	r24, r24
     4be:	99 0b       	sbc	r25, r25
     4c0:	0e 94 6c 05 	call	0xad8	; 0xad8 <__floatsisf>
     4c4:	68 87       	std	Y+8, r22	; 0x08
     4c6:	79 87       	std	Y+9, r23	; 0x09
     4c8:	8a 87       	std	Y+10, r24	; 0x0a
     4ca:	9b 87       	std	Y+11, r25	; 0x0b
			break; 
     4cc:	30 c0       	rjmp	.+96     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
		case 2: 
			if(STEPPER_REGISTER & step){
     4ce:	85 b1       	in	r24, 0x05	; 5
     4d0:	84 23       	and	r24, r20
     4d2:	51 f1       	breq	.+84     	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
				
				motor->diff--;	
     4d4:	ed 80       	ldd	r14, Y+5	; 0x05
     4d6:	fe 80       	ldd	r15, Y+6	; 0x06
     4d8:	81 e0       	ldi	r24, 0x01	; 1
     4da:	e8 1a       	sub	r14, r24
     4dc:	f1 08       	sbc	r15, r1
     4de:	fe 82       	std	Y+6, r15	; 0x06
     4e0:	ed 82       	std	Y+5, r14	; 0x05
				motor->f_pos=motor->f_pos + motor->gear_train*motor->dir;
     4e2:	6f 81       	ldd	r22, Y+7	; 0x07
     4e4:	70 e0       	ldi	r23, 0x00	; 0
     4e6:	80 e0       	ldi	r24, 0x00	; 0
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	0e 94 6c 05 	call	0xad8	; 0xad8 <__floatsisf>
     4ee:	2e 85       	ldd	r18, Y+14	; 0x0e
     4f0:	3f 85       	ldd	r19, Y+15	; 0x0f
     4f2:	48 89       	ldd	r20, Y+16	; 0x10
     4f4:	59 89       	ldd	r21, Y+17	; 0x11
     4f6:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <__mulsf3>
     4fa:	28 85       	ldd	r18, Y+8	; 0x08
     4fc:	39 85       	ldd	r19, Y+9	; 0x09
     4fe:	4a 85       	ldd	r20, Y+10	; 0x0a
     500:	5b 85       	ldd	r21, Y+11	; 0x0b
     502:	0e 94 56 04 	call	0x8ac	; 0x8ac <__addsf3>
     506:	68 87       	std	Y+8, r22	; 0x08
     508:	79 87       	std	Y+9, r23	; 0x09
     50a:	8a 87       	std	Y+10, r24	; 0x0a
     50c:	9b 87       	std	Y+11, r25	; 0x0b
				motor->pos = (float)motor->f_pos;
     50e:	0e 94 34 05 	call	0xa68	; 0xa68 <__fixsfsi>
     512:	7a 83       	std	Y+2, r23	; 0x02
     514:	69 83       	std	Y+1, r22	; 0x01
				if(motor->diff == 0){
     516:	ef 28       	or	r14, r15
     518:	39 f4       	brne	.+14     	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
					motor->state = 0; 
     51a:	1d 86       	std	Y+13, r1	; 0x0d
     51c:	1c 86       	std	Y+12, r1	; 0x0c
					motor->start = 0;
     51e:	18 82       	st	Y, r1
					motor->pos=motor->target_pos;
     520:	8b 81       	ldd	r24, Y+3	; 0x03
     522:	9c 81       	ldd	r25, Y+4	; 0x04
     524:	9a 83       	std	Y+2, r25	; 0x02
     526:	89 83       	std	Y+1, r24	; 0x01
				}
			}
			STEPPER_REGISTER ^= step;
     528:	85 b1       	in	r24, 0x05	; 5
     52a:	18 27       	eor	r17, r24
     52c:	15 b9       	out	0x05, r17	; 5
			break; 
	}
}
     52e:	df 91       	pop	r29
     530:	cf 91       	pop	r28
     532:	1f 91       	pop	r17
     534:	0f 91       	pop	r16
     536:	ff 90       	pop	r15
     538:	ef 90       	pop	r14
     53a:	08 95       	ret

0000053c <main>:

int main(void)
{
     53c:	cf 93       	push	r28
     53e:	df 93       	push	r29
     540:	cd b7       	in	r28, 0x3d	; 61
     542:	de b7       	in	r29, 0x3e	; 62
     544:	cf 55       	subi	r28, 0x5F	; 95
     546:	d1 09       	sbc	r29, r1
     548:	0f b6       	in	r0, 0x3f	; 63
     54a:	f8 94       	cli
     54c:	de bf       	out	0x3e, r29	; 62
     54e:	0f be       	out	0x3f, r0	; 63
     550:	cd bf       	out	0x3d, r28	; 61

	
	/* initialize component */ 
	sei();
     552:	78 94       	sei
	timer_enable();	
     554:	0e 94 a3 03 	call	0x746	; 0x746 <_Z12timer_enablev>
	usart_enable(9600);
     558:	80 e8       	ldi	r24, 0x80	; 128
     55a:	95 e2       	ldi	r25, 0x25	; 37
     55c:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <_Z12usart_enablej>
	
    /* Replace with your application code */
	uint8_t tacho_values;
	uint8_t tacho_state = 0;
	int16_t tacho = 0;
	DDRD &= ~TACHO_0_M;
     560:	55 98       	cbi	0x0a, 5	; 10
	DDRD &= ~TACHO_0_P; 
     562:	52 98       	cbi	0x0a, 2	; 10

	/* Initialize servo motors */
	DDRD |= SERVO_0_EN | SERVO_0_DIR_A | SERVO_0_DIR_B;
     564:	8a b1       	in	r24, 0x0a	; 10
     566:	88 6c       	ori	r24, 0xC8	; 200
     568:	8a b9       	out	0x0a, r24	; 10
	TCCR2A |= (1 << COM2B1 ) | (1 << WGM21) | (1 << WGM20); /*Fast PWM */
     56a:	e0 eb       	ldi	r30, 0xB0	; 176
     56c:	f0 e0       	ldi	r31, 0x00	; 0
     56e:	80 81       	ld	r24, Z
     570:	83 62       	ori	r24, 0x23	; 35
     572:	80 83       	st	Z, r24
	TCCR2B |= (1 << CS20); /*No prescaling */
     574:	e1 eb       	ldi	r30, 0xB1	; 177
     576:	f0 e0       	ldi	r31, 0x00	; 0
     578:	80 81       	ld	r24, Z
     57a:	81 60       	ori	r24, 0x01	; 1
     57c:	80 83       	st	Z, r24
	/* PID */
	int16_t error = 0;	
	
	Servo_motor servo0 ={0};
     57e:	fe 01       	movw	r30, r28
     580:	31 96       	adiw	r30, 0x01	; 1
     582:	89 e1       	ldi	r24, 0x19	; 25
     584:	df 01       	movw	r26, r30
     586:	1d 92       	st	X+, r1
     588:	8a 95       	dec	r24
     58a:	e9 f7       	brne	.-6      	; 0x586 <main+0x4a>
	servo0.P= 5; 		
     58c:	85 e0       	ldi	r24, 0x05	; 5
     58e:	90 e0       	ldi	r25, 0x00	; 0
     590:	9b 8b       	std	Y+19, r25	; 0x13
     592:	8a 8b       	std	Y+18, r24	; 0x12
	servo0.I= 0.1; 
     594:	8d ec       	ldi	r24, 0xCD	; 205
     596:	9c ec       	ldi	r25, 0xCC	; 204
     598:	ac ec       	ldi	r26, 0xCC	; 204
     59a:	bd e3       	ldi	r27, 0x3D	; 61
     59c:	8c 8b       	std	Y+20, r24	; 0x14
     59e:	9d 8b       	std	Y+21, r25	; 0x15
     5a0:	ae 8b       	std	Y+22, r26	; 0x16
     5a2:	bf 8b       	std	Y+23, r27	; 0x17
	servo0.max_integral = 255; 
     5a4:	8f ef       	ldi	r24, 0xFF	; 255
     5a6:	90 e0       	ldi	r25, 0x00	; 0
     5a8:	9f 83       	std	Y+7, r25	; 0x07
     5aa:	8e 83       	std	Y+6, r24	; 0x06
	
	uint32_t curtime = 0; 	
	uint32_t pid_timer = 0; 
	uint32_t stepper_timer = 0;
	
	DDRB |= M0_DIR | M0_STEP;
     5ac:	84 b1       	in	r24, 0x04	; 4
     5ae:	83 60       	ori	r24, 0x03	; 3
     5b0:	84 b9       	out	0x04, r24	; 4
	Stepper_motor stepper0 = {0};
     5b2:	79 96       	adiw	r30, 0x19	; 25
     5b4:	82 e1       	ldi	r24, 0x12	; 18
     5b6:	df 01       	movw	r26, r30
     5b8:	1d 92       	st	X+, r1
     5ba:	8a 95       	dec	r24
     5bc:	e9 f7       	brne	.-6      	; 0x5b8 <main+0x7c>
	stepper0.gear_train = 0.04 ;
     5be:	8a e0       	ldi	r24, 0x0A	; 10
     5c0:	97 ed       	ldi	r25, 0xD7	; 215
     5c2:	a3 e2       	ldi	r26, 0x23	; 35
     5c4:	bd e3       	ldi	r27, 0x3D	; 61
     5c6:	88 a7       	std	Y+40, r24	; 0x28
     5c8:	99 a7       	std	Y+41, r25	; 0x29
     5ca:	aa a7       	std	Y+42, r26	; 0x2a
     5cc:	bb a7       	std	Y+43, r27	; 0x2b
	servo0.I= 0.1; 
	servo0.max_integral = 255; 
	int output = 0; 	
	
	uint32_t curtime = 0; 	
	uint32_t pid_timer = 0; 
     5ce:	81 2c       	mov	r8, r1
     5d0:	91 2c       	mov	r9, r1
     5d2:	54 01       	movw	r10, r8
	servo0.P= 5; 		
	servo0.I= 0.1; 
	servo0.max_integral = 255; 
	int output = 0; 	
	
	uint32_t curtime = 0; 	
     5d4:	41 2c       	mov	r4, r1
     5d6:	51 2c       	mov	r5, r1
     5d8:	32 01       	movw	r6, r4
	
	Servo_motor servo0 ={0};
	servo0.P= 5; 		
	servo0.I= 0.1; 
	servo0.max_integral = 255; 
	int output = 0; 	
     5da:	e1 2c       	mov	r14, r1
     5dc:	f1 2c       	mov	r15, r1
	/* Initialize motors */ 
//	Stepper_motor motor0(M0_STEP,M0_DIR,0.23,&DDRD);
	
    /* Replace with your application code */
	uint8_t tacho_values;
	uint8_t tacho_state = 0;
     5de:	10 e0       	ldi	r17, 0x00	; 0
	stepper0.pos = 0; 
    while (1) 
    {
		/*character FSM */ 
		char buff[50]; 
		if(motor_status.done == 1){
     5e0:	0f 2e       	mov	r0, r31
     5e2:	f0 e2       	ldi	r31, 0x20	; 32
     5e4:	cf 2e       	mov	r12, r31
     5e6:	f1 e0       	ldi	r31, 0x01	; 1
     5e8:	df 2e       	mov	r13, r31
     5ea:	f0 2d       	mov	r31, r0
			sprintf(buff,"Motor %d, angle =  %d\n",motor_status.motor_select,motor_status.angle);
     5ec:	72 96       	adiw	r30, 0x12	; 18
     5ee:	a0 96       	adiw	r28, 0x20	; 32
     5f0:	ff af       	std	Y+63, r31	; 0x3f
     5f2:	ee af       	std	Y+62, r30	; 0x3e
     5f4:	a0 97       	sbiw	r28, 0x20	; 32
				case 0 : 
					servo0.target_pos = motor_status.angle; 
					break;
				case 1 :
					stepper0.target_pos = motor_status.angle; 
					stepper0.start = 1; 
     5f6:	33 24       	eor	r3, r3
     5f8:	33 94       	inc	r3
     5fa:	21 2c       	mov	r2, r1
	stepper0.pos = 0; 
    while (1) 
    {
		/*character FSM */ 
		char buff[50]; 
		if(motor_status.done == 1){
     5fc:	d6 01       	movw	r26, r12
     5fe:	13 96       	adiw	r26, 0x03	; 3
     600:	8c 91       	ld	r24, X
     602:	13 97       	sbiw	r26, 0x03	; 3
     604:	81 30       	cpi	r24, 0x01	; 1
     606:	b1 f5       	brne	.+108    	; 0x674 <main+0x138>
			sprintf(buff,"Motor %d, angle =  %d\n",motor_status.motor_select,motor_status.angle);
     608:	12 96       	adiw	r26, 0x02	; 2
     60a:	8c 91       	ld	r24, X
     60c:	12 97       	sbiw	r26, 0x02	; 2
     60e:	8f 93       	push	r24
     610:	11 96       	adiw	r26, 0x01	; 1
     612:	8c 91       	ld	r24, X
     614:	11 97       	sbiw	r26, 0x01	; 1
     616:	8f 93       	push	r24
     618:	8c 91       	ld	r24, X
     61a:	1f 92       	push	r1
     61c:	8f 93       	push	r24
     61e:	e0 e0       	ldi	r30, 0x00	; 0
     620:	f1 e0       	ldi	r31, 0x01	; 1
     622:	ff 93       	push	r31
     624:	ef 93       	push	r30
     626:	a0 96       	adiw	r28, 0x20	; 32
     628:	8f ad       	ldd	r24, Y+63	; 0x3f
     62a:	a0 97       	sbiw	r28, 0x20	; 32
     62c:	8f 93       	push	r24
     62e:	6f 96       	adiw	r28, 0x1f	; 31
     630:	9f ad       	ldd	r25, Y+63	; 0x3f
     632:	6f 97       	sbiw	r28, 0x1f	; 31
     634:	9f 93       	push	r25
     636:	0e 94 0f 08 	call	0x101e	; 0x101e <sprintf>
	//		usart_send(buff);
			motor_status.done = 0; 
     63a:	d6 01       	movw	r26, r12
     63c:	13 96       	adiw	r26, 0x03	; 3
     63e:	1c 92       	st	X, r1
     640:	13 97       	sbiw	r26, 0x03	; 3
			switch(motor_status.motor_select){
     642:	0f b6       	in	r0, 0x3f	; 63
     644:	f8 94       	cli
     646:	de bf       	out	0x3e, r29	; 62
     648:	0f be       	out	0x3f, r0	; 63
     64a:	cd bf       	out	0x3d, r28	; 61
     64c:	8c 91       	ld	r24, X
     64e:	88 23       	and	r24, r24
     650:	19 f0       	breq	.+6      	; 0x658 <main+0x11c>
     652:	81 30       	cpi	r24, 0x01	; 1
     654:	49 f0       	breq	.+18     	; 0x668 <main+0x12c>
     656:	0e c0       	rjmp	.+28     	; 0x674 <main+0x138>
				case 0 : 
					servo0.target_pos = motor_status.angle; 
     658:	d6 01       	movw	r26, r12
     65a:	11 96       	adiw	r26, 0x01	; 1
     65c:	8d 91       	ld	r24, X+
     65e:	9c 91       	ld	r25, X
     660:	12 97       	sbiw	r26, 0x02	; 2
     662:	9d 83       	std	Y+5, r25	; 0x05
     664:	8c 83       	std	Y+4, r24	; 0x04
					break;
     666:	06 c0       	rjmp	.+12     	; 0x674 <main+0x138>
				case 1 :
					stepper0.target_pos = motor_status.angle; 
     668:	f6 01       	movw	r30, r12
     66a:	81 81       	ldd	r24, Z+1	; 0x01
     66c:	92 81       	ldd	r25, Z+2	; 0x02
     66e:	9e 8f       	std	Y+30, r25	; 0x1e
     670:	8d 8f       	std	Y+29, r24	; 0x1d
					stepper0.start = 1; 
     672:	3a 8e       	std	Y+26, r3	; 0x1a
					break; 
			}
		}

		if(timer_ms()-curtime > 500){
     674:	0e 94 c6 03 	call	0x78c	; 0x78c <_Z8timer_msv>
     678:	dc 01       	movw	r26, r24
     67a:	cb 01       	movw	r24, r22
     67c:	84 19       	sub	r24, r4
     67e:	95 09       	sbc	r25, r5
     680:	a6 09       	sbc	r26, r6
     682:	b7 09       	sbc	r27, r7
     684:	85 3f       	cpi	r24, 0xF5	; 245
     686:	91 40       	sbci	r25, 0x01	; 1
     688:	a1 05       	cpc	r26, r1
     68a:	b1 05       	cpc	r27, r1
     68c:	40 f0       	brcs	.+16     	; 0x69e <main+0x162>
			curtime = timer_ms(); 
     68e:	0e 94 c6 03 	call	0x78c	; 0x78c <_Z8timer_msv>
     692:	2b 01       	movw	r4, r22
     694:	3c 01       	movw	r6, r24
			//sprintf(buff,"Current pos %d, Target pos =  %d, P = %d, I = %d\n",servo0.current_pos,servo0.target_pos,servo0.proportional,servo0.integral);
			//usart_send(buff);
			//usart_sendln(servo_0.current_pos);

			usart_sendln(stepper0.pos);
     696:	8b 8d       	ldd	r24, Y+27	; 0x1b
     698:	9c 8d       	ldd	r25, Y+28	; 0x1c
     69a:	0e 94 50 04 	call	0x8a0	; 0x8a0 <_Z12usart_sendlni>

		}
		//servo0.target_pos=stepper0.pos;		
		if(timer_ms() - pid_timer > 1){
     69e:	0e 94 c6 03 	call	0x78c	; 0x78c <_Z8timer_msv>
     6a2:	dc 01       	movw	r26, r24
     6a4:	cb 01       	movw	r24, r22
     6a6:	88 19       	sub	r24, r8
     6a8:	99 09       	sbc	r25, r9
     6aa:	aa 09       	sbc	r26, r10
     6ac:	bb 09       	sbc	r27, r11
     6ae:	02 97       	sbiw	r24, 0x02	; 2
     6b0:	a1 05       	cpc	r26, r1
     6b2:	b1 05       	cpc	r27, r1
     6b4:	88 f0       	brcs	.+34     	; 0x6d8 <main+0x19c>
			pid_timer = timer_ms();
     6b6:	0e 94 c6 03 	call	0x78c	; 0x78c <_Z8timer_msv>
     6ba:	4b 01       	movw	r8, r22
     6bc:	5c 01       	movw	r10, r24
			output = servo_pid(&servo0);
     6be:	ce 01       	movw	r24, r28
     6c0:	01 96       	adiw	r24, 0x01	; 1
     6c2:	0e 94 67 01 	call	0x2ce	; 0x2ce <_Z9servo_pidP11Servo_motor>
     6c6:	0e 94 34 05 	call	0xa68	; 0xa68 <__fixsfsi>
     6ca:	7b 01       	movw	r14, r22
			stepper_rotate(&stepper0,M0_DIR,M0_STEP);
     6cc:	43 2d       	mov	r20, r3
     6ce:	62 e0       	ldi	r22, 0x02	; 2
     6d0:	ce 01       	movw	r24, r28
     6d2:	4a 96       	adiw	r24, 0x1a	; 26
     6d4:	0e 94 fd 01 	call	0x3fa	; 0x3fa <_Z14stepper_rotateP13Stepper_motorhh>
     6d8:	21 e0       	ldi	r18, 0x01	; 1
     6da:	e2 16       	cp	r14, r18
     6dc:	2f ef       	ldi	r18, 0xFF	; 255
     6de:	f2 06       	cpc	r15, r18
     6e0:	24 f4       	brge	.+8      	; 0x6ea <main+0x1ae>
     6e2:	ee 24       	eor	r14, r14
     6e4:	e3 94       	inc	r14
     6e6:	ff 24       	eor	r15, r15
     6e8:	fa 94       	dec	r15
     6ea:	8f ef       	ldi	r24, 0xFF	; 255
     6ec:	e8 16       	cp	r14, r24
     6ee:	f1 04       	cpc	r15, r1
     6f0:	21 f0       	breq	.+8      	; 0x6fa <main+0x1be>
     6f2:	1c f0       	brlt	.+6      	; 0x6fa <main+0x1be>
     6f4:	ee 24       	eor	r14, r14
     6f6:	ea 94       	dec	r14
     6f8:	f2 2c       	mov	r15, r2
			output = 255; 
		}else if(output < -255){
			output = -255;
		}
		//usart_sendln(temp);	
		servo_rotate(output,&SERVO_0_PWM,SERVO_0_DIR_A,SERVO_0_DIR_B);
     6fa:	b7 01       	movw	r22, r14
     6fc:	0f 2c       	mov	r0, r15
     6fe:	00 0c       	add	r0, r0
     700:	88 0b       	sbc	r24, r24
     702:	99 0b       	sbc	r25, r25
     704:	0e 94 6c 05 	call	0xad8	; 0xad8 <__floatsisf>
     708:	00 e8       	ldi	r16, 0x80	; 128
     70a:	20 e4       	ldi	r18, 0x40	; 64
     70c:	44 eb       	ldi	r20, 0xB4	; 180
     70e:	50 e0       	ldi	r21, 0x00	; 0
     710:	0e 94 d7 01 	call	0x3ae	; 0x3ae <_Z12servo_rotatefPVhhh>
		

		tacho_values= PIND;
     714:	89 b1       	in	r24, 0x09	; 9
		if (tacho_state == 0){
     716:	11 11       	cpse	r17, r1
     718:	12 c0       	rjmp	.+36     	; 0x73e <main+0x202>
			if (PIND & TACHO_0_P){
     71a:	4a 9b       	sbis	0x09, 2	; 9
     71c:	6f cf       	rjmp	.-290    	; 0x5fc <main+0xc0>
				if(PIND & TACHO_0_M){
     71e:	4d 9b       	sbis	0x09, 5	; 9
     720:	07 c0       	rjmp	.+14     	; 0x730 <main+0x1f4>
					servo0.current_pos++;
     722:	8a 81       	ldd	r24, Y+2	; 0x02
     724:	9b 81       	ldd	r25, Y+3	; 0x03
     726:	01 96       	adiw	r24, 0x01	; 1
     728:	9b 83       	std	Y+3, r25	; 0x03
     72a:	8a 83       	std	Y+2, r24	; 0x02
				}else{
					servo0.current_pos--;
				}
				tacho_state = 1; 
     72c:	13 2d       	mov	r17, r3
     72e:	66 cf       	rjmp	.-308    	; 0x5fc <main+0xc0>
		if (tacho_state == 0){
			if (PIND & TACHO_0_P){
				if(PIND & TACHO_0_M){
					servo0.current_pos++;
				}else{
					servo0.current_pos--;
     730:	8a 81       	ldd	r24, Y+2	; 0x02
     732:	9b 81       	ldd	r25, Y+3	; 0x03
     734:	01 97       	sbiw	r24, 0x01	; 1
     736:	9b 83       	std	Y+3, r25	; 0x03
     738:	8a 83       	std	Y+2, r24	; 0x02
				}
				tacho_state = 1; 
     73a:	13 2d       	mov	r17, r3
     73c:	5f cf       	rjmp	.-322    	; 0x5fc <main+0xc0>
			}
		}else{
			if (!(PIND & TACHO_0_P)){
     73e:	4a 99       	sbic	0x09, 2	; 9
     740:	5d cf       	rjmp	.-326    	; 0x5fc <main+0xc0>
				tacho_state = 0; 
     742:	10 e0       	ldi	r17, 0x00	; 0
	
	DDRB |= M0_DIR | M0_STEP;
	Stepper_motor stepper0 = {0};
	stepper0.gear_train = 0.04 ;
	stepper0.pos = 0; 
    while (1) 
     744:	5b cf       	rjmp	.-330    	; 0x5fc <main+0xc0>

00000746 <_Z12timer_enablev>:
	timer_counter = 0; 
}

//Reset the counter
void timer_reset(){
	timer_counter = 0; 
     746:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
     74a:	e1 e8       	ldi	r30, 0x81	; 129
     74c:	f0 e0       	ldi	r31, 0x00	; 0
     74e:	10 82       	st	Z, r1
     750:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     754:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     758:	89 ef       	ldi	r24, 0xF9	; 249
     75a:	90 e0       	ldi	r25, 0x00	; 0
     75c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
     760:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
     764:	80 81       	ld	r24, Z
     766:	88 60       	ori	r24, 0x08	; 8
     768:	80 83       	st	Z, r24
     76a:	80 81       	ld	r24, Z
     76c:	83 60       	ori	r24, 0x03	; 3
     76e:	80 83       	st	Z, r24
     770:	ef e6       	ldi	r30, 0x6F	; 111
     772:	f0 e0       	ldi	r31, 0x00	; 0
     774:	80 81       	ld	r24, Z
     776:	82 60       	ori	r24, 0x02	; 2
     778:	80 83       	st	Z, r24
     77a:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <timer_counter>
     77e:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <timer_counter+0x1>
     782:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <timer_counter+0x2>
     786:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <timer_counter+0x3>
     78a:	08 95       	ret

0000078c <_Z8timer_msv>:
}

//Return the elapsed time since the counter was enable 
uint32_t timer_ms(){
	return timer_counter;
     78c:	60 91 25 01 	lds	r22, 0x0125	; 0x800125 <timer_counter>
     790:	70 91 26 01 	lds	r23, 0x0126	; 0x800126 <timer_counter+0x1>
     794:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <timer_counter+0x2>
     798:	90 91 28 01 	lds	r25, 0x0128	; 0x800128 <timer_counter+0x3>
}
     79c:	08 95       	ret

0000079e <__vector_11>:

//interrupt vector 
ISR (TIMER1_COMPA_vect) {
     79e:	1f 92       	push	r1
     7a0:	0f 92       	push	r0
     7a2:	0f b6       	in	r0, 0x3f	; 63
     7a4:	0f 92       	push	r0
     7a6:	11 24       	eor	r1, r1
     7a8:	8f 93       	push	r24
     7aa:	9f 93       	push	r25
     7ac:	af 93       	push	r26
     7ae:	bf 93       	push	r27
	timer_counter++;
     7b0:	80 91 25 01 	lds	r24, 0x0125	; 0x800125 <timer_counter>
     7b4:	90 91 26 01 	lds	r25, 0x0126	; 0x800126 <timer_counter+0x1>
     7b8:	a0 91 27 01 	lds	r26, 0x0127	; 0x800127 <timer_counter+0x2>
     7bc:	b0 91 28 01 	lds	r27, 0x0128	; 0x800128 <timer_counter+0x3>
     7c0:	01 96       	adiw	r24, 0x01	; 1
     7c2:	a1 1d       	adc	r26, r1
     7c4:	b1 1d       	adc	r27, r1
     7c6:	80 93 25 01 	sts	0x0125, r24	; 0x800125 <timer_counter>
     7ca:	90 93 26 01 	sts	0x0126, r25	; 0x800126 <timer_counter+0x1>
     7ce:	a0 93 27 01 	sts	0x0127, r26	; 0x800127 <timer_counter+0x2>
     7d2:	b0 93 28 01 	sts	0x0128, r27	; 0x800128 <timer_counter+0x3>
     7d6:	bf 91       	pop	r27
     7d8:	af 91       	pop	r26
     7da:	9f 91       	pop	r25
     7dc:	8f 91       	pop	r24
     7de:	0f 90       	pop	r0
     7e0:	0f be       	out	0x3f, r0	; 63
     7e2:	0f 90       	pop	r0
     7e4:	1f 90       	pop	r1
     7e6:	18 95       	reti

000007e8 <_Z12usart_enablej>:
	char * index = text;
	for( ; *index != 0; index++){
		usart_send(*index);
	}
	
}
     7e8:	28 e9       	ldi	r18, 0x98	; 152
     7ea:	20 93 c1 00 	sts	0x00C1, r18	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     7ee:	26 e0       	ldi	r18, 0x06	; 6
     7f0:	20 93 c2 00 	sts	0x00C2, r18	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
     7f4:	bc 01       	movw	r22, r24
     7f6:	80 e0       	ldi	r24, 0x00	; 0
     7f8:	90 e0       	ldi	r25, 0x00	; 0
     7fa:	0e 94 6a 05 	call	0xad4	; 0xad4 <__floatunsisf>
     7fe:	20 e0       	ldi	r18, 0x00	; 0
     800:	30 e0       	ldi	r19, 0x00	; 0
     802:	40 e8       	ldi	r20, 0x80	; 128
     804:	51 e4       	ldi	r21, 0x41	; 65
     806:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <__mulsf3>
     80a:	9b 01       	movw	r18, r22
     80c:	ac 01       	movw	r20, r24
     80e:	60 e0       	ldi	r22, 0x00	; 0
     810:	74 e2       	ldi	r23, 0x24	; 36
     812:	84 e7       	ldi	r24, 0x74	; 116
     814:	9b e4       	ldi	r25, 0x4B	; 75
     816:	0e 94 c2 04 	call	0x984	; 0x984 <__divsf3>
     81a:	20 e0       	ldi	r18, 0x00	; 0
     81c:	30 e0       	ldi	r19, 0x00	; 0
     81e:	40 e8       	ldi	r20, 0x80	; 128
     820:	5f e3       	ldi	r21, 0x3F	; 63
     822:	0e 94 55 04 	call	0x8aa	; 0x8aa <__subsf3>
     826:	0e 94 3b 05 	call	0xa76	; 0xa76 <__fixunssfsi>
     82a:	70 93 c5 00 	sts	0x00C5, r23	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     82e:	60 93 c4 00 	sts	0x00C4, r22	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     832:	08 95       	ret

00000834 <_Z10usart_sendc>:
     834:	e0 ec       	ldi	r30, 0xC0	; 192
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	90 81       	ld	r25, Z
     83a:	95 ff       	sbrs	r25, 5
     83c:	fd cf       	rjmp	.-6      	; 0x838 <_Z10usart_sendc+0x4>
     83e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     842:	08 95       	ret

00000844 <_Z13usart_newlinev>:
     844:	8a e0       	ldi	r24, 0x0A	; 10
     846:	0e 94 1a 04 	call	0x834	; 0x834 <_Z10usart_sendc>
     84a:	08 95       	ret

0000084c <_Z10usart_sendi>:
     84c:	0f 93       	push	r16
     84e:	1f 93       	push	r17
     850:	cf 93       	push	r28
     852:	df 93       	push	r29
     854:	cd b7       	in	r28, 0x3d	; 61
     856:	de b7       	in	r29, 0x3e	; 62
     858:	2a 97       	sbiw	r28, 0x0a	; 10
     85a:	0f b6       	in	r0, 0x3f	; 63
     85c:	f8 94       	cli
     85e:	de bf       	out	0x3e, r29	; 62
     860:	0f be       	out	0x3f, r0	; 63
     862:	cd bf       	out	0x3d, r28	; 61
     864:	4a e0       	ldi	r20, 0x0A	; 10
     866:	be 01       	movw	r22, r28
     868:	6f 5f       	subi	r22, 0xFF	; 255
     86a:	7f 4f       	sbci	r23, 0xFF	; 255
     86c:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <__itoa_ncheck>
     870:	89 81       	ldd	r24, Y+1	; 0x01
     872:	88 23       	and	r24, r24
     874:	51 f0       	breq	.+20     	; 0x88a <_Z10usart_sendi+0x3e>
     876:	8e 01       	movw	r16, r28
     878:	0e 5f       	subi	r16, 0xFE	; 254
     87a:	1f 4f       	sbci	r17, 0xFF	; 255
     87c:	0e 94 1a 04 	call	0x834	; 0x834 <_Z10usart_sendc>
     880:	f8 01       	movw	r30, r16
     882:	81 91       	ld	r24, Z+
     884:	8f 01       	movw	r16, r30
     886:	81 11       	cpse	r24, r1
     888:	f9 cf       	rjmp	.-14     	; 0x87c <_Z10usart_sendi+0x30>
     88a:	2a 96       	adiw	r28, 0x0a	; 10
     88c:	0f b6       	in	r0, 0x3f	; 63
     88e:	f8 94       	cli
     890:	de bf       	out	0x3e, r29	; 62
     892:	0f be       	out	0x3f, r0	; 63
     894:	cd bf       	out	0x3d, r28	; 61
     896:	df 91       	pop	r29
     898:	cf 91       	pop	r28
     89a:	1f 91       	pop	r17
     89c:	0f 91       	pop	r16
     89e:	08 95       	ret

000008a0 <_Z12usart_sendlni>:
//Send data with a newline added 
void usart_sendln(int integer){
	usart_send(integer);
     8a0:	0e 94 26 04 	call	0x84c	; 0x84c <_Z10usart_sendi>
	usart_newline();	
     8a4:	0e 94 22 04 	call	0x844	; 0x844 <_Z13usart_newlinev>
     8a8:	08 95       	ret

000008aa <__subsf3>:
     8aa:	50 58       	subi	r21, 0x80	; 128

000008ac <__addsf3>:
     8ac:	bb 27       	eor	r27, r27
     8ae:	aa 27       	eor	r26, r26
     8b0:	0e 94 6d 04 	call	0x8da	; 0x8da <__addsf3x>
     8b4:	0c 94 be 05 	jmp	0xb7c	; 0xb7c <__fp_round>
     8b8:	0e 94 b0 05 	call	0xb60	; 0xb60 <__fp_pscA>
     8bc:	38 f0       	brcs	.+14     	; 0x8cc <__addsf3+0x20>
     8be:	0e 94 b7 05 	call	0xb6e	; 0xb6e <__fp_pscB>
     8c2:	20 f0       	brcs	.+8      	; 0x8cc <__addsf3+0x20>
     8c4:	39 f4       	brne	.+14     	; 0x8d4 <__addsf3+0x28>
     8c6:	9f 3f       	cpi	r25, 0xFF	; 255
     8c8:	19 f4       	brne	.+6      	; 0x8d0 <__addsf3+0x24>
     8ca:	26 f4       	brtc	.+8      	; 0x8d4 <__addsf3+0x28>
     8cc:	0c 94 ad 05 	jmp	0xb5a	; 0xb5a <__fp_nan>
     8d0:	0e f4       	brtc	.+2      	; 0x8d4 <__addsf3+0x28>
     8d2:	e0 95       	com	r30
     8d4:	e7 fb       	bst	r30, 7
     8d6:	0c 94 a7 05 	jmp	0xb4e	; 0xb4e <__fp_inf>

000008da <__addsf3x>:
     8da:	e9 2f       	mov	r30, r25
     8dc:	0e 94 cf 05 	call	0xb9e	; 0xb9e <__fp_split3>
     8e0:	58 f3       	brcs	.-42     	; 0x8b8 <__addsf3+0xc>
     8e2:	ba 17       	cp	r27, r26
     8e4:	62 07       	cpc	r22, r18
     8e6:	73 07       	cpc	r23, r19
     8e8:	84 07       	cpc	r24, r20
     8ea:	95 07       	cpc	r25, r21
     8ec:	20 f0       	brcs	.+8      	; 0x8f6 <__addsf3x+0x1c>
     8ee:	79 f4       	brne	.+30     	; 0x90e <__stack+0xf>
     8f0:	a6 f5       	brtc	.+104    	; 0x95a <__stack+0x5b>
     8f2:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__fp_zero>
     8f6:	0e f4       	brtc	.+2      	; 0x8fa <__addsf3x+0x20>
     8f8:	e0 95       	com	r30
     8fa:	0b 2e       	mov	r0, r27
     8fc:	ba 2f       	mov	r27, r26
     8fe:	a0 2d       	mov	r26, r0
     900:	0b 01       	movw	r0, r22
     902:	b9 01       	movw	r22, r18
     904:	90 01       	movw	r18, r0
     906:	0c 01       	movw	r0, r24
     908:	ca 01       	movw	r24, r20
     90a:	a0 01       	movw	r20, r0
     90c:	11 24       	eor	r1, r1
     90e:	ff 27       	eor	r31, r31
     910:	59 1b       	sub	r21, r25
     912:	99 f0       	breq	.+38     	; 0x93a <__stack+0x3b>
     914:	59 3f       	cpi	r21, 0xF9	; 249
     916:	50 f4       	brcc	.+20     	; 0x92c <__stack+0x2d>
     918:	50 3e       	cpi	r21, 0xE0	; 224
     91a:	68 f1       	brcs	.+90     	; 0x976 <__stack+0x77>
     91c:	1a 16       	cp	r1, r26
     91e:	f0 40       	sbci	r31, 0x00	; 0
     920:	a2 2f       	mov	r26, r18
     922:	23 2f       	mov	r18, r19
     924:	34 2f       	mov	r19, r20
     926:	44 27       	eor	r20, r20
     928:	58 5f       	subi	r21, 0xF8	; 248
     92a:	f3 cf       	rjmp	.-26     	; 0x912 <__stack+0x13>
     92c:	46 95       	lsr	r20
     92e:	37 95       	ror	r19
     930:	27 95       	ror	r18
     932:	a7 95       	ror	r26
     934:	f0 40       	sbci	r31, 0x00	; 0
     936:	53 95       	inc	r21
     938:	c9 f7       	brne	.-14     	; 0x92c <__stack+0x2d>
     93a:	7e f4       	brtc	.+30     	; 0x95a <__stack+0x5b>
     93c:	1f 16       	cp	r1, r31
     93e:	ba 0b       	sbc	r27, r26
     940:	62 0b       	sbc	r22, r18
     942:	73 0b       	sbc	r23, r19
     944:	84 0b       	sbc	r24, r20
     946:	ba f0       	brmi	.+46     	; 0x976 <__stack+0x77>
     948:	91 50       	subi	r25, 0x01	; 1
     94a:	a1 f0       	breq	.+40     	; 0x974 <__stack+0x75>
     94c:	ff 0f       	add	r31, r31
     94e:	bb 1f       	adc	r27, r27
     950:	66 1f       	adc	r22, r22
     952:	77 1f       	adc	r23, r23
     954:	88 1f       	adc	r24, r24
     956:	c2 f7       	brpl	.-16     	; 0x948 <__stack+0x49>
     958:	0e c0       	rjmp	.+28     	; 0x976 <__stack+0x77>
     95a:	ba 0f       	add	r27, r26
     95c:	62 1f       	adc	r22, r18
     95e:	73 1f       	adc	r23, r19
     960:	84 1f       	adc	r24, r20
     962:	48 f4       	brcc	.+18     	; 0x976 <__stack+0x77>
     964:	87 95       	ror	r24
     966:	77 95       	ror	r23
     968:	67 95       	ror	r22
     96a:	b7 95       	ror	r27
     96c:	f7 95       	ror	r31
     96e:	9e 3f       	cpi	r25, 0xFE	; 254
     970:	08 f0       	brcs	.+2      	; 0x974 <__stack+0x75>
     972:	b0 cf       	rjmp	.-160    	; 0x8d4 <__addsf3+0x28>
     974:	93 95       	inc	r25
     976:	88 0f       	add	r24, r24
     978:	08 f0       	brcs	.+2      	; 0x97c <__stack+0x7d>
     97a:	99 27       	eor	r25, r25
     97c:	ee 0f       	add	r30, r30
     97e:	97 95       	ror	r25
     980:	87 95       	ror	r24
     982:	08 95       	ret

00000984 <__divsf3>:
     984:	0e 94 d6 04 	call	0x9ac	; 0x9ac <__divsf3x>
     988:	0c 94 be 05 	jmp	0xb7c	; 0xb7c <__fp_round>
     98c:	0e 94 b7 05 	call	0xb6e	; 0xb6e <__fp_pscB>
     990:	58 f0       	brcs	.+22     	; 0x9a8 <__divsf3+0x24>
     992:	0e 94 b0 05 	call	0xb60	; 0xb60 <__fp_pscA>
     996:	40 f0       	brcs	.+16     	; 0x9a8 <__divsf3+0x24>
     998:	29 f4       	brne	.+10     	; 0x9a4 <__divsf3+0x20>
     99a:	5f 3f       	cpi	r21, 0xFF	; 255
     99c:	29 f0       	breq	.+10     	; 0x9a8 <__divsf3+0x24>
     99e:	0c 94 a7 05 	jmp	0xb4e	; 0xb4e <__fp_inf>
     9a2:	51 11       	cpse	r21, r1
     9a4:	0c 94 f2 05 	jmp	0xbe4	; 0xbe4 <__fp_szero>
     9a8:	0c 94 ad 05 	jmp	0xb5a	; 0xb5a <__fp_nan>

000009ac <__divsf3x>:
     9ac:	0e 94 cf 05 	call	0xb9e	; 0xb9e <__fp_split3>
     9b0:	68 f3       	brcs	.-38     	; 0x98c <__divsf3+0x8>

000009b2 <__divsf3_pse>:
     9b2:	99 23       	and	r25, r25
     9b4:	b1 f3       	breq	.-20     	; 0x9a2 <__divsf3+0x1e>
     9b6:	55 23       	and	r21, r21
     9b8:	91 f3       	breq	.-28     	; 0x99e <__divsf3+0x1a>
     9ba:	95 1b       	sub	r25, r21
     9bc:	55 0b       	sbc	r21, r21
     9be:	bb 27       	eor	r27, r27
     9c0:	aa 27       	eor	r26, r26
     9c2:	62 17       	cp	r22, r18
     9c4:	73 07       	cpc	r23, r19
     9c6:	84 07       	cpc	r24, r20
     9c8:	38 f0       	brcs	.+14     	; 0x9d8 <__divsf3_pse+0x26>
     9ca:	9f 5f       	subi	r25, 0xFF	; 255
     9cc:	5f 4f       	sbci	r21, 0xFF	; 255
     9ce:	22 0f       	add	r18, r18
     9d0:	33 1f       	adc	r19, r19
     9d2:	44 1f       	adc	r20, r20
     9d4:	aa 1f       	adc	r26, r26
     9d6:	a9 f3       	breq	.-22     	; 0x9c2 <__divsf3_pse+0x10>
     9d8:	35 d0       	rcall	.+106    	; 0xa44 <__divsf3_pse+0x92>
     9da:	0e 2e       	mov	r0, r30
     9dc:	3a f0       	brmi	.+14     	; 0x9ec <__divsf3_pse+0x3a>
     9de:	e0 e8       	ldi	r30, 0x80	; 128
     9e0:	32 d0       	rcall	.+100    	; 0xa46 <__divsf3_pse+0x94>
     9e2:	91 50       	subi	r25, 0x01	; 1
     9e4:	50 40       	sbci	r21, 0x00	; 0
     9e6:	e6 95       	lsr	r30
     9e8:	00 1c       	adc	r0, r0
     9ea:	ca f7       	brpl	.-14     	; 0x9de <__divsf3_pse+0x2c>
     9ec:	2b d0       	rcall	.+86     	; 0xa44 <__divsf3_pse+0x92>
     9ee:	fe 2f       	mov	r31, r30
     9f0:	29 d0       	rcall	.+82     	; 0xa44 <__divsf3_pse+0x92>
     9f2:	66 0f       	add	r22, r22
     9f4:	77 1f       	adc	r23, r23
     9f6:	88 1f       	adc	r24, r24
     9f8:	bb 1f       	adc	r27, r27
     9fa:	26 17       	cp	r18, r22
     9fc:	37 07       	cpc	r19, r23
     9fe:	48 07       	cpc	r20, r24
     a00:	ab 07       	cpc	r26, r27
     a02:	b0 e8       	ldi	r27, 0x80	; 128
     a04:	09 f0       	breq	.+2      	; 0xa08 <__divsf3_pse+0x56>
     a06:	bb 0b       	sbc	r27, r27
     a08:	80 2d       	mov	r24, r0
     a0a:	bf 01       	movw	r22, r30
     a0c:	ff 27       	eor	r31, r31
     a0e:	93 58       	subi	r25, 0x83	; 131
     a10:	5f 4f       	sbci	r21, 0xFF	; 255
     a12:	3a f0       	brmi	.+14     	; 0xa22 <__divsf3_pse+0x70>
     a14:	9e 3f       	cpi	r25, 0xFE	; 254
     a16:	51 05       	cpc	r21, r1
     a18:	78 f0       	brcs	.+30     	; 0xa38 <__divsf3_pse+0x86>
     a1a:	0c 94 a7 05 	jmp	0xb4e	; 0xb4e <__fp_inf>
     a1e:	0c 94 f2 05 	jmp	0xbe4	; 0xbe4 <__fp_szero>
     a22:	5f 3f       	cpi	r21, 0xFF	; 255
     a24:	e4 f3       	brlt	.-8      	; 0xa1e <__divsf3_pse+0x6c>
     a26:	98 3e       	cpi	r25, 0xE8	; 232
     a28:	d4 f3       	brlt	.-12     	; 0xa1e <__divsf3_pse+0x6c>
     a2a:	86 95       	lsr	r24
     a2c:	77 95       	ror	r23
     a2e:	67 95       	ror	r22
     a30:	b7 95       	ror	r27
     a32:	f7 95       	ror	r31
     a34:	9f 5f       	subi	r25, 0xFF	; 255
     a36:	c9 f7       	brne	.-14     	; 0xa2a <__divsf3_pse+0x78>
     a38:	88 0f       	add	r24, r24
     a3a:	91 1d       	adc	r25, r1
     a3c:	96 95       	lsr	r25
     a3e:	87 95       	ror	r24
     a40:	97 f9       	bld	r25, 7
     a42:	08 95       	ret
     a44:	e1 e0       	ldi	r30, 0x01	; 1
     a46:	66 0f       	add	r22, r22
     a48:	77 1f       	adc	r23, r23
     a4a:	88 1f       	adc	r24, r24
     a4c:	bb 1f       	adc	r27, r27
     a4e:	62 17       	cp	r22, r18
     a50:	73 07       	cpc	r23, r19
     a52:	84 07       	cpc	r24, r20
     a54:	ba 07       	cpc	r27, r26
     a56:	20 f0       	brcs	.+8      	; 0xa60 <__divsf3_pse+0xae>
     a58:	62 1b       	sub	r22, r18
     a5a:	73 0b       	sbc	r23, r19
     a5c:	84 0b       	sbc	r24, r20
     a5e:	ba 0b       	sbc	r27, r26
     a60:	ee 1f       	adc	r30, r30
     a62:	88 f7       	brcc	.-30     	; 0xa46 <__divsf3_pse+0x94>
     a64:	e0 95       	com	r30
     a66:	08 95       	ret

00000a68 <__fixsfsi>:
     a68:	0e 94 3b 05 	call	0xa76	; 0xa76 <__fixunssfsi>
     a6c:	68 94       	set
     a6e:	b1 11       	cpse	r27, r1
     a70:	0c 94 f2 05 	jmp	0xbe4	; 0xbe4 <__fp_szero>
     a74:	08 95       	ret

00000a76 <__fixunssfsi>:
     a76:	0e 94 d7 05 	call	0xbae	; 0xbae <__fp_splitA>
     a7a:	88 f0       	brcs	.+34     	; 0xa9e <__fixunssfsi+0x28>
     a7c:	9f 57       	subi	r25, 0x7F	; 127
     a7e:	98 f0       	brcs	.+38     	; 0xaa6 <__fixunssfsi+0x30>
     a80:	b9 2f       	mov	r27, r25
     a82:	99 27       	eor	r25, r25
     a84:	b7 51       	subi	r27, 0x17	; 23
     a86:	b0 f0       	brcs	.+44     	; 0xab4 <__fixunssfsi+0x3e>
     a88:	e1 f0       	breq	.+56     	; 0xac2 <__fixunssfsi+0x4c>
     a8a:	66 0f       	add	r22, r22
     a8c:	77 1f       	adc	r23, r23
     a8e:	88 1f       	adc	r24, r24
     a90:	99 1f       	adc	r25, r25
     a92:	1a f0       	brmi	.+6      	; 0xa9a <__fixunssfsi+0x24>
     a94:	ba 95       	dec	r27
     a96:	c9 f7       	brne	.-14     	; 0xa8a <__fixunssfsi+0x14>
     a98:	14 c0       	rjmp	.+40     	; 0xac2 <__fixunssfsi+0x4c>
     a9a:	b1 30       	cpi	r27, 0x01	; 1
     a9c:	91 f0       	breq	.+36     	; 0xac2 <__fixunssfsi+0x4c>
     a9e:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <__fp_zero>
     aa2:	b1 e0       	ldi	r27, 0x01	; 1
     aa4:	08 95       	ret
     aa6:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__fp_zero>
     aaa:	67 2f       	mov	r22, r23
     aac:	78 2f       	mov	r23, r24
     aae:	88 27       	eor	r24, r24
     ab0:	b8 5f       	subi	r27, 0xF8	; 248
     ab2:	39 f0       	breq	.+14     	; 0xac2 <__fixunssfsi+0x4c>
     ab4:	b9 3f       	cpi	r27, 0xF9	; 249
     ab6:	cc f3       	brlt	.-14     	; 0xaaa <__fixunssfsi+0x34>
     ab8:	86 95       	lsr	r24
     aba:	77 95       	ror	r23
     abc:	67 95       	ror	r22
     abe:	b3 95       	inc	r27
     ac0:	d9 f7       	brne	.-10     	; 0xab8 <__fixunssfsi+0x42>
     ac2:	3e f4       	brtc	.+14     	; 0xad2 <__fixunssfsi+0x5c>
     ac4:	90 95       	com	r25
     ac6:	80 95       	com	r24
     ac8:	70 95       	com	r23
     aca:	61 95       	neg	r22
     acc:	7f 4f       	sbci	r23, 0xFF	; 255
     ace:	8f 4f       	sbci	r24, 0xFF	; 255
     ad0:	9f 4f       	sbci	r25, 0xFF	; 255
     ad2:	08 95       	ret

00000ad4 <__floatunsisf>:
     ad4:	e8 94       	clt
     ad6:	09 c0       	rjmp	.+18     	; 0xaea <__floatsisf+0x12>

00000ad8 <__floatsisf>:
     ad8:	97 fb       	bst	r25, 7
     ada:	3e f4       	brtc	.+14     	; 0xaea <__floatsisf+0x12>
     adc:	90 95       	com	r25
     ade:	80 95       	com	r24
     ae0:	70 95       	com	r23
     ae2:	61 95       	neg	r22
     ae4:	7f 4f       	sbci	r23, 0xFF	; 255
     ae6:	8f 4f       	sbci	r24, 0xFF	; 255
     ae8:	9f 4f       	sbci	r25, 0xFF	; 255
     aea:	99 23       	and	r25, r25
     aec:	a9 f0       	breq	.+42     	; 0xb18 <__floatsisf+0x40>
     aee:	f9 2f       	mov	r31, r25
     af0:	96 e9       	ldi	r25, 0x96	; 150
     af2:	bb 27       	eor	r27, r27
     af4:	93 95       	inc	r25
     af6:	f6 95       	lsr	r31
     af8:	87 95       	ror	r24
     afa:	77 95       	ror	r23
     afc:	67 95       	ror	r22
     afe:	b7 95       	ror	r27
     b00:	f1 11       	cpse	r31, r1
     b02:	f8 cf       	rjmp	.-16     	; 0xaf4 <__floatsisf+0x1c>
     b04:	fa f4       	brpl	.+62     	; 0xb44 <__floatsisf+0x6c>
     b06:	bb 0f       	add	r27, r27
     b08:	11 f4       	brne	.+4      	; 0xb0e <__floatsisf+0x36>
     b0a:	60 ff       	sbrs	r22, 0
     b0c:	1b c0       	rjmp	.+54     	; 0xb44 <__floatsisf+0x6c>
     b0e:	6f 5f       	subi	r22, 0xFF	; 255
     b10:	7f 4f       	sbci	r23, 0xFF	; 255
     b12:	8f 4f       	sbci	r24, 0xFF	; 255
     b14:	9f 4f       	sbci	r25, 0xFF	; 255
     b16:	16 c0       	rjmp	.+44     	; 0xb44 <__floatsisf+0x6c>
     b18:	88 23       	and	r24, r24
     b1a:	11 f0       	breq	.+4      	; 0xb20 <__floatsisf+0x48>
     b1c:	96 e9       	ldi	r25, 0x96	; 150
     b1e:	11 c0       	rjmp	.+34     	; 0xb42 <__floatsisf+0x6a>
     b20:	77 23       	and	r23, r23
     b22:	21 f0       	breq	.+8      	; 0xb2c <__floatsisf+0x54>
     b24:	9e e8       	ldi	r25, 0x8E	; 142
     b26:	87 2f       	mov	r24, r23
     b28:	76 2f       	mov	r23, r22
     b2a:	05 c0       	rjmp	.+10     	; 0xb36 <__floatsisf+0x5e>
     b2c:	66 23       	and	r22, r22
     b2e:	71 f0       	breq	.+28     	; 0xb4c <__floatsisf+0x74>
     b30:	96 e8       	ldi	r25, 0x86	; 134
     b32:	86 2f       	mov	r24, r22
     b34:	70 e0       	ldi	r23, 0x00	; 0
     b36:	60 e0       	ldi	r22, 0x00	; 0
     b38:	2a f0       	brmi	.+10     	; 0xb44 <__floatsisf+0x6c>
     b3a:	9a 95       	dec	r25
     b3c:	66 0f       	add	r22, r22
     b3e:	77 1f       	adc	r23, r23
     b40:	88 1f       	adc	r24, r24
     b42:	da f7       	brpl	.-10     	; 0xb3a <__floatsisf+0x62>
     b44:	88 0f       	add	r24, r24
     b46:	96 95       	lsr	r25
     b48:	87 95       	ror	r24
     b4a:	97 f9       	bld	r25, 7
     b4c:	08 95       	ret

00000b4e <__fp_inf>:
     b4e:	97 f9       	bld	r25, 7
     b50:	9f 67       	ori	r25, 0x7F	; 127
     b52:	80 e8       	ldi	r24, 0x80	; 128
     b54:	70 e0       	ldi	r23, 0x00	; 0
     b56:	60 e0       	ldi	r22, 0x00	; 0
     b58:	08 95       	ret

00000b5a <__fp_nan>:
     b5a:	9f ef       	ldi	r25, 0xFF	; 255
     b5c:	80 ec       	ldi	r24, 0xC0	; 192
     b5e:	08 95       	ret

00000b60 <__fp_pscA>:
     b60:	00 24       	eor	r0, r0
     b62:	0a 94       	dec	r0
     b64:	16 16       	cp	r1, r22
     b66:	17 06       	cpc	r1, r23
     b68:	18 06       	cpc	r1, r24
     b6a:	09 06       	cpc	r0, r25
     b6c:	08 95       	ret

00000b6e <__fp_pscB>:
     b6e:	00 24       	eor	r0, r0
     b70:	0a 94       	dec	r0
     b72:	12 16       	cp	r1, r18
     b74:	13 06       	cpc	r1, r19
     b76:	14 06       	cpc	r1, r20
     b78:	05 06       	cpc	r0, r21
     b7a:	08 95       	ret

00000b7c <__fp_round>:
     b7c:	09 2e       	mov	r0, r25
     b7e:	03 94       	inc	r0
     b80:	00 0c       	add	r0, r0
     b82:	11 f4       	brne	.+4      	; 0xb88 <__fp_round+0xc>
     b84:	88 23       	and	r24, r24
     b86:	52 f0       	brmi	.+20     	; 0xb9c <__fp_round+0x20>
     b88:	bb 0f       	add	r27, r27
     b8a:	40 f4       	brcc	.+16     	; 0xb9c <__fp_round+0x20>
     b8c:	bf 2b       	or	r27, r31
     b8e:	11 f4       	brne	.+4      	; 0xb94 <__fp_round+0x18>
     b90:	60 ff       	sbrs	r22, 0
     b92:	04 c0       	rjmp	.+8      	; 0xb9c <__fp_round+0x20>
     b94:	6f 5f       	subi	r22, 0xFF	; 255
     b96:	7f 4f       	sbci	r23, 0xFF	; 255
     b98:	8f 4f       	sbci	r24, 0xFF	; 255
     b9a:	9f 4f       	sbci	r25, 0xFF	; 255
     b9c:	08 95       	ret

00000b9e <__fp_split3>:
     b9e:	57 fd       	sbrc	r21, 7
     ba0:	90 58       	subi	r25, 0x80	; 128
     ba2:	44 0f       	add	r20, r20
     ba4:	55 1f       	adc	r21, r21
     ba6:	59 f0       	breq	.+22     	; 0xbbe <__fp_splitA+0x10>
     ba8:	5f 3f       	cpi	r21, 0xFF	; 255
     baa:	71 f0       	breq	.+28     	; 0xbc8 <__fp_splitA+0x1a>
     bac:	47 95       	ror	r20

00000bae <__fp_splitA>:
     bae:	88 0f       	add	r24, r24
     bb0:	97 fb       	bst	r25, 7
     bb2:	99 1f       	adc	r25, r25
     bb4:	61 f0       	breq	.+24     	; 0xbce <__fp_splitA+0x20>
     bb6:	9f 3f       	cpi	r25, 0xFF	; 255
     bb8:	79 f0       	breq	.+30     	; 0xbd8 <__fp_splitA+0x2a>
     bba:	87 95       	ror	r24
     bbc:	08 95       	ret
     bbe:	12 16       	cp	r1, r18
     bc0:	13 06       	cpc	r1, r19
     bc2:	14 06       	cpc	r1, r20
     bc4:	55 1f       	adc	r21, r21
     bc6:	f2 cf       	rjmp	.-28     	; 0xbac <__fp_split3+0xe>
     bc8:	46 95       	lsr	r20
     bca:	f1 df       	rcall	.-30     	; 0xbae <__fp_splitA>
     bcc:	08 c0       	rjmp	.+16     	; 0xbde <__fp_splitA+0x30>
     bce:	16 16       	cp	r1, r22
     bd0:	17 06       	cpc	r1, r23
     bd2:	18 06       	cpc	r1, r24
     bd4:	99 1f       	adc	r25, r25
     bd6:	f1 cf       	rjmp	.-30     	; 0xbba <__fp_splitA+0xc>
     bd8:	86 95       	lsr	r24
     bda:	71 05       	cpc	r23, r1
     bdc:	61 05       	cpc	r22, r1
     bde:	08 94       	sec
     be0:	08 95       	ret

00000be2 <__fp_zero>:
     be2:	e8 94       	clt

00000be4 <__fp_szero>:
     be4:	bb 27       	eor	r27, r27
     be6:	66 27       	eor	r22, r22
     be8:	77 27       	eor	r23, r23
     bea:	cb 01       	movw	r24, r22
     bec:	97 f9       	bld	r25, 7
     bee:	08 95       	ret

00000bf0 <__mulsf3>:
     bf0:	0e 94 0b 06 	call	0xc16	; 0xc16 <__mulsf3x>
     bf4:	0c 94 be 05 	jmp	0xb7c	; 0xb7c <__fp_round>
     bf8:	0e 94 b0 05 	call	0xb60	; 0xb60 <__fp_pscA>
     bfc:	38 f0       	brcs	.+14     	; 0xc0c <__mulsf3+0x1c>
     bfe:	0e 94 b7 05 	call	0xb6e	; 0xb6e <__fp_pscB>
     c02:	20 f0       	brcs	.+8      	; 0xc0c <__mulsf3+0x1c>
     c04:	95 23       	and	r25, r21
     c06:	11 f0       	breq	.+4      	; 0xc0c <__mulsf3+0x1c>
     c08:	0c 94 a7 05 	jmp	0xb4e	; 0xb4e <__fp_inf>
     c0c:	0c 94 ad 05 	jmp	0xb5a	; 0xb5a <__fp_nan>
     c10:	11 24       	eor	r1, r1
     c12:	0c 94 f2 05 	jmp	0xbe4	; 0xbe4 <__fp_szero>

00000c16 <__mulsf3x>:
     c16:	0e 94 cf 05 	call	0xb9e	; 0xb9e <__fp_split3>
     c1a:	70 f3       	brcs	.-36     	; 0xbf8 <__mulsf3+0x8>

00000c1c <__mulsf3_pse>:
     c1c:	95 9f       	mul	r25, r21
     c1e:	c1 f3       	breq	.-16     	; 0xc10 <__mulsf3+0x20>
     c20:	95 0f       	add	r25, r21
     c22:	50 e0       	ldi	r21, 0x00	; 0
     c24:	55 1f       	adc	r21, r21
     c26:	62 9f       	mul	r22, r18
     c28:	f0 01       	movw	r30, r0
     c2a:	72 9f       	mul	r23, r18
     c2c:	bb 27       	eor	r27, r27
     c2e:	f0 0d       	add	r31, r0
     c30:	b1 1d       	adc	r27, r1
     c32:	63 9f       	mul	r22, r19
     c34:	aa 27       	eor	r26, r26
     c36:	f0 0d       	add	r31, r0
     c38:	b1 1d       	adc	r27, r1
     c3a:	aa 1f       	adc	r26, r26
     c3c:	64 9f       	mul	r22, r20
     c3e:	66 27       	eor	r22, r22
     c40:	b0 0d       	add	r27, r0
     c42:	a1 1d       	adc	r26, r1
     c44:	66 1f       	adc	r22, r22
     c46:	82 9f       	mul	r24, r18
     c48:	22 27       	eor	r18, r18
     c4a:	b0 0d       	add	r27, r0
     c4c:	a1 1d       	adc	r26, r1
     c4e:	62 1f       	adc	r22, r18
     c50:	73 9f       	mul	r23, r19
     c52:	b0 0d       	add	r27, r0
     c54:	a1 1d       	adc	r26, r1
     c56:	62 1f       	adc	r22, r18
     c58:	83 9f       	mul	r24, r19
     c5a:	a0 0d       	add	r26, r0
     c5c:	61 1d       	adc	r22, r1
     c5e:	22 1f       	adc	r18, r18
     c60:	74 9f       	mul	r23, r20
     c62:	33 27       	eor	r19, r19
     c64:	a0 0d       	add	r26, r0
     c66:	61 1d       	adc	r22, r1
     c68:	23 1f       	adc	r18, r19
     c6a:	84 9f       	mul	r24, r20
     c6c:	60 0d       	add	r22, r0
     c6e:	21 1d       	adc	r18, r1
     c70:	82 2f       	mov	r24, r18
     c72:	76 2f       	mov	r23, r22
     c74:	6a 2f       	mov	r22, r26
     c76:	11 24       	eor	r1, r1
     c78:	9f 57       	subi	r25, 0x7F	; 127
     c7a:	50 40       	sbci	r21, 0x00	; 0
     c7c:	9a f0       	brmi	.+38     	; 0xca4 <__mulsf3_pse+0x88>
     c7e:	f1 f0       	breq	.+60     	; 0xcbc <__mulsf3_pse+0xa0>
     c80:	88 23       	and	r24, r24
     c82:	4a f0       	brmi	.+18     	; 0xc96 <__mulsf3_pse+0x7a>
     c84:	ee 0f       	add	r30, r30
     c86:	ff 1f       	adc	r31, r31
     c88:	bb 1f       	adc	r27, r27
     c8a:	66 1f       	adc	r22, r22
     c8c:	77 1f       	adc	r23, r23
     c8e:	88 1f       	adc	r24, r24
     c90:	91 50       	subi	r25, 0x01	; 1
     c92:	50 40       	sbci	r21, 0x00	; 0
     c94:	a9 f7       	brne	.-22     	; 0xc80 <__mulsf3_pse+0x64>
     c96:	9e 3f       	cpi	r25, 0xFE	; 254
     c98:	51 05       	cpc	r21, r1
     c9a:	80 f0       	brcs	.+32     	; 0xcbc <__mulsf3_pse+0xa0>
     c9c:	0c 94 a7 05 	jmp	0xb4e	; 0xb4e <__fp_inf>
     ca0:	0c 94 f2 05 	jmp	0xbe4	; 0xbe4 <__fp_szero>
     ca4:	5f 3f       	cpi	r21, 0xFF	; 255
     ca6:	e4 f3       	brlt	.-8      	; 0xca0 <__mulsf3_pse+0x84>
     ca8:	98 3e       	cpi	r25, 0xE8	; 232
     caa:	d4 f3       	brlt	.-12     	; 0xca0 <__mulsf3_pse+0x84>
     cac:	86 95       	lsr	r24
     cae:	77 95       	ror	r23
     cb0:	67 95       	ror	r22
     cb2:	b7 95       	ror	r27
     cb4:	f7 95       	ror	r31
     cb6:	e7 95       	ror	r30
     cb8:	9f 5f       	subi	r25, 0xFF	; 255
     cba:	c1 f7       	brne	.-16     	; 0xcac <__mulsf3_pse+0x90>
     cbc:	fe 2b       	or	r31, r30
     cbe:	88 0f       	add	r24, r24
     cc0:	91 1d       	adc	r25, r1
     cc2:	96 95       	lsr	r25
     cc4:	87 95       	ror	r24
     cc6:	97 f9       	bld	r25, 7
     cc8:	08 95       	ret

00000cca <pow>:
     cca:	fa 01       	movw	r30, r20
     ccc:	ee 0f       	add	r30, r30
     cce:	ff 1f       	adc	r31, r31
     cd0:	30 96       	adiw	r30, 0x00	; 0
     cd2:	21 05       	cpc	r18, r1
     cd4:	31 05       	cpc	r19, r1
     cd6:	a1 f1       	breq	.+104    	; 0xd40 <pow+0x76>
     cd8:	61 15       	cp	r22, r1
     cda:	71 05       	cpc	r23, r1
     cdc:	61 f4       	brne	.+24     	; 0xcf6 <pow+0x2c>
     cde:	80 38       	cpi	r24, 0x80	; 128
     ce0:	bf e3       	ldi	r27, 0x3F	; 63
     ce2:	9b 07       	cpc	r25, r27
     ce4:	49 f1       	breq	.+82     	; 0xd38 <pow+0x6e>
     ce6:	68 94       	set
     ce8:	90 38       	cpi	r25, 0x80	; 128
     cea:	81 05       	cpc	r24, r1
     cec:	61 f0       	breq	.+24     	; 0xd06 <pow+0x3c>
     cee:	80 38       	cpi	r24, 0x80	; 128
     cf0:	bf ef       	ldi	r27, 0xFF	; 255
     cf2:	9b 07       	cpc	r25, r27
     cf4:	41 f0       	breq	.+16     	; 0xd06 <pow+0x3c>
     cf6:	99 23       	and	r25, r25
     cf8:	4a f5       	brpl	.+82     	; 0xd4c <pow+0x82>
     cfa:	ff 3f       	cpi	r31, 0xFF	; 255
     cfc:	e1 05       	cpc	r30, r1
     cfe:	31 05       	cpc	r19, r1
     d00:	21 05       	cpc	r18, r1
     d02:	19 f1       	breq	.+70     	; 0xd4a <pow+0x80>
     d04:	e8 94       	clt
     d06:	08 94       	sec
     d08:	e7 95       	ror	r30
     d0a:	d9 01       	movw	r26, r18
     d0c:	aa 23       	and	r26, r26
     d0e:	29 f4       	brne	.+10     	; 0xd1a <pow+0x50>
     d10:	ab 2f       	mov	r26, r27
     d12:	be 2f       	mov	r27, r30
     d14:	f8 5f       	subi	r31, 0xF8	; 248
     d16:	d0 f3       	brcs	.-12     	; 0xd0c <pow+0x42>
     d18:	10 c0       	rjmp	.+32     	; 0xd3a <pow+0x70>
     d1a:	ff 5f       	subi	r31, 0xFF	; 255
     d1c:	70 f4       	brcc	.+28     	; 0xd3a <pow+0x70>
     d1e:	a6 95       	lsr	r26
     d20:	e0 f7       	brcc	.-8      	; 0xd1a <pow+0x50>
     d22:	f7 39       	cpi	r31, 0x97	; 151
     d24:	50 f0       	brcs	.+20     	; 0xd3a <pow+0x70>
     d26:	19 f0       	breq	.+6      	; 0xd2e <pow+0x64>
     d28:	ff 3a       	cpi	r31, 0xAF	; 175
     d2a:	38 f4       	brcc	.+14     	; 0xd3a <pow+0x70>
     d2c:	9f 77       	andi	r25, 0x7F	; 127
     d2e:	9f 93       	push	r25
     d30:	0d d0       	rcall	.+26     	; 0xd4c <pow+0x82>
     d32:	0f 90       	pop	r0
     d34:	07 fc       	sbrc	r0, 7
     d36:	90 58       	subi	r25, 0x80	; 128
     d38:	08 95       	ret
     d3a:	46 f0       	brts	.+16     	; 0xd4c <pow+0x82>
     d3c:	0c 94 ad 05 	jmp	0xb5a	; 0xb5a <__fp_nan>
     d40:	60 e0       	ldi	r22, 0x00	; 0
     d42:	70 e0       	ldi	r23, 0x00	; 0
     d44:	80 e8       	ldi	r24, 0x80	; 128
     d46:	9f e3       	ldi	r25, 0x3F	; 63
     d48:	08 95       	ret
     d4a:	4f e7       	ldi	r20, 0x7F	; 127
     d4c:	9f 77       	andi	r25, 0x7F	; 127
     d4e:	5f 93       	push	r21
     d50:	4f 93       	push	r20
     d52:	3f 93       	push	r19
     d54:	2f 93       	push	r18
     d56:	0e 94 60 07 	call	0xec0	; 0xec0 <log>
     d5a:	2f 91       	pop	r18
     d5c:	3f 91       	pop	r19
     d5e:	4f 91       	pop	r20
     d60:	5f 91       	pop	r21
     d62:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <__mulsf3>
     d66:	0c 94 bd 06 	jmp	0xd7a	; 0xd7a <exp>
     d6a:	29 f4       	brne	.+10     	; 0xd76 <pow+0xac>
     d6c:	16 f0       	brts	.+4      	; 0xd72 <pow+0xa8>
     d6e:	0c 94 a7 05 	jmp	0xb4e	; 0xb4e <__fp_inf>
     d72:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__fp_zero>
     d76:	0c 94 ad 05 	jmp	0xb5a	; 0xb5a <__fp_nan>

00000d7a <exp>:
     d7a:	0e 94 d7 05 	call	0xbae	; 0xbae <__fp_splitA>
     d7e:	a8 f3       	brcs	.-22     	; 0xd6a <pow+0xa0>
     d80:	96 38       	cpi	r25, 0x86	; 134
     d82:	a0 f7       	brcc	.-24     	; 0xd6c <pow+0xa2>
     d84:	07 f8       	bld	r0, 7
     d86:	0f 92       	push	r0
     d88:	e8 94       	clt
     d8a:	2b e3       	ldi	r18, 0x3B	; 59
     d8c:	3a ea       	ldi	r19, 0xAA	; 170
     d8e:	48 eb       	ldi	r20, 0xB8	; 184
     d90:	5f e7       	ldi	r21, 0x7F	; 127
     d92:	0e 94 0e 06 	call	0xc1c	; 0xc1c <__mulsf3_pse>
     d96:	0f 92       	push	r0
     d98:	0f 92       	push	r0
     d9a:	0f 92       	push	r0
     d9c:	4d b7       	in	r20, 0x3d	; 61
     d9e:	5e b7       	in	r21, 0x3e	; 62
     da0:	0f 92       	push	r0
     da2:	0e 94 a8 07 	call	0xf50	; 0xf50 <modf>
     da6:	e8 e6       	ldi	r30, 0x68	; 104
     da8:	f0 e0       	ldi	r31, 0x00	; 0
     daa:	0e 94 ef 06 	call	0xdde	; 0xdde <__fp_powser>
     dae:	4f 91       	pop	r20
     db0:	5f 91       	pop	r21
     db2:	ef 91       	pop	r30
     db4:	ff 91       	pop	r31
     db6:	e5 95       	asr	r30
     db8:	ee 1f       	adc	r30, r30
     dba:	ff 1f       	adc	r31, r31
     dbc:	49 f0       	breq	.+18     	; 0xdd0 <exp+0x56>
     dbe:	fe 57       	subi	r31, 0x7E	; 126
     dc0:	e0 68       	ori	r30, 0x80	; 128
     dc2:	44 27       	eor	r20, r20
     dc4:	ee 0f       	add	r30, r30
     dc6:	44 1f       	adc	r20, r20
     dc8:	fa 95       	dec	r31
     dca:	e1 f7       	brne	.-8      	; 0xdc4 <exp+0x4a>
     dcc:	41 95       	neg	r20
     dce:	55 0b       	sbc	r21, r21
     dd0:	0e 94 22 07 	call	0xe44	; 0xe44 <ldexp>
     dd4:	0f 90       	pop	r0
     dd6:	07 fe       	sbrs	r0, 7
     dd8:	0c 94 16 07 	jmp	0xe2c	; 0xe2c <inverse>
     ddc:	08 95       	ret

00000dde <__fp_powser>:
     dde:	df 93       	push	r29
     de0:	cf 93       	push	r28
     de2:	1f 93       	push	r17
     de4:	0f 93       	push	r16
     de6:	ff 92       	push	r15
     de8:	ef 92       	push	r14
     dea:	df 92       	push	r13
     dec:	7b 01       	movw	r14, r22
     dee:	8c 01       	movw	r16, r24
     df0:	68 94       	set
     df2:	06 c0       	rjmp	.+12     	; 0xe00 <__fp_powser+0x22>
     df4:	da 2e       	mov	r13, r26
     df6:	ef 01       	movw	r28, r30
     df8:	0e 94 0b 06 	call	0xc16	; 0xc16 <__mulsf3x>
     dfc:	fe 01       	movw	r30, r28
     dfe:	e8 94       	clt
     e00:	a5 91       	lpm	r26, Z+
     e02:	25 91       	lpm	r18, Z+
     e04:	35 91       	lpm	r19, Z+
     e06:	45 91       	lpm	r20, Z+
     e08:	55 91       	lpm	r21, Z+
     e0a:	a6 f3       	brts	.-24     	; 0xdf4 <__fp_powser+0x16>
     e0c:	ef 01       	movw	r28, r30
     e0e:	0e 94 6d 04 	call	0x8da	; 0x8da <__addsf3x>
     e12:	fe 01       	movw	r30, r28
     e14:	97 01       	movw	r18, r14
     e16:	a8 01       	movw	r20, r16
     e18:	da 94       	dec	r13
     e1a:	69 f7       	brne	.-38     	; 0xdf6 <__fp_powser+0x18>
     e1c:	df 90       	pop	r13
     e1e:	ef 90       	pop	r14
     e20:	ff 90       	pop	r15
     e22:	0f 91       	pop	r16
     e24:	1f 91       	pop	r17
     e26:	cf 91       	pop	r28
     e28:	df 91       	pop	r29
     e2a:	08 95       	ret

00000e2c <inverse>:
     e2c:	9b 01       	movw	r18, r22
     e2e:	ac 01       	movw	r20, r24
     e30:	60 e0       	ldi	r22, 0x00	; 0
     e32:	70 e0       	ldi	r23, 0x00	; 0
     e34:	80 e8       	ldi	r24, 0x80	; 128
     e36:	9f e3       	ldi	r25, 0x3F	; 63
     e38:	0c 94 c2 04 	jmp	0x984	; 0x984 <__divsf3>
     e3c:	0c 94 a7 05 	jmp	0xb4e	; 0xb4e <__fp_inf>
     e40:	0c 94 dc 07 	jmp	0xfb8	; 0xfb8 <__fp_mpack>

00000e44 <ldexp>:
     e44:	0e 94 d7 05 	call	0xbae	; 0xbae <__fp_splitA>
     e48:	d8 f3       	brcs	.-10     	; 0xe40 <inverse+0x14>
     e4a:	99 23       	and	r25, r25
     e4c:	c9 f3       	breq	.-14     	; 0xe40 <inverse+0x14>
     e4e:	94 0f       	add	r25, r20
     e50:	51 1d       	adc	r21, r1
     e52:	a3 f3       	brvs	.-24     	; 0xe3c <inverse+0x10>
     e54:	91 50       	subi	r25, 0x01	; 1
     e56:	50 40       	sbci	r21, 0x00	; 0
     e58:	94 f0       	brlt	.+36     	; 0xe7e <ldexp+0x3a>
     e5a:	59 f0       	breq	.+22     	; 0xe72 <ldexp+0x2e>
     e5c:	88 23       	and	r24, r24
     e5e:	32 f0       	brmi	.+12     	; 0xe6c <ldexp+0x28>
     e60:	66 0f       	add	r22, r22
     e62:	77 1f       	adc	r23, r23
     e64:	88 1f       	adc	r24, r24
     e66:	91 50       	subi	r25, 0x01	; 1
     e68:	50 40       	sbci	r21, 0x00	; 0
     e6a:	c1 f7       	brne	.-16     	; 0xe5c <ldexp+0x18>
     e6c:	9e 3f       	cpi	r25, 0xFE	; 254
     e6e:	51 05       	cpc	r21, r1
     e70:	2c f7       	brge	.-54     	; 0xe3c <inverse+0x10>
     e72:	88 0f       	add	r24, r24
     e74:	91 1d       	adc	r25, r1
     e76:	96 95       	lsr	r25
     e78:	87 95       	ror	r24
     e7a:	97 f9       	bld	r25, 7
     e7c:	08 95       	ret
     e7e:	5f 3f       	cpi	r21, 0xFF	; 255
     e80:	ac f0       	brlt	.+42     	; 0xeac <ldexp+0x68>
     e82:	98 3e       	cpi	r25, 0xE8	; 232
     e84:	9c f0       	brlt	.+38     	; 0xeac <ldexp+0x68>
     e86:	bb 27       	eor	r27, r27
     e88:	86 95       	lsr	r24
     e8a:	77 95       	ror	r23
     e8c:	67 95       	ror	r22
     e8e:	b7 95       	ror	r27
     e90:	08 f4       	brcc	.+2      	; 0xe94 <ldexp+0x50>
     e92:	b1 60       	ori	r27, 0x01	; 1
     e94:	93 95       	inc	r25
     e96:	c1 f7       	brne	.-16     	; 0xe88 <ldexp+0x44>
     e98:	bb 0f       	add	r27, r27
     e9a:	58 f7       	brcc	.-42     	; 0xe72 <ldexp+0x2e>
     e9c:	11 f4       	brne	.+4      	; 0xea2 <ldexp+0x5e>
     e9e:	60 ff       	sbrs	r22, 0
     ea0:	e8 cf       	rjmp	.-48     	; 0xe72 <ldexp+0x2e>
     ea2:	6f 5f       	subi	r22, 0xFF	; 255
     ea4:	7f 4f       	sbci	r23, 0xFF	; 255
     ea6:	8f 4f       	sbci	r24, 0xFF	; 255
     ea8:	9f 4f       	sbci	r25, 0xFF	; 255
     eaa:	e3 cf       	rjmp	.-58     	; 0xe72 <ldexp+0x2e>
     eac:	0c 94 f2 05 	jmp	0xbe4	; 0xbe4 <__fp_szero>
     eb0:	16 f0       	brts	.+4      	; 0xeb6 <ldexp+0x72>
     eb2:	0c 94 dc 07 	jmp	0xfb8	; 0xfb8 <__fp_mpack>
     eb6:	0c 94 ad 05 	jmp	0xb5a	; 0xb5a <__fp_nan>
     eba:	68 94       	set
     ebc:	0c 94 a7 05 	jmp	0xb4e	; 0xb4e <__fp_inf>

00000ec0 <log>:
     ec0:	0e 94 d7 05 	call	0xbae	; 0xbae <__fp_splitA>
     ec4:	a8 f3       	brcs	.-22     	; 0xeb0 <ldexp+0x6c>
     ec6:	99 23       	and	r25, r25
     ec8:	c1 f3       	breq	.-16     	; 0xeba <ldexp+0x76>
     eca:	ae f3       	brts	.-22     	; 0xeb6 <ldexp+0x72>
     ecc:	df 93       	push	r29
     ece:	cf 93       	push	r28
     ed0:	1f 93       	push	r17
     ed2:	0f 93       	push	r16
     ed4:	ff 92       	push	r15
     ed6:	c9 2f       	mov	r28, r25
     ed8:	dd 27       	eor	r29, r29
     eda:	88 23       	and	r24, r24
     edc:	2a f0       	brmi	.+10     	; 0xee8 <log+0x28>
     ede:	21 97       	sbiw	r28, 0x01	; 1
     ee0:	66 0f       	add	r22, r22
     ee2:	77 1f       	adc	r23, r23
     ee4:	88 1f       	adc	r24, r24
     ee6:	da f7       	brpl	.-10     	; 0xede <log+0x1e>
     ee8:	20 e0       	ldi	r18, 0x00	; 0
     eea:	30 e0       	ldi	r19, 0x00	; 0
     eec:	40 e8       	ldi	r20, 0x80	; 128
     eee:	5f eb       	ldi	r21, 0xBF	; 191
     ef0:	9f e3       	ldi	r25, 0x3F	; 63
     ef2:	88 39       	cpi	r24, 0x98	; 152
     ef4:	20 f0       	brcs	.+8      	; 0xefe <log+0x3e>
     ef6:	80 3e       	cpi	r24, 0xE0	; 224
     ef8:	38 f0       	brcs	.+14     	; 0xf08 <log+0x48>
     efa:	21 96       	adiw	r28, 0x01	; 1
     efc:	8f 77       	andi	r24, 0x7F	; 127
     efe:	0e 94 56 04 	call	0x8ac	; 0x8ac <__addsf3>
     f02:	e0 e9       	ldi	r30, 0x90	; 144
     f04:	f0 e0       	ldi	r31, 0x00	; 0
     f06:	04 c0       	rjmp	.+8      	; 0xf10 <log+0x50>
     f08:	0e 94 56 04 	call	0x8ac	; 0x8ac <__addsf3>
     f0c:	ed eb       	ldi	r30, 0xBD	; 189
     f0e:	f0 e0       	ldi	r31, 0x00	; 0
     f10:	0e 94 ef 06 	call	0xdde	; 0xdde <__fp_powser>
     f14:	8b 01       	movw	r16, r22
     f16:	be 01       	movw	r22, r28
     f18:	ec 01       	movw	r28, r24
     f1a:	fb 2e       	mov	r15, r27
     f1c:	6f 57       	subi	r22, 0x7F	; 127
     f1e:	71 09       	sbc	r23, r1
     f20:	75 95       	asr	r23
     f22:	77 1f       	adc	r23, r23
     f24:	88 0b       	sbc	r24, r24
     f26:	99 0b       	sbc	r25, r25
     f28:	0e 94 6c 05 	call	0xad8	; 0xad8 <__floatsisf>
     f2c:	28 e1       	ldi	r18, 0x18	; 24
     f2e:	32 e7       	ldi	r19, 0x72	; 114
     f30:	41 e3       	ldi	r20, 0x31	; 49
     f32:	5f e3       	ldi	r21, 0x3F	; 63
     f34:	0e 94 0b 06 	call	0xc16	; 0xc16 <__mulsf3x>
     f38:	af 2d       	mov	r26, r15
     f3a:	98 01       	movw	r18, r16
     f3c:	ae 01       	movw	r20, r28
     f3e:	ff 90       	pop	r15
     f40:	0f 91       	pop	r16
     f42:	1f 91       	pop	r17
     f44:	cf 91       	pop	r28
     f46:	df 91       	pop	r29
     f48:	0e 94 6d 04 	call	0x8da	; 0x8da <__addsf3x>
     f4c:	0c 94 be 05 	jmp	0xb7c	; 0xb7c <__fp_round>

00000f50 <modf>:
     f50:	fa 01       	movw	r30, r20
     f52:	dc 01       	movw	r26, r24
     f54:	aa 0f       	add	r26, r26
     f56:	bb 1f       	adc	r27, r27
     f58:	9b 01       	movw	r18, r22
     f5a:	ac 01       	movw	r20, r24
     f5c:	bf 57       	subi	r27, 0x7F	; 127
     f5e:	28 f4       	brcc	.+10     	; 0xf6a <modf+0x1a>
     f60:	22 27       	eor	r18, r18
     f62:	33 27       	eor	r19, r19
     f64:	44 27       	eor	r20, r20
     f66:	50 78       	andi	r21, 0x80	; 128
     f68:	20 c0       	rjmp	.+64     	; 0xfaa <modf+0x5a>
     f6a:	b7 51       	subi	r27, 0x17	; 23
     f6c:	90 f4       	brcc	.+36     	; 0xf92 <modf+0x42>
     f6e:	ab 2f       	mov	r26, r27
     f70:	00 24       	eor	r0, r0
     f72:	46 95       	lsr	r20
     f74:	37 95       	ror	r19
     f76:	27 95       	ror	r18
     f78:	01 1c       	adc	r0, r1
     f7a:	a3 95       	inc	r26
     f7c:	d2 f3       	brmi	.-12     	; 0xf72 <modf+0x22>
     f7e:	00 20       	and	r0, r0
     f80:	71 f0       	breq	.+28     	; 0xf9e <modf+0x4e>
     f82:	22 0f       	add	r18, r18
     f84:	33 1f       	adc	r19, r19
     f86:	44 1f       	adc	r20, r20
     f88:	b3 95       	inc	r27
     f8a:	da f3       	brmi	.-10     	; 0xf82 <modf+0x32>
     f8c:	0e d0       	rcall	.+28     	; 0xfaa <modf+0x5a>
     f8e:	0c 94 55 04 	jmp	0x8aa	; 0x8aa <__subsf3>
     f92:	61 30       	cpi	r22, 0x01	; 1
     f94:	71 05       	cpc	r23, r1
     f96:	a0 e8       	ldi	r26, 0x80	; 128
     f98:	8a 07       	cpc	r24, r26
     f9a:	b9 46       	sbci	r27, 0x69	; 105
     f9c:	30 f4       	brcc	.+12     	; 0xfaa <modf+0x5a>
     f9e:	9b 01       	movw	r18, r22
     fa0:	ac 01       	movw	r20, r24
     fa2:	66 27       	eor	r22, r22
     fa4:	77 27       	eor	r23, r23
     fa6:	88 27       	eor	r24, r24
     fa8:	90 78       	andi	r25, 0x80	; 128
     faa:	30 96       	adiw	r30, 0x00	; 0
     fac:	21 f0       	breq	.+8      	; 0xfb6 <modf+0x66>
     fae:	20 83       	st	Z, r18
     fb0:	31 83       	std	Z+1, r19	; 0x01
     fb2:	42 83       	std	Z+2, r20	; 0x02
     fb4:	53 83       	std	Z+3, r21	; 0x03
     fb6:	08 95       	ret

00000fb8 <__fp_mpack>:
     fb8:	9f 3f       	cpi	r25, 0xFF	; 255
     fba:	31 f0       	breq	.+12     	; 0xfc8 <__fp_mpack_finite+0xc>

00000fbc <__fp_mpack_finite>:
     fbc:	91 50       	subi	r25, 0x01	; 1
     fbe:	20 f4       	brcc	.+8      	; 0xfc8 <__fp_mpack_finite+0xc>
     fc0:	87 95       	ror	r24
     fc2:	77 95       	ror	r23
     fc4:	67 95       	ror	r22
     fc6:	b7 95       	ror	r27
     fc8:	88 0f       	add	r24, r24
     fca:	91 1d       	adc	r25, r1
     fcc:	96 95       	lsr	r25
     fce:	87 95       	ror	r24
     fd0:	97 f9       	bld	r25, 7
     fd2:	08 95       	ret

00000fd4 <__itoa_ncheck>:
     fd4:	bb 27       	eor	r27, r27
     fd6:	4a 30       	cpi	r20, 0x0A	; 10
     fd8:	31 f4       	brne	.+12     	; 0xfe6 <__itoa_ncheck+0x12>
     fda:	99 23       	and	r25, r25
     fdc:	22 f4       	brpl	.+8      	; 0xfe6 <__itoa_ncheck+0x12>
     fde:	bd e2       	ldi	r27, 0x2D	; 45
     fe0:	90 95       	com	r25
     fe2:	81 95       	neg	r24
     fe4:	9f 4f       	sbci	r25, 0xFF	; 255
     fe6:	0c 94 f6 07 	jmp	0xfec	; 0xfec <__utoa_common>

00000fea <__utoa_ncheck>:
     fea:	bb 27       	eor	r27, r27

00000fec <__utoa_common>:
     fec:	fb 01       	movw	r30, r22
     fee:	55 27       	eor	r21, r21
     ff0:	aa 27       	eor	r26, r26
     ff2:	88 0f       	add	r24, r24
     ff4:	99 1f       	adc	r25, r25
     ff6:	aa 1f       	adc	r26, r26
     ff8:	a4 17       	cp	r26, r20
     ffa:	10 f0       	brcs	.+4      	; 0x1000 <__utoa_common+0x14>
     ffc:	a4 1b       	sub	r26, r20
     ffe:	83 95       	inc	r24
    1000:	50 51       	subi	r21, 0x10	; 16
    1002:	b9 f7       	brne	.-18     	; 0xff2 <__utoa_common+0x6>
    1004:	a0 5d       	subi	r26, 0xD0	; 208
    1006:	aa 33       	cpi	r26, 0x3A	; 58
    1008:	08 f0       	brcs	.+2      	; 0x100c <__utoa_common+0x20>
    100a:	a9 5d       	subi	r26, 0xD9	; 217
    100c:	a1 93       	st	Z+, r26
    100e:	00 97       	sbiw	r24, 0x00	; 0
    1010:	79 f7       	brne	.-34     	; 0xff0 <__utoa_common+0x4>
    1012:	b1 11       	cpse	r27, r1
    1014:	b1 93       	st	Z+, r27
    1016:	11 92       	st	Z+, r1
    1018:	cb 01       	movw	r24, r22
    101a:	0c 94 28 0a 	jmp	0x1450	; 0x1450 <strrev>

0000101e <sprintf>:
    101e:	ae e0       	ldi	r26, 0x0E	; 14
    1020:	b0 e0       	ldi	r27, 0x00	; 0
    1022:	e5 e1       	ldi	r30, 0x15	; 21
    1024:	f8 e0       	ldi	r31, 0x08	; 8
    1026:	0c 94 e0 0a 	jmp	0x15c0	; 0x15c0 <__prologue_saves__+0x1c>
    102a:	0d 89       	ldd	r16, Y+21	; 0x15
    102c:	1e 89       	ldd	r17, Y+22	; 0x16
    102e:	86 e0       	ldi	r24, 0x06	; 6
    1030:	8c 83       	std	Y+4, r24	; 0x04
    1032:	1a 83       	std	Y+2, r17	; 0x02
    1034:	09 83       	std	Y+1, r16	; 0x01
    1036:	8f ef       	ldi	r24, 0xFF	; 255
    1038:	9f e7       	ldi	r25, 0x7F	; 127
    103a:	9e 83       	std	Y+6, r25	; 0x06
    103c:	8d 83       	std	Y+5, r24	; 0x05
    103e:	ae 01       	movw	r20, r28
    1040:	47 5e       	subi	r20, 0xE7	; 231
    1042:	5f 4f       	sbci	r21, 0xFF	; 255
    1044:	6f 89       	ldd	r22, Y+23	; 0x17
    1046:	78 8d       	ldd	r23, Y+24	; 0x18
    1048:	ce 01       	movw	r24, r28
    104a:	01 96       	adiw	r24, 0x01	; 1
    104c:	0e 94 31 08 	call	0x1062	; 0x1062 <vfprintf>
    1050:	ef 81       	ldd	r30, Y+7	; 0x07
    1052:	f8 85       	ldd	r31, Y+8	; 0x08
    1054:	e0 0f       	add	r30, r16
    1056:	f1 1f       	adc	r31, r17
    1058:	10 82       	st	Z, r1
    105a:	2e 96       	adiw	r28, 0x0e	; 14
    105c:	e4 e0       	ldi	r30, 0x04	; 4
    105e:	0c 94 fc 0a 	jmp	0x15f8	; 0x15f8 <__epilogue_restores__+0x1c>

00001062 <vfprintf>:
    1062:	ab e0       	ldi	r26, 0x0B	; 11
    1064:	b0 e0       	ldi	r27, 0x00	; 0
    1066:	e7 e3       	ldi	r30, 0x37	; 55
    1068:	f8 e0       	ldi	r31, 0x08	; 8
    106a:	0c 94 d2 0a 	jmp	0x15a4	; 0x15a4 <__prologue_saves__>
    106e:	6c 01       	movw	r12, r24
    1070:	7b 01       	movw	r14, r22
    1072:	8a 01       	movw	r16, r20
    1074:	fc 01       	movw	r30, r24
    1076:	17 82       	std	Z+7, r1	; 0x07
    1078:	16 82       	std	Z+6, r1	; 0x06
    107a:	83 81       	ldd	r24, Z+3	; 0x03
    107c:	81 ff       	sbrs	r24, 1
    107e:	cc c1       	rjmp	.+920    	; 0x1418 <vfprintf+0x3b6>
    1080:	ce 01       	movw	r24, r28
    1082:	01 96       	adiw	r24, 0x01	; 1
    1084:	3c 01       	movw	r6, r24
    1086:	f6 01       	movw	r30, r12
    1088:	93 81       	ldd	r25, Z+3	; 0x03
    108a:	f7 01       	movw	r30, r14
    108c:	93 fd       	sbrc	r25, 3
    108e:	85 91       	lpm	r24, Z+
    1090:	93 ff       	sbrs	r25, 3
    1092:	81 91       	ld	r24, Z+
    1094:	7f 01       	movw	r14, r30
    1096:	88 23       	and	r24, r24
    1098:	09 f4       	brne	.+2      	; 0x109c <vfprintf+0x3a>
    109a:	ba c1       	rjmp	.+884    	; 0x1410 <vfprintf+0x3ae>
    109c:	85 32       	cpi	r24, 0x25	; 37
    109e:	39 f4       	brne	.+14     	; 0x10ae <vfprintf+0x4c>
    10a0:	93 fd       	sbrc	r25, 3
    10a2:	85 91       	lpm	r24, Z+
    10a4:	93 ff       	sbrs	r25, 3
    10a6:	81 91       	ld	r24, Z+
    10a8:	7f 01       	movw	r14, r30
    10aa:	85 32       	cpi	r24, 0x25	; 37
    10ac:	29 f4       	brne	.+10     	; 0x10b8 <vfprintf+0x56>
    10ae:	b6 01       	movw	r22, r12
    10b0:	90 e0       	ldi	r25, 0x00	; 0
    10b2:	0e 94 38 0a 	call	0x1470	; 0x1470 <fputc>
    10b6:	e7 cf       	rjmp	.-50     	; 0x1086 <vfprintf+0x24>
    10b8:	91 2c       	mov	r9, r1
    10ba:	21 2c       	mov	r2, r1
    10bc:	31 2c       	mov	r3, r1
    10be:	ff e1       	ldi	r31, 0x1F	; 31
    10c0:	f3 15       	cp	r31, r3
    10c2:	d8 f0       	brcs	.+54     	; 0x10fa <vfprintf+0x98>
    10c4:	8b 32       	cpi	r24, 0x2B	; 43
    10c6:	79 f0       	breq	.+30     	; 0x10e6 <vfprintf+0x84>
    10c8:	38 f4       	brcc	.+14     	; 0x10d8 <vfprintf+0x76>
    10ca:	80 32       	cpi	r24, 0x20	; 32
    10cc:	79 f0       	breq	.+30     	; 0x10ec <vfprintf+0x8a>
    10ce:	83 32       	cpi	r24, 0x23	; 35
    10d0:	a1 f4       	brne	.+40     	; 0x10fa <vfprintf+0x98>
    10d2:	23 2d       	mov	r18, r3
    10d4:	20 61       	ori	r18, 0x10	; 16
    10d6:	1d c0       	rjmp	.+58     	; 0x1112 <vfprintf+0xb0>
    10d8:	8d 32       	cpi	r24, 0x2D	; 45
    10da:	61 f0       	breq	.+24     	; 0x10f4 <vfprintf+0x92>
    10dc:	80 33       	cpi	r24, 0x30	; 48
    10de:	69 f4       	brne	.+26     	; 0x10fa <vfprintf+0x98>
    10e0:	23 2d       	mov	r18, r3
    10e2:	21 60       	ori	r18, 0x01	; 1
    10e4:	16 c0       	rjmp	.+44     	; 0x1112 <vfprintf+0xb0>
    10e6:	83 2d       	mov	r24, r3
    10e8:	82 60       	ori	r24, 0x02	; 2
    10ea:	38 2e       	mov	r3, r24
    10ec:	e3 2d       	mov	r30, r3
    10ee:	e4 60       	ori	r30, 0x04	; 4
    10f0:	3e 2e       	mov	r3, r30
    10f2:	2a c0       	rjmp	.+84     	; 0x1148 <vfprintf+0xe6>
    10f4:	f3 2d       	mov	r31, r3
    10f6:	f8 60       	ori	r31, 0x08	; 8
    10f8:	1d c0       	rjmp	.+58     	; 0x1134 <vfprintf+0xd2>
    10fa:	37 fc       	sbrc	r3, 7
    10fc:	2d c0       	rjmp	.+90     	; 0x1158 <vfprintf+0xf6>
    10fe:	20 ed       	ldi	r18, 0xD0	; 208
    1100:	28 0f       	add	r18, r24
    1102:	2a 30       	cpi	r18, 0x0A	; 10
    1104:	40 f0       	brcs	.+16     	; 0x1116 <vfprintf+0xb4>
    1106:	8e 32       	cpi	r24, 0x2E	; 46
    1108:	b9 f4       	brne	.+46     	; 0x1138 <vfprintf+0xd6>
    110a:	36 fc       	sbrc	r3, 6
    110c:	81 c1       	rjmp	.+770    	; 0x1410 <vfprintf+0x3ae>
    110e:	23 2d       	mov	r18, r3
    1110:	20 64       	ori	r18, 0x40	; 64
    1112:	32 2e       	mov	r3, r18
    1114:	19 c0       	rjmp	.+50     	; 0x1148 <vfprintf+0xe6>
    1116:	36 fe       	sbrs	r3, 6
    1118:	06 c0       	rjmp	.+12     	; 0x1126 <vfprintf+0xc4>
    111a:	8a e0       	ldi	r24, 0x0A	; 10
    111c:	98 9e       	mul	r9, r24
    111e:	20 0d       	add	r18, r0
    1120:	11 24       	eor	r1, r1
    1122:	92 2e       	mov	r9, r18
    1124:	11 c0       	rjmp	.+34     	; 0x1148 <vfprintf+0xe6>
    1126:	ea e0       	ldi	r30, 0x0A	; 10
    1128:	2e 9e       	mul	r2, r30
    112a:	20 0d       	add	r18, r0
    112c:	11 24       	eor	r1, r1
    112e:	22 2e       	mov	r2, r18
    1130:	f3 2d       	mov	r31, r3
    1132:	f0 62       	ori	r31, 0x20	; 32
    1134:	3f 2e       	mov	r3, r31
    1136:	08 c0       	rjmp	.+16     	; 0x1148 <vfprintf+0xe6>
    1138:	8c 36       	cpi	r24, 0x6C	; 108
    113a:	21 f4       	brne	.+8      	; 0x1144 <vfprintf+0xe2>
    113c:	83 2d       	mov	r24, r3
    113e:	80 68       	ori	r24, 0x80	; 128
    1140:	38 2e       	mov	r3, r24
    1142:	02 c0       	rjmp	.+4      	; 0x1148 <vfprintf+0xe6>
    1144:	88 36       	cpi	r24, 0x68	; 104
    1146:	41 f4       	brne	.+16     	; 0x1158 <vfprintf+0xf6>
    1148:	f7 01       	movw	r30, r14
    114a:	93 fd       	sbrc	r25, 3
    114c:	85 91       	lpm	r24, Z+
    114e:	93 ff       	sbrs	r25, 3
    1150:	81 91       	ld	r24, Z+
    1152:	7f 01       	movw	r14, r30
    1154:	81 11       	cpse	r24, r1
    1156:	b3 cf       	rjmp	.-154    	; 0x10be <vfprintf+0x5c>
    1158:	98 2f       	mov	r25, r24
    115a:	9f 7d       	andi	r25, 0xDF	; 223
    115c:	95 54       	subi	r25, 0x45	; 69
    115e:	93 30       	cpi	r25, 0x03	; 3
    1160:	28 f4       	brcc	.+10     	; 0x116c <vfprintf+0x10a>
    1162:	0c 5f       	subi	r16, 0xFC	; 252
    1164:	1f 4f       	sbci	r17, 0xFF	; 255
    1166:	9f e3       	ldi	r25, 0x3F	; 63
    1168:	99 83       	std	Y+1, r25	; 0x01
    116a:	0d c0       	rjmp	.+26     	; 0x1186 <vfprintf+0x124>
    116c:	83 36       	cpi	r24, 0x63	; 99
    116e:	31 f0       	breq	.+12     	; 0x117c <vfprintf+0x11a>
    1170:	83 37       	cpi	r24, 0x73	; 115
    1172:	71 f0       	breq	.+28     	; 0x1190 <vfprintf+0x12e>
    1174:	83 35       	cpi	r24, 0x53	; 83
    1176:	09 f0       	breq	.+2      	; 0x117a <vfprintf+0x118>
    1178:	59 c0       	rjmp	.+178    	; 0x122c <vfprintf+0x1ca>
    117a:	21 c0       	rjmp	.+66     	; 0x11be <vfprintf+0x15c>
    117c:	f8 01       	movw	r30, r16
    117e:	80 81       	ld	r24, Z
    1180:	89 83       	std	Y+1, r24	; 0x01
    1182:	0e 5f       	subi	r16, 0xFE	; 254
    1184:	1f 4f       	sbci	r17, 0xFF	; 255
    1186:	88 24       	eor	r8, r8
    1188:	83 94       	inc	r8
    118a:	91 2c       	mov	r9, r1
    118c:	53 01       	movw	r10, r6
    118e:	13 c0       	rjmp	.+38     	; 0x11b6 <vfprintf+0x154>
    1190:	28 01       	movw	r4, r16
    1192:	f2 e0       	ldi	r31, 0x02	; 2
    1194:	4f 0e       	add	r4, r31
    1196:	51 1c       	adc	r5, r1
    1198:	f8 01       	movw	r30, r16
    119a:	a0 80       	ld	r10, Z
    119c:	b1 80       	ldd	r11, Z+1	; 0x01
    119e:	36 fe       	sbrs	r3, 6
    11a0:	03 c0       	rjmp	.+6      	; 0x11a8 <vfprintf+0x146>
    11a2:	69 2d       	mov	r22, r9
    11a4:	70 e0       	ldi	r23, 0x00	; 0
    11a6:	02 c0       	rjmp	.+4      	; 0x11ac <vfprintf+0x14a>
    11a8:	6f ef       	ldi	r22, 0xFF	; 255
    11aa:	7f ef       	ldi	r23, 0xFF	; 255
    11ac:	c5 01       	movw	r24, r10
    11ae:	0e 94 1d 0a 	call	0x143a	; 0x143a <strnlen>
    11b2:	4c 01       	movw	r8, r24
    11b4:	82 01       	movw	r16, r4
    11b6:	f3 2d       	mov	r31, r3
    11b8:	ff 77       	andi	r31, 0x7F	; 127
    11ba:	3f 2e       	mov	r3, r31
    11bc:	16 c0       	rjmp	.+44     	; 0x11ea <vfprintf+0x188>
    11be:	28 01       	movw	r4, r16
    11c0:	22 e0       	ldi	r18, 0x02	; 2
    11c2:	42 0e       	add	r4, r18
    11c4:	51 1c       	adc	r5, r1
    11c6:	f8 01       	movw	r30, r16
    11c8:	a0 80       	ld	r10, Z
    11ca:	b1 80       	ldd	r11, Z+1	; 0x01
    11cc:	36 fe       	sbrs	r3, 6
    11ce:	03 c0       	rjmp	.+6      	; 0x11d6 <vfprintf+0x174>
    11d0:	69 2d       	mov	r22, r9
    11d2:	70 e0       	ldi	r23, 0x00	; 0
    11d4:	02 c0       	rjmp	.+4      	; 0x11da <vfprintf+0x178>
    11d6:	6f ef       	ldi	r22, 0xFF	; 255
    11d8:	7f ef       	ldi	r23, 0xFF	; 255
    11da:	c5 01       	movw	r24, r10
    11dc:	0e 94 12 0a 	call	0x1424	; 0x1424 <strnlen_P>
    11e0:	4c 01       	movw	r8, r24
    11e2:	f3 2d       	mov	r31, r3
    11e4:	f0 68       	ori	r31, 0x80	; 128
    11e6:	3f 2e       	mov	r3, r31
    11e8:	82 01       	movw	r16, r4
    11ea:	33 fc       	sbrc	r3, 3
    11ec:	1b c0       	rjmp	.+54     	; 0x1224 <vfprintf+0x1c2>
    11ee:	82 2d       	mov	r24, r2
    11f0:	90 e0       	ldi	r25, 0x00	; 0
    11f2:	88 16       	cp	r8, r24
    11f4:	99 06       	cpc	r9, r25
    11f6:	b0 f4       	brcc	.+44     	; 0x1224 <vfprintf+0x1c2>
    11f8:	b6 01       	movw	r22, r12
    11fa:	80 e2       	ldi	r24, 0x20	; 32
    11fc:	90 e0       	ldi	r25, 0x00	; 0
    11fe:	0e 94 38 0a 	call	0x1470	; 0x1470 <fputc>
    1202:	2a 94       	dec	r2
    1204:	f4 cf       	rjmp	.-24     	; 0x11ee <vfprintf+0x18c>
    1206:	f5 01       	movw	r30, r10
    1208:	37 fc       	sbrc	r3, 7
    120a:	85 91       	lpm	r24, Z+
    120c:	37 fe       	sbrs	r3, 7
    120e:	81 91       	ld	r24, Z+
    1210:	5f 01       	movw	r10, r30
    1212:	b6 01       	movw	r22, r12
    1214:	90 e0       	ldi	r25, 0x00	; 0
    1216:	0e 94 38 0a 	call	0x1470	; 0x1470 <fputc>
    121a:	21 10       	cpse	r2, r1
    121c:	2a 94       	dec	r2
    121e:	21 e0       	ldi	r18, 0x01	; 1
    1220:	82 1a       	sub	r8, r18
    1222:	91 08       	sbc	r9, r1
    1224:	81 14       	cp	r8, r1
    1226:	91 04       	cpc	r9, r1
    1228:	71 f7       	brne	.-36     	; 0x1206 <vfprintf+0x1a4>
    122a:	e8 c0       	rjmp	.+464    	; 0x13fc <vfprintf+0x39a>
    122c:	84 36       	cpi	r24, 0x64	; 100
    122e:	11 f0       	breq	.+4      	; 0x1234 <vfprintf+0x1d2>
    1230:	89 36       	cpi	r24, 0x69	; 105
    1232:	41 f5       	brne	.+80     	; 0x1284 <vfprintf+0x222>
    1234:	f8 01       	movw	r30, r16
    1236:	37 fe       	sbrs	r3, 7
    1238:	07 c0       	rjmp	.+14     	; 0x1248 <vfprintf+0x1e6>
    123a:	60 81       	ld	r22, Z
    123c:	71 81       	ldd	r23, Z+1	; 0x01
    123e:	82 81       	ldd	r24, Z+2	; 0x02
    1240:	93 81       	ldd	r25, Z+3	; 0x03
    1242:	0c 5f       	subi	r16, 0xFC	; 252
    1244:	1f 4f       	sbci	r17, 0xFF	; 255
    1246:	08 c0       	rjmp	.+16     	; 0x1258 <vfprintf+0x1f6>
    1248:	60 81       	ld	r22, Z
    124a:	71 81       	ldd	r23, Z+1	; 0x01
    124c:	07 2e       	mov	r0, r23
    124e:	00 0c       	add	r0, r0
    1250:	88 0b       	sbc	r24, r24
    1252:	99 0b       	sbc	r25, r25
    1254:	0e 5f       	subi	r16, 0xFE	; 254
    1256:	1f 4f       	sbci	r17, 0xFF	; 255
    1258:	f3 2d       	mov	r31, r3
    125a:	ff 76       	andi	r31, 0x6F	; 111
    125c:	3f 2e       	mov	r3, r31
    125e:	97 ff       	sbrs	r25, 7
    1260:	09 c0       	rjmp	.+18     	; 0x1274 <vfprintf+0x212>
    1262:	90 95       	com	r25
    1264:	80 95       	com	r24
    1266:	70 95       	com	r23
    1268:	61 95       	neg	r22
    126a:	7f 4f       	sbci	r23, 0xFF	; 255
    126c:	8f 4f       	sbci	r24, 0xFF	; 255
    126e:	9f 4f       	sbci	r25, 0xFF	; 255
    1270:	f0 68       	ori	r31, 0x80	; 128
    1272:	3f 2e       	mov	r3, r31
    1274:	2a e0       	ldi	r18, 0x0A	; 10
    1276:	30 e0       	ldi	r19, 0x00	; 0
    1278:	a3 01       	movw	r20, r6
    127a:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <__ultoa_invert>
    127e:	88 2e       	mov	r8, r24
    1280:	86 18       	sub	r8, r6
    1282:	45 c0       	rjmp	.+138    	; 0x130e <vfprintf+0x2ac>
    1284:	85 37       	cpi	r24, 0x75	; 117
    1286:	31 f4       	brne	.+12     	; 0x1294 <vfprintf+0x232>
    1288:	23 2d       	mov	r18, r3
    128a:	2f 7e       	andi	r18, 0xEF	; 239
    128c:	b2 2e       	mov	r11, r18
    128e:	2a e0       	ldi	r18, 0x0A	; 10
    1290:	30 e0       	ldi	r19, 0x00	; 0
    1292:	25 c0       	rjmp	.+74     	; 0x12de <vfprintf+0x27c>
    1294:	93 2d       	mov	r25, r3
    1296:	99 7f       	andi	r25, 0xF9	; 249
    1298:	b9 2e       	mov	r11, r25
    129a:	8f 36       	cpi	r24, 0x6F	; 111
    129c:	c1 f0       	breq	.+48     	; 0x12ce <vfprintf+0x26c>
    129e:	18 f4       	brcc	.+6      	; 0x12a6 <vfprintf+0x244>
    12a0:	88 35       	cpi	r24, 0x58	; 88
    12a2:	79 f0       	breq	.+30     	; 0x12c2 <vfprintf+0x260>
    12a4:	b5 c0       	rjmp	.+362    	; 0x1410 <vfprintf+0x3ae>
    12a6:	80 37       	cpi	r24, 0x70	; 112
    12a8:	19 f0       	breq	.+6      	; 0x12b0 <vfprintf+0x24e>
    12aa:	88 37       	cpi	r24, 0x78	; 120
    12ac:	21 f0       	breq	.+8      	; 0x12b6 <vfprintf+0x254>
    12ae:	b0 c0       	rjmp	.+352    	; 0x1410 <vfprintf+0x3ae>
    12b0:	e9 2f       	mov	r30, r25
    12b2:	e0 61       	ori	r30, 0x10	; 16
    12b4:	be 2e       	mov	r11, r30
    12b6:	b4 fe       	sbrs	r11, 4
    12b8:	0d c0       	rjmp	.+26     	; 0x12d4 <vfprintf+0x272>
    12ba:	fb 2d       	mov	r31, r11
    12bc:	f4 60       	ori	r31, 0x04	; 4
    12be:	bf 2e       	mov	r11, r31
    12c0:	09 c0       	rjmp	.+18     	; 0x12d4 <vfprintf+0x272>
    12c2:	34 fe       	sbrs	r3, 4
    12c4:	0a c0       	rjmp	.+20     	; 0x12da <vfprintf+0x278>
    12c6:	29 2f       	mov	r18, r25
    12c8:	26 60       	ori	r18, 0x06	; 6
    12ca:	b2 2e       	mov	r11, r18
    12cc:	06 c0       	rjmp	.+12     	; 0x12da <vfprintf+0x278>
    12ce:	28 e0       	ldi	r18, 0x08	; 8
    12d0:	30 e0       	ldi	r19, 0x00	; 0
    12d2:	05 c0       	rjmp	.+10     	; 0x12de <vfprintf+0x27c>
    12d4:	20 e1       	ldi	r18, 0x10	; 16
    12d6:	30 e0       	ldi	r19, 0x00	; 0
    12d8:	02 c0       	rjmp	.+4      	; 0x12de <vfprintf+0x27c>
    12da:	20 e1       	ldi	r18, 0x10	; 16
    12dc:	32 e0       	ldi	r19, 0x02	; 2
    12de:	f8 01       	movw	r30, r16
    12e0:	b7 fe       	sbrs	r11, 7
    12e2:	07 c0       	rjmp	.+14     	; 0x12f2 <vfprintf+0x290>
    12e4:	60 81       	ld	r22, Z
    12e6:	71 81       	ldd	r23, Z+1	; 0x01
    12e8:	82 81       	ldd	r24, Z+2	; 0x02
    12ea:	93 81       	ldd	r25, Z+3	; 0x03
    12ec:	0c 5f       	subi	r16, 0xFC	; 252
    12ee:	1f 4f       	sbci	r17, 0xFF	; 255
    12f0:	06 c0       	rjmp	.+12     	; 0x12fe <vfprintf+0x29c>
    12f2:	60 81       	ld	r22, Z
    12f4:	71 81       	ldd	r23, Z+1	; 0x01
    12f6:	80 e0       	ldi	r24, 0x00	; 0
    12f8:	90 e0       	ldi	r25, 0x00	; 0
    12fa:	0e 5f       	subi	r16, 0xFE	; 254
    12fc:	1f 4f       	sbci	r17, 0xFF	; 255
    12fe:	a3 01       	movw	r20, r6
    1300:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <__ultoa_invert>
    1304:	88 2e       	mov	r8, r24
    1306:	86 18       	sub	r8, r6
    1308:	fb 2d       	mov	r31, r11
    130a:	ff 77       	andi	r31, 0x7F	; 127
    130c:	3f 2e       	mov	r3, r31
    130e:	36 fe       	sbrs	r3, 6
    1310:	0d c0       	rjmp	.+26     	; 0x132c <vfprintf+0x2ca>
    1312:	23 2d       	mov	r18, r3
    1314:	2e 7f       	andi	r18, 0xFE	; 254
    1316:	a2 2e       	mov	r10, r18
    1318:	89 14       	cp	r8, r9
    131a:	58 f4       	brcc	.+22     	; 0x1332 <vfprintf+0x2d0>
    131c:	34 fe       	sbrs	r3, 4
    131e:	0b c0       	rjmp	.+22     	; 0x1336 <vfprintf+0x2d4>
    1320:	32 fc       	sbrc	r3, 2
    1322:	09 c0       	rjmp	.+18     	; 0x1336 <vfprintf+0x2d4>
    1324:	83 2d       	mov	r24, r3
    1326:	8e 7e       	andi	r24, 0xEE	; 238
    1328:	a8 2e       	mov	r10, r24
    132a:	05 c0       	rjmp	.+10     	; 0x1336 <vfprintf+0x2d4>
    132c:	b8 2c       	mov	r11, r8
    132e:	a3 2c       	mov	r10, r3
    1330:	03 c0       	rjmp	.+6      	; 0x1338 <vfprintf+0x2d6>
    1332:	b8 2c       	mov	r11, r8
    1334:	01 c0       	rjmp	.+2      	; 0x1338 <vfprintf+0x2d6>
    1336:	b9 2c       	mov	r11, r9
    1338:	a4 fe       	sbrs	r10, 4
    133a:	0f c0       	rjmp	.+30     	; 0x135a <vfprintf+0x2f8>
    133c:	fe 01       	movw	r30, r28
    133e:	e8 0d       	add	r30, r8
    1340:	f1 1d       	adc	r31, r1
    1342:	80 81       	ld	r24, Z
    1344:	80 33       	cpi	r24, 0x30	; 48
    1346:	21 f4       	brne	.+8      	; 0x1350 <vfprintf+0x2ee>
    1348:	9a 2d       	mov	r25, r10
    134a:	99 7e       	andi	r25, 0xE9	; 233
    134c:	a9 2e       	mov	r10, r25
    134e:	09 c0       	rjmp	.+18     	; 0x1362 <vfprintf+0x300>
    1350:	a2 fe       	sbrs	r10, 2
    1352:	06 c0       	rjmp	.+12     	; 0x1360 <vfprintf+0x2fe>
    1354:	b3 94       	inc	r11
    1356:	b3 94       	inc	r11
    1358:	04 c0       	rjmp	.+8      	; 0x1362 <vfprintf+0x300>
    135a:	8a 2d       	mov	r24, r10
    135c:	86 78       	andi	r24, 0x86	; 134
    135e:	09 f0       	breq	.+2      	; 0x1362 <vfprintf+0x300>
    1360:	b3 94       	inc	r11
    1362:	a3 fc       	sbrc	r10, 3
    1364:	11 c0       	rjmp	.+34     	; 0x1388 <vfprintf+0x326>
    1366:	a0 fe       	sbrs	r10, 0
    1368:	06 c0       	rjmp	.+12     	; 0x1376 <vfprintf+0x314>
    136a:	b2 14       	cp	r11, r2
    136c:	88 f4       	brcc	.+34     	; 0x1390 <vfprintf+0x32e>
    136e:	28 0c       	add	r2, r8
    1370:	92 2c       	mov	r9, r2
    1372:	9b 18       	sub	r9, r11
    1374:	0e c0       	rjmp	.+28     	; 0x1392 <vfprintf+0x330>
    1376:	b2 14       	cp	r11, r2
    1378:	60 f4       	brcc	.+24     	; 0x1392 <vfprintf+0x330>
    137a:	b6 01       	movw	r22, r12
    137c:	80 e2       	ldi	r24, 0x20	; 32
    137e:	90 e0       	ldi	r25, 0x00	; 0
    1380:	0e 94 38 0a 	call	0x1470	; 0x1470 <fputc>
    1384:	b3 94       	inc	r11
    1386:	f7 cf       	rjmp	.-18     	; 0x1376 <vfprintf+0x314>
    1388:	b2 14       	cp	r11, r2
    138a:	18 f4       	brcc	.+6      	; 0x1392 <vfprintf+0x330>
    138c:	2b 18       	sub	r2, r11
    138e:	02 c0       	rjmp	.+4      	; 0x1394 <vfprintf+0x332>
    1390:	98 2c       	mov	r9, r8
    1392:	21 2c       	mov	r2, r1
    1394:	a4 fe       	sbrs	r10, 4
    1396:	10 c0       	rjmp	.+32     	; 0x13b8 <vfprintf+0x356>
    1398:	b6 01       	movw	r22, r12
    139a:	80 e3       	ldi	r24, 0x30	; 48
    139c:	90 e0       	ldi	r25, 0x00	; 0
    139e:	0e 94 38 0a 	call	0x1470	; 0x1470 <fputc>
    13a2:	a2 fe       	sbrs	r10, 2
    13a4:	17 c0       	rjmp	.+46     	; 0x13d4 <vfprintf+0x372>
    13a6:	a1 fc       	sbrc	r10, 1
    13a8:	03 c0       	rjmp	.+6      	; 0x13b0 <vfprintf+0x34e>
    13aa:	88 e7       	ldi	r24, 0x78	; 120
    13ac:	90 e0       	ldi	r25, 0x00	; 0
    13ae:	02 c0       	rjmp	.+4      	; 0x13b4 <vfprintf+0x352>
    13b0:	88 e5       	ldi	r24, 0x58	; 88
    13b2:	90 e0       	ldi	r25, 0x00	; 0
    13b4:	b6 01       	movw	r22, r12
    13b6:	0c c0       	rjmp	.+24     	; 0x13d0 <vfprintf+0x36e>
    13b8:	8a 2d       	mov	r24, r10
    13ba:	86 78       	andi	r24, 0x86	; 134
    13bc:	59 f0       	breq	.+22     	; 0x13d4 <vfprintf+0x372>
    13be:	a1 fe       	sbrs	r10, 1
    13c0:	02 c0       	rjmp	.+4      	; 0x13c6 <vfprintf+0x364>
    13c2:	8b e2       	ldi	r24, 0x2B	; 43
    13c4:	01 c0       	rjmp	.+2      	; 0x13c8 <vfprintf+0x366>
    13c6:	80 e2       	ldi	r24, 0x20	; 32
    13c8:	a7 fc       	sbrc	r10, 7
    13ca:	8d e2       	ldi	r24, 0x2D	; 45
    13cc:	b6 01       	movw	r22, r12
    13ce:	90 e0       	ldi	r25, 0x00	; 0
    13d0:	0e 94 38 0a 	call	0x1470	; 0x1470 <fputc>
    13d4:	89 14       	cp	r8, r9
    13d6:	38 f4       	brcc	.+14     	; 0x13e6 <vfprintf+0x384>
    13d8:	b6 01       	movw	r22, r12
    13da:	80 e3       	ldi	r24, 0x30	; 48
    13dc:	90 e0       	ldi	r25, 0x00	; 0
    13de:	0e 94 38 0a 	call	0x1470	; 0x1470 <fputc>
    13e2:	9a 94       	dec	r9
    13e4:	f7 cf       	rjmp	.-18     	; 0x13d4 <vfprintf+0x372>
    13e6:	8a 94       	dec	r8
    13e8:	f3 01       	movw	r30, r6
    13ea:	e8 0d       	add	r30, r8
    13ec:	f1 1d       	adc	r31, r1
    13ee:	80 81       	ld	r24, Z
    13f0:	b6 01       	movw	r22, r12
    13f2:	90 e0       	ldi	r25, 0x00	; 0
    13f4:	0e 94 38 0a 	call	0x1470	; 0x1470 <fputc>
    13f8:	81 10       	cpse	r8, r1
    13fa:	f5 cf       	rjmp	.-22     	; 0x13e6 <vfprintf+0x384>
    13fc:	22 20       	and	r2, r2
    13fe:	09 f4       	brne	.+2      	; 0x1402 <vfprintf+0x3a0>
    1400:	42 ce       	rjmp	.-892    	; 0x1086 <vfprintf+0x24>
    1402:	b6 01       	movw	r22, r12
    1404:	80 e2       	ldi	r24, 0x20	; 32
    1406:	90 e0       	ldi	r25, 0x00	; 0
    1408:	0e 94 38 0a 	call	0x1470	; 0x1470 <fputc>
    140c:	2a 94       	dec	r2
    140e:	f6 cf       	rjmp	.-20     	; 0x13fc <vfprintf+0x39a>
    1410:	f6 01       	movw	r30, r12
    1412:	86 81       	ldd	r24, Z+6	; 0x06
    1414:	97 81       	ldd	r25, Z+7	; 0x07
    1416:	02 c0       	rjmp	.+4      	; 0x141c <vfprintf+0x3ba>
    1418:	8f ef       	ldi	r24, 0xFF	; 255
    141a:	9f ef       	ldi	r25, 0xFF	; 255
    141c:	2b 96       	adiw	r28, 0x0b	; 11
    141e:	e2 e1       	ldi	r30, 0x12	; 18
    1420:	0c 94 ee 0a 	jmp	0x15dc	; 0x15dc <__epilogue_restores__>

00001424 <strnlen_P>:
    1424:	fc 01       	movw	r30, r24
    1426:	05 90       	lpm	r0, Z+
    1428:	61 50       	subi	r22, 0x01	; 1
    142a:	70 40       	sbci	r23, 0x00	; 0
    142c:	01 10       	cpse	r0, r1
    142e:	d8 f7       	brcc	.-10     	; 0x1426 <strnlen_P+0x2>
    1430:	80 95       	com	r24
    1432:	90 95       	com	r25
    1434:	8e 0f       	add	r24, r30
    1436:	9f 1f       	adc	r25, r31
    1438:	08 95       	ret

0000143a <strnlen>:
    143a:	fc 01       	movw	r30, r24
    143c:	61 50       	subi	r22, 0x01	; 1
    143e:	70 40       	sbci	r23, 0x00	; 0
    1440:	01 90       	ld	r0, Z+
    1442:	01 10       	cpse	r0, r1
    1444:	d8 f7       	brcc	.-10     	; 0x143c <strnlen+0x2>
    1446:	80 95       	com	r24
    1448:	90 95       	com	r25
    144a:	8e 0f       	add	r24, r30
    144c:	9f 1f       	adc	r25, r31
    144e:	08 95       	ret

00001450 <strrev>:
    1450:	dc 01       	movw	r26, r24
    1452:	fc 01       	movw	r30, r24
    1454:	67 2f       	mov	r22, r23
    1456:	71 91       	ld	r23, Z+
    1458:	77 23       	and	r23, r23
    145a:	e1 f7       	brne	.-8      	; 0x1454 <strrev+0x4>
    145c:	32 97       	sbiw	r30, 0x02	; 2
    145e:	04 c0       	rjmp	.+8      	; 0x1468 <strrev+0x18>
    1460:	7c 91       	ld	r23, X
    1462:	6d 93       	st	X+, r22
    1464:	70 83       	st	Z, r23
    1466:	62 91       	ld	r22, -Z
    1468:	ae 17       	cp	r26, r30
    146a:	bf 07       	cpc	r27, r31
    146c:	c8 f3       	brcs	.-14     	; 0x1460 <strrev+0x10>
    146e:	08 95       	ret

00001470 <fputc>:
    1470:	0f 93       	push	r16
    1472:	1f 93       	push	r17
    1474:	cf 93       	push	r28
    1476:	df 93       	push	r29
    1478:	fb 01       	movw	r30, r22
    147a:	23 81       	ldd	r18, Z+3	; 0x03
    147c:	21 fd       	sbrc	r18, 1
    147e:	03 c0       	rjmp	.+6      	; 0x1486 <fputc+0x16>
    1480:	8f ef       	ldi	r24, 0xFF	; 255
    1482:	9f ef       	ldi	r25, 0xFF	; 255
    1484:	2c c0       	rjmp	.+88     	; 0x14de <fputc+0x6e>
    1486:	22 ff       	sbrs	r18, 2
    1488:	16 c0       	rjmp	.+44     	; 0x14b6 <fputc+0x46>
    148a:	46 81       	ldd	r20, Z+6	; 0x06
    148c:	57 81       	ldd	r21, Z+7	; 0x07
    148e:	24 81       	ldd	r18, Z+4	; 0x04
    1490:	35 81       	ldd	r19, Z+5	; 0x05
    1492:	42 17       	cp	r20, r18
    1494:	53 07       	cpc	r21, r19
    1496:	44 f4       	brge	.+16     	; 0x14a8 <fputc+0x38>
    1498:	a0 81       	ld	r26, Z
    149a:	b1 81       	ldd	r27, Z+1	; 0x01
    149c:	9d 01       	movw	r18, r26
    149e:	2f 5f       	subi	r18, 0xFF	; 255
    14a0:	3f 4f       	sbci	r19, 0xFF	; 255
    14a2:	31 83       	std	Z+1, r19	; 0x01
    14a4:	20 83       	st	Z, r18
    14a6:	8c 93       	st	X, r24
    14a8:	26 81       	ldd	r18, Z+6	; 0x06
    14aa:	37 81       	ldd	r19, Z+7	; 0x07
    14ac:	2f 5f       	subi	r18, 0xFF	; 255
    14ae:	3f 4f       	sbci	r19, 0xFF	; 255
    14b0:	37 83       	std	Z+7, r19	; 0x07
    14b2:	26 83       	std	Z+6, r18	; 0x06
    14b4:	14 c0       	rjmp	.+40     	; 0x14de <fputc+0x6e>
    14b6:	8b 01       	movw	r16, r22
    14b8:	ec 01       	movw	r28, r24
    14ba:	fb 01       	movw	r30, r22
    14bc:	00 84       	ldd	r0, Z+8	; 0x08
    14be:	f1 85       	ldd	r31, Z+9	; 0x09
    14c0:	e0 2d       	mov	r30, r0
    14c2:	09 95       	icall
    14c4:	89 2b       	or	r24, r25
    14c6:	e1 f6       	brne	.-72     	; 0x1480 <fputc+0x10>
    14c8:	d8 01       	movw	r26, r16
    14ca:	16 96       	adiw	r26, 0x06	; 6
    14cc:	8d 91       	ld	r24, X+
    14ce:	9c 91       	ld	r25, X
    14d0:	17 97       	sbiw	r26, 0x07	; 7
    14d2:	01 96       	adiw	r24, 0x01	; 1
    14d4:	17 96       	adiw	r26, 0x07	; 7
    14d6:	9c 93       	st	X, r25
    14d8:	8e 93       	st	-X, r24
    14da:	16 97       	sbiw	r26, 0x06	; 6
    14dc:	ce 01       	movw	r24, r28
    14de:	df 91       	pop	r29
    14e0:	cf 91       	pop	r28
    14e2:	1f 91       	pop	r17
    14e4:	0f 91       	pop	r16
    14e6:	08 95       	ret

000014e8 <__ultoa_invert>:
    14e8:	fa 01       	movw	r30, r20
    14ea:	aa 27       	eor	r26, r26
    14ec:	28 30       	cpi	r18, 0x08	; 8
    14ee:	51 f1       	breq	.+84     	; 0x1544 <__ultoa_invert+0x5c>
    14f0:	20 31       	cpi	r18, 0x10	; 16
    14f2:	81 f1       	breq	.+96     	; 0x1554 <__ultoa_invert+0x6c>
    14f4:	e8 94       	clt
    14f6:	6f 93       	push	r22
    14f8:	6e 7f       	andi	r22, 0xFE	; 254
    14fa:	6e 5f       	subi	r22, 0xFE	; 254
    14fc:	7f 4f       	sbci	r23, 0xFF	; 255
    14fe:	8f 4f       	sbci	r24, 0xFF	; 255
    1500:	9f 4f       	sbci	r25, 0xFF	; 255
    1502:	af 4f       	sbci	r26, 0xFF	; 255
    1504:	b1 e0       	ldi	r27, 0x01	; 1
    1506:	3e d0       	rcall	.+124    	; 0x1584 <__ultoa_invert+0x9c>
    1508:	b4 e0       	ldi	r27, 0x04	; 4
    150a:	3c d0       	rcall	.+120    	; 0x1584 <__ultoa_invert+0x9c>
    150c:	67 0f       	add	r22, r23
    150e:	78 1f       	adc	r23, r24
    1510:	89 1f       	adc	r24, r25
    1512:	9a 1f       	adc	r25, r26
    1514:	a1 1d       	adc	r26, r1
    1516:	68 0f       	add	r22, r24
    1518:	79 1f       	adc	r23, r25
    151a:	8a 1f       	adc	r24, r26
    151c:	91 1d       	adc	r25, r1
    151e:	a1 1d       	adc	r26, r1
    1520:	6a 0f       	add	r22, r26
    1522:	71 1d       	adc	r23, r1
    1524:	81 1d       	adc	r24, r1
    1526:	91 1d       	adc	r25, r1
    1528:	a1 1d       	adc	r26, r1
    152a:	20 d0       	rcall	.+64     	; 0x156c <__ultoa_invert+0x84>
    152c:	09 f4       	brne	.+2      	; 0x1530 <__ultoa_invert+0x48>
    152e:	68 94       	set
    1530:	3f 91       	pop	r19
    1532:	2a e0       	ldi	r18, 0x0A	; 10
    1534:	26 9f       	mul	r18, r22
    1536:	11 24       	eor	r1, r1
    1538:	30 19       	sub	r19, r0
    153a:	30 5d       	subi	r19, 0xD0	; 208
    153c:	31 93       	st	Z+, r19
    153e:	de f6       	brtc	.-74     	; 0x14f6 <__ultoa_invert+0xe>
    1540:	cf 01       	movw	r24, r30
    1542:	08 95       	ret
    1544:	46 2f       	mov	r20, r22
    1546:	47 70       	andi	r20, 0x07	; 7
    1548:	40 5d       	subi	r20, 0xD0	; 208
    154a:	41 93       	st	Z+, r20
    154c:	b3 e0       	ldi	r27, 0x03	; 3
    154e:	0f d0       	rcall	.+30     	; 0x156e <__ultoa_invert+0x86>
    1550:	c9 f7       	brne	.-14     	; 0x1544 <__ultoa_invert+0x5c>
    1552:	f6 cf       	rjmp	.-20     	; 0x1540 <__ultoa_invert+0x58>
    1554:	46 2f       	mov	r20, r22
    1556:	4f 70       	andi	r20, 0x0F	; 15
    1558:	40 5d       	subi	r20, 0xD0	; 208
    155a:	4a 33       	cpi	r20, 0x3A	; 58
    155c:	18 f0       	brcs	.+6      	; 0x1564 <__ultoa_invert+0x7c>
    155e:	49 5d       	subi	r20, 0xD9	; 217
    1560:	31 fd       	sbrc	r19, 1
    1562:	40 52       	subi	r20, 0x20	; 32
    1564:	41 93       	st	Z+, r20
    1566:	02 d0       	rcall	.+4      	; 0x156c <__ultoa_invert+0x84>
    1568:	a9 f7       	brne	.-22     	; 0x1554 <__ultoa_invert+0x6c>
    156a:	ea cf       	rjmp	.-44     	; 0x1540 <__ultoa_invert+0x58>
    156c:	b4 e0       	ldi	r27, 0x04	; 4
    156e:	a6 95       	lsr	r26
    1570:	97 95       	ror	r25
    1572:	87 95       	ror	r24
    1574:	77 95       	ror	r23
    1576:	67 95       	ror	r22
    1578:	ba 95       	dec	r27
    157a:	c9 f7       	brne	.-14     	; 0x156e <__ultoa_invert+0x86>
    157c:	00 97       	sbiw	r24, 0x00	; 0
    157e:	61 05       	cpc	r22, r1
    1580:	71 05       	cpc	r23, r1
    1582:	08 95       	ret
    1584:	9b 01       	movw	r18, r22
    1586:	ac 01       	movw	r20, r24
    1588:	0a 2e       	mov	r0, r26
    158a:	06 94       	lsr	r0
    158c:	57 95       	ror	r21
    158e:	47 95       	ror	r20
    1590:	37 95       	ror	r19
    1592:	27 95       	ror	r18
    1594:	ba 95       	dec	r27
    1596:	c9 f7       	brne	.-14     	; 0x158a <__ultoa_invert+0xa2>
    1598:	62 0f       	add	r22, r18
    159a:	73 1f       	adc	r23, r19
    159c:	84 1f       	adc	r24, r20
    159e:	95 1f       	adc	r25, r21
    15a0:	a0 1d       	adc	r26, r0
    15a2:	08 95       	ret

000015a4 <__prologue_saves__>:
    15a4:	2f 92       	push	r2
    15a6:	3f 92       	push	r3
    15a8:	4f 92       	push	r4
    15aa:	5f 92       	push	r5
    15ac:	6f 92       	push	r6
    15ae:	7f 92       	push	r7
    15b0:	8f 92       	push	r8
    15b2:	9f 92       	push	r9
    15b4:	af 92       	push	r10
    15b6:	bf 92       	push	r11
    15b8:	cf 92       	push	r12
    15ba:	df 92       	push	r13
    15bc:	ef 92       	push	r14
    15be:	ff 92       	push	r15
    15c0:	0f 93       	push	r16
    15c2:	1f 93       	push	r17
    15c4:	cf 93       	push	r28
    15c6:	df 93       	push	r29
    15c8:	cd b7       	in	r28, 0x3d	; 61
    15ca:	de b7       	in	r29, 0x3e	; 62
    15cc:	ca 1b       	sub	r28, r26
    15ce:	db 0b       	sbc	r29, r27
    15d0:	0f b6       	in	r0, 0x3f	; 63
    15d2:	f8 94       	cli
    15d4:	de bf       	out	0x3e, r29	; 62
    15d6:	0f be       	out	0x3f, r0	; 63
    15d8:	cd bf       	out	0x3d, r28	; 61
    15da:	09 94       	ijmp

000015dc <__epilogue_restores__>:
    15dc:	2a 88       	ldd	r2, Y+18	; 0x12
    15de:	39 88       	ldd	r3, Y+17	; 0x11
    15e0:	48 88       	ldd	r4, Y+16	; 0x10
    15e2:	5f 84       	ldd	r5, Y+15	; 0x0f
    15e4:	6e 84       	ldd	r6, Y+14	; 0x0e
    15e6:	7d 84       	ldd	r7, Y+13	; 0x0d
    15e8:	8c 84       	ldd	r8, Y+12	; 0x0c
    15ea:	9b 84       	ldd	r9, Y+11	; 0x0b
    15ec:	aa 84       	ldd	r10, Y+10	; 0x0a
    15ee:	b9 84       	ldd	r11, Y+9	; 0x09
    15f0:	c8 84       	ldd	r12, Y+8	; 0x08
    15f2:	df 80       	ldd	r13, Y+7	; 0x07
    15f4:	ee 80       	ldd	r14, Y+6	; 0x06
    15f6:	fd 80       	ldd	r15, Y+5	; 0x05
    15f8:	0c 81       	ldd	r16, Y+4	; 0x04
    15fa:	1b 81       	ldd	r17, Y+3	; 0x03
    15fc:	aa 81       	ldd	r26, Y+2	; 0x02
    15fe:	b9 81       	ldd	r27, Y+1	; 0x01
    1600:	ce 0f       	add	r28, r30
    1602:	d1 1d       	adc	r29, r1
    1604:	0f b6       	in	r0, 0x3f	; 63
    1606:	f8 94       	cli
    1608:	de bf       	out	0x3e, r29	; 62
    160a:	0f be       	out	0x3f, r0	; 63
    160c:	cd bf       	out	0x3d, r28	; 61
    160e:	ed 01       	movw	r28, r26
    1610:	08 95       	ret

00001612 <_exit>:
    1612:	f8 94       	cli

00001614 <__stop_program>:
    1614:	ff cf       	rjmp	.-2      	; 0x1614 <__stop_program>
